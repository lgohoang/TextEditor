 LỜI_NÓI_ĐẦU Nhận_dạng là bài_toán xuất_hiện cách đây khá lâu và vẫn luôn thu_hút được nhiều sự quan_tâm , nghiên_cứu . Đặc_biệt là trong vài thập_niên gần đây , do sự thúc_đẩy của quá_trình tin_học_hoá trong mọi lĩnh_vực , bài_toán nhận_dạng không còn dừng lại ở mức_độ nghiên_cứu nữa mà nó trở_thành một lĩnh_vực để áp_dụng vào thực_tế . Các bài_toán nhận_dạng đang được ứng_dụng trong thực_tế hiện_nay tập_trung vào nhận_dạng mẫu , nhận_dạng tiếng_nói và nhận_dạng chữ . Trong số này , nhận_dạng chữ là bài_toán được quan_tâm rất nhiều và cũng đã đạt được nhiều thành_tựu rực_rỡ . Các ứng_dụng có ý_nghĩa thực_tế lớn có_thể kể đến như : nhận_dạng chữ in dùng trong quá_trình sao lưu sách_báo trong thư_viện , nhận_dạng chữ_viết tay dùng trong việc phân_loại thư ở bưu_điện , thanh_toán tiền trong nhà_băng và lập thư_viện sách cho người mù ( ứng_dụng này có_nghĩa : scan sách bình_thường , sau đó cho máy_tính nhận_dạng và trả về dạng tài_liệu mà người mù có_thể đọc được ) . Nhu_cầu thực_tế cho thấy , nhập liệu thông_tin của các đối_tượng từ một tập các biểu_mẫu có định_dạng giống nhau rất mất nhiều thời_gian cũng_như công_sức của người nhập liêu , làm cho năng_suất công_việc thấp . Việc ứng_dụng nhận_dạng ký_tự trong biểu_mẫu số_hóa giúp cho công_việc nhập liệu trở_nên dễ_dàng và thực_hiện một_cách nhanh_chóng , tiết kiểm thời_gian cũng_như công_sức của con_người . Cùng_với xu_hướng công_nghệ trong tương_lai “ Internet of things ” , dữ_liệu dễ_dàng được chia_sẻ trực_tuyến thông_qua mạng internet một_cách thuận_tiện . Xuất_phát từ yêu_cầu thực_tế , chúng_em đã chọn đề_tài xây_dựng hệ_thống số_hóa biểu_mẫu trực_tuyến , hệ_thống hỗ_trợ nhập liệu một_cách nhanh_chóng và chính_xác với dữ_liệu biểu_mẫu scan được lấy trên google drive , và dữ_liệu sau khi trích xuất ( thông_tin nhập liệu ) sẽ được lưu trên CSDL local và được đồng_bộ lên goolge cloud . Em xin chân_thành cảm_ơn thầy_giáo T.S.Nguyễn Văn_Giang , cô_giáo Nguyễn_Hoài_Anh , và các thầy_cô_giáo trong bộ_môn Hệ_thống thông_tin , đã nhiệt_tình giúp_đỡ em hoàn_thành đề_tài này . Do kinh_nghiệm và kiến_thức còn hạn_chế , trong quá_trình xây_dựng ứng_dụng vẫn còn nhiều thiếu_sót . Em kính mong nhận được sự giúp_đỡ nhiều hơn_nữa của thầy_cô_giáo và các bạn để đề_tài và kiến_thức bản_thân được hoàn_thiện hơn . Em xin chân_thành cảm_ơn ! Người thực_hiện Nguyễn_Thị_Hằng_Hoàng_Thị_Anh_Chương 1 KHẢO_SÁT_HỆ_THỐNG Mô_tả hệ_thống Nhiệm_vụ cơ_bản Tin_học_hoá trong công_tác quản_lý , nhập liệu nhằm giảm bớt sức_lao_động , tiết_kiệm được thời_gian , có độ_chính_xác cao , gọn_nhẹ , tiện_lợi . Hệ_thống số_hóa biểu_mẫu trực_tuyến là hệ_thống trích xuất các thông_tin từ hình_ảnh biểu_mẫu được lưu trên google drive , sau đó các thông_tin trích xuất được đưa vào cở dữ_liệu SQL server . Cơ_cấu tổ_chức Hệ_thống gồm 2 bộ_phận : Bộ_phận quản_lý biểu_mẫu : bộ_phận này có chứ năng cơ_bản sau : Scan biểu_mẫu được giao , tạo biểu_mẫu , chuẩn_hóa và đưa ảnh lên google drive , định_dạng biểu_mẫu . Bộ_phận nhập liệu : Bộ_phận này có chức_năng chọn biểu_mẫu và danh_sách các biểu_mẫu cần nhập liệu , trích xuất thông_tin cần nhập liệu từ biểu_mẫu , kiểm_tra và chỉnh_sửa nếu sai , sau đố lưu_thông tin nhận_dạng vào CSDL . Quy_trình xử_lý và quy_tắc quản_lý Quy_trình xử_lý Nghiệp_vụ quản_lý hình_ảnh biểu_mẫu Khi có nhu_cầu nhập liệu , Ban quản_lý giao cho bộ_phận nhập liệu các biểu_mẫu cần nhập liệu , và thông_tin các trường cần trích xuất trong biểu_mẫu . Bộ_phận quản_lý hình_ảnh biểu_mẫu dựa vào phiếu giao biểu_mẫu kiểm_tra số_lượng hồ_sơ trên một loại mẫu_biểu tiếp_nhận , thông_tin các trường , thời_hạn nhập liệu . Mỗi_một phiếu giao biểu_mẫu tương_ứng với một loại biểu_mẫu . Nếu các hồ_sơ của một biểu_mẫu nhận được là bản cứng thì mang đi scan để thu được các tệp hồ_sơ ở dạng_hình ảnh scan . Phân_loại và tổ_chức các tệp hồ_sơ dạng scan theo từng loại biểu_mẫu . Dựa vào các phiếu giao biểu_mẫu người_quản_lý bộ_phận quản_lý hình_ảnh biểu_mẫu phân_chia cho các nhân_viên thực_hiện upload các tệp hình_ảnh theo từng biểu_mẫu lên google drive . Nhân_viên tiếp_nhận phiếu giao biểu_mẫu , tiến_hành kiểm_tra biểu_mẫu này đã tồn_tại trong hệ_thống chưa , nếu chưa thì sẽ tạo biểu_mẫu mới trước khi upload , nếu biểu_mẫu đã có ta chọn biểu_mẫu và tiến_hành upload . Tiếp_theo là upload hình_ảnh biểu_mẫu lên google drive . Trước_tiên chọn biểu_mẫu cần upload ảnh lên , nếu biểu_mẫu này chưa có ảnh nào được upload lên google drive , thì tạo một folder mới chứa tất_cả các ảnh thuộc loại biểu_mẫu này trên google drive , với tên folder được đặt theo quy_tắc mã biểu_mẫu . Sau đó chọn hình_ảnh biểu_mẫu upload lên google drive , hệ_thống hỗ_trợ hai cách bạn có_thể chọn cả folder hoặc chọn các file ảnh muốn upload . Tất_cả các ảnh này sau khi được chọn sẽ tự_động được chuẩn_hóa thành các hình_ảnh biểu_mẫu chuẩn có cùng kích_thước trước khi đưa vào nhận_dạng . Sau đó chúng sẽ được đẩy vào folder của loại biểu_mẫu đã chọn trên google drive . Mọi thông_tin upload ảnh sẽ được lưu trong cơ_sở_dữ_liệu . Sau khi upload các hình_ảnh lên google drive , nhân_viên định_dạng cho biểu_mẫu mới nếu có , nếu biểu_mẫu yêu_cầu nhập liệu là biểu_mẫu cũ nhân_viên kiểm_tra lại và so_sánh xem có sự thay_đổi về các trường cần nhận_dạng không . Nếu có thì nhân_viên chỉnh_sửa định_dạng biểu_mẫu cho đúng với phiếu giao biểu_mẫu yêu_cầu , nếu_không có gì thay đồi thì không cần chỉnh_sửa . Dựa trên thông_tin trong phiếu giao biểu_mẫu , và một hình_ảnh biểu_mẫu đại_diện cho loại biểu_mẫu đó , nhân_viên tiến_hành định_dạng , nghĩa_là xác_định các trường yêu_cầu nhập liệu và tọa_độ các vùng cần nhập liệu . Mỗi biểu_mẫu có bao_nhiêu trường cần nhập liệu thì sẽ có bấy_nhiêu vùng nhận_dạng . Mỗi vùng nhận_dạng sẽ có các thông_tin về tọa_độ điểm bắt_đầu nhận_dạng , chiều rộng và chiều dài vùng nhận_dạng , tên trường trích xuất vị_trí của trường đó tương_ứng trên biểu_mẫu . Sau khi định_nghĩa xong tất_cả các trường cần nhập liệu , nhân_viên hoàn_tất việc định_dạng biểu_mẫu và tạo ra bảng dữ_liệu dùng trong nghiệp_vụ nhập liệu để lưu các thông_tin trích xuất của mỗi biểu_mẫu . Nghiệp_vụ nhập liệu : Sau khi bộ_phận quản_lý biểu_mẫu hoàn_thành việc định_dạng biểu_mẫu , sẽ gửi yêu_cầu xuống bộ phân nhập liệu , nhân_viên bộ_phận sẽ lấy ảnh trên Google drive đưa vào nhận_dạng . Các ảnh đưa vào nhận_dạng đều là những ảnh chưa được nhập liệu . Trước_tiên , nhân_viên nhập liệu sẽ chọn loại biểu_mẫu muốn nhập liệu . Các hình_ảnh được lấy ra là các file ảnh chưa được nhận_dạng của biểu_mẫu đã chọn . Sau khi chọn biểu_mẫu nhận_dạng , tiến_hành nhập liệu cho từng hình_ảnh . Dựa trên các thông_tin định_dạng biểu_mẫu cho loại biểu_mẫu này , hệ_thống sẽ hiển_thị hình_ảnh biểu_mẫu nhập liệu và các trường tương_ứng chứa thông_tin trích xuất ra khi nhận_dạng . Sau khi ấn nhận_dạng , hệ_thống sẽ tự_động trích xuất các thông_tin từ ảnh và hiển_thị lên các trường tương_ứng để người dùng có_thể chỉnh_sửa lại . Những thông_tin được trích xuất trong hình_ảnh sẽ được highlight để người nhập liệu dễ_dàng kiểm_tra và chỉnh xửa lại nếu thông_tin sai . Sau khi chắc_chắn thông_tin đã chính_xác , người dùng sẽ lưu_thông tin nhận_dạng được vào trong bảng dữ_liệu tương_ứng với loại biểu_mẫu này đã được tạo ra khi định_dạng biểu_mẫu , ảnh sẽ được cập_nhật lại trạng_thái thành đã được nhập liệu . Nhập liệu cho_đến khi hết ảnh chưa được nhận_dạng thuộc biểu_mẫu đó . Quy_tắc quản_lý Hệ_thống áp_dụng các quy_tắc sau : Những nhân_viên thuộc bộ_phận quản_lý ảnh đưa ảnh lên goole drive phải đưa ảnh thông_qua giao_diện của ứng_dụng , nhằm kiểm_soát được dữ_liệu đầu_vào được đưa lên ở đâu với người dùng là ai . Mỗi_một folder trên google drive chứa tất_cả các hình_ảnh thuộc cùng một biểu_mẫu , tên folder được đặt theo quy_tắc mã biểu_mẫu Các hình_ảnh thuộc cùng một loại biểu_mẫu phải có cùng định_dạng . Biểu_mẫu Mẫu phiếu giao biểu_mẫu : PHIẾU_GIAO_BIỂU_MẪU Số phiếu : … … … … … … Ngày giao : xx/xx/xxxx Mã biểu_mẫu : … … … … … … … … … … … … … … … … … … . Tên_Biểu mẫu : … … … … … … … … … … … … … … … … … ... . Người giao : … … … … … … … … … … … … … … … … … … … Số_lượng : … … … … … … … … … … … … … … … … … … … … Trường trích xuất : - Trường 1 … … … … … . - Trường 2 … … … … … . . … … … … … … … … ... ... . Ngày hoàn_thành : … … … … … … … … … … … … … … … … . . Người giao Người nhận Chữ_ký quản_lý bộ_phận … … … … . . . … … … … … . … … … … … … … … Hình 1.1 Biểu_mẫu Phiếu giao biểu_mẫu Mô_hình_hóa hệ_thống Mô_hình tiến_trình nghiệp_vụ Ký_hiệu sử_dụng Hình 1.2 Ký_hiệu sử_dụng vẽ mô_hình tiến_trình nghiệp_vụ Vẽ mô_hình Hình 1.3 Mô_hình tiến_trình nghiệp_vụ Biểu_đồ hoạt_động Ký_hiệu sử_dụng Hình 1.4 Ký_hiệu sử_dụng trong biểu_đồ hoạt_động Vẽ biểu_đồ hoạt_động Đưa ảnh lên google drive Hình 1.5 Biểu_đồ hoạt_động upload hình_ảnh Định_dạng biểu_mẫu Hình 1.6 Biểu_đồ hoạt_động định_dạng biểu_mẫu Nhập liệu Hình 1.7 Biểu_đồ hoạt_động nhập liệu Chương 2 PHÂN_TÍCH_HỆ_THỐNG Phân_tích chức_năng nghiệp_vụ Sơ_đồ phân_rã chức_năng Mô_tả các bước thực_hiện Xác đinh các chức_năng chi_tiết : Dựa vào hành_động được mô_tả trong quy_trình nghiệp_vụ để xác_định và đưa ra các chức_năng chi_tiết . Loại_bỏ các chức_năng trùng_lặp từ danh dách chức_năng vừa xác_định Gom nhóm các chức_năng đơn_giản Loại_bỏ các chức_năng không có ý_nghĩa dối với hệ_thống Chuẩn_hóa tên chức_năng Gom nhóm các chức_năng đã chuẩn_hóa theo cơ_cấu tổ_chức hoặc theo từng nghiệp_vụ Vẽ sơ_đồ phân_rã chức_năng . Vẽ mô_hình Hình 2.1 Sơ_đồ phân_rã chức_năng Sơ_đồ luồng dữ_liệu Ký_hiệu sử_dụng Hình 2.2 Ký_hiệu sử_dụng vẽ Sơ_đồ luồng dữ_liệu DFD mức khung_cảnh Hình 2.3 DFD mức khung_cảnh DFD mức đỉnh Hình 2.4 DFD mức đỉnh DFD mức dưới đỉnh Quản_lý hình_ảnh biểu_mẫu Hình 2.5 DFD Quản_lý hình_ảnh biểu_mẫu Đặc_tả tiến_trình nghiệp_vụ Scan các mẫu_biểu Đầu_vào : phiếu giao biểu_mẫu , hồ_sơ biểu_mẫu bản cứng Đầu_ra : Tệp hồ_sơ biểu_mẫu scan Nội_dung xử_lý : Lặp : Lấy một phiếu giao biểu_mẫu + tập hồ_sơ của biểu_mẫu tương_ứng sau đó kiểm_tra số_lượng hồ_sơ , sau khi kiểm_tra xong ký xác_nhận Đến khi : xử_lý hết các biểu_mẫu thì mang tất_cả các tập hồ_sơ đi scan và sắp_xếp , phân_loại theo từng loại biểu_mẫu Tạo biểu_mẫu mới Đầu_vào : phiếu giao biểu_mẫu Đầu_ra : Biểu_mẫu mới Nội_dung xử_lý : Lặp : Với mỗi_một phiếu giao biểu_mẫu , ta kiểm_tra xem biểu_mẫu đã được tạo chưa ( hay nó đã tồn_tại trong hệ_thống chứa ) , Nếu chưa ta tiến_hành tạo một biểu_mẫu mới với các thông_tin mã biểu_mẫu , và tên biểu_mẫu dựa trên phiếu giao biểu_mẫu . Đến khi : Xử_lý hết tất_cả các phiếu giao biểu_mẫu . Upload hình_ảnh biểu_mẫu Đầu_vào : Tệp hình_ảnh scan , Biểu_mẫu Đầu_ra : Hình_ảnh – BM , Biểu_mẫu Nội_dung xử_lý : Lặp : Đầu_tiên phải chọn biểu_mẫu muốn upload ảnh lên , sau khi chọn biểu_mẫu , chọn các file hình_ảnh scan cần upload rồi upload vào thư_mục chứa biểu_mẫu trong google drive Đến khi : hết các file ảnh thuộc biểu_mẫu đó cần upload , cập_nhật trạng_thái Biểu_mẫu thành biểu_mẫu đã được upload ảnh nếu biểu_mẫu lần đầu_tiên upload ảnh . Đến khi : hết các biểu_mẫu cần upload ảnh . Định_dạng biểu_mẫu Đầu_vào : Biểu_mẫu , phiếu giao biểu_mẫu , Hình_ảnh - BM Đầu_ra : CT-biểu mẫu , Biểu_mẫu Nội_dung xử_lý : Lặp : Chọn biểu_mẫu định_dạng , dựa vào thông_tin cần trích xuất từ phiếu giao biểu_mẫu để xác_định tạo độ từng vùng thông_tin cần nhận_dạng trong biểu_mẫu . Đến khi : hết các trường cần trích xuất , sau đó cập_nhật trạng_thái biểu_mẫu . Đến khi : xử_lý hết các biểu_mẫu cần định_dạng Nhập liêu Đầu_vào : Hình_ảnh - BM , Biểu_mẫu , CT-Biểu mẫu Đầu_ra : Thông_tin nhập liệu , Hình_ảnh - BM Nội_dung xử_lý : Lặp : Chọn biểu_mẫu cần nhập liệu , Sau đó nhập liệu cho từng hình_ảnh chưa được nhận_dạng , trích xuất các vùng thông_tin cần nhận_dạng của biểu_mẫu đã xác_định , đưa vào ô nhập liệu , chỉnh_sửa nếu thông_tin chưa chính_xác , sau đó lưu_trữ lại thông_tin nhập liệu và cập nhâp trạng_thái Hình_ảnh – BM . Đến khi : Hết hình_ảnh cần nhận_dạng Đến khi : hết Biểu_mẫu cần nhập liệu Phân_tích dữ_liệu nghiệp_vụ Mô_hình dữ_liệu ban_đầu Các bước để xác_định mô_hình dữ_liệu ban_đầu : Dựa vào quy_trình xử_lý và số_lượng biểu_mẫu để xác đinh được số_lượng thực_thể . Dựa vào nội_dung thông_tin của các biểu_mẫu để ta xác đinh được các thuộc_tính của từng thực_thể . Ký_hiệu sử_dụng Hình 2.6 Ký_hiệu sử_dụng trong mô_hình ER mở_rộng Vẽ mô_hình Hình 2.7 Mô_hình ER mở_rộng Chuẩn_hóa dữ_liệu Các bước chuẩn_hóa CSDL Từ mô_hình ER mở_rộng chuyển thành mô_hình ER kinh_điển Xác_định và xử_lý các thuộc_tính đa trị của thực_thể Xác_định và xử_lý các thuộc_tính không sở đẳng Xác_định khóa cho các thực_thể chính Từ mô_hình ER kinh_điển chuyển thành mô_hình ER hạn_chế Khử các liên_kết 1-1 Xác_định khóa ngoại cho thực_thể nếu có Xác đinh khóa chính cho các thực_thể còn lại Từ mô_hình ER hạn_chế chuyển thành mô_hình ER quan_hệ Mã_hóa kiểu thực_thể thành bảng quan_hệ : mỗi kiểu thực_thể thành một bảng quan_hệ Mã_hóa kiểu thuộc_tính thành trường dữ_liệu : Kiểu thuộc_tính khóa chuyển sang bảng tương_ứng Kiểu thuộc_tính mô_tả : nếu là thuộc_tính kết xuất thì bỏ đi , nếu thuộc_tính xuất_hiện ở một thực_thể thì chuyển thành bảng tương_ứng , nếu xuât hiện ở nhiều bảng chính . Ký_hiệu sử_dụng Hình 2.8 Ký_hiệu sử_dụng trong mô_hình ER quan_hệ Mô_hình dữ_liệu quan_hệ sau khi chuẩn_hóa Hình 2.9 Mô_hình ER hạn_chế Đặc_tả bảng dữ_liệu quan_hệ Bảng 2.1 BIEUMAU_STT Khóa chính Khóa ngoại Tên trường Kiêu dữ_liệu Diễn_Giải 1 X_IDB ieuMau C ( 10 ) Mã_Biểu mẫu 2 TenBieuMau C ( 100 ) Tên_Biểu mẫu 3 NgayTao D ( 8 ) Ngày_Tạo_Biểu mẫu 4 NguoiTao C ( 20 ) Người tọa Biểu_mẫu 5 TrangThaiBM N ( 1 ) Trạng_thái biểu_mẫu Bảng 2.2 CT-BIEUMAU STT Khóa chính Khóa ngoại Tên trường Kiêu dữ_liệu Diễn_Giải 1 X_IDT ruong N ( 6 ) Mã trường cần nhập liệu 2 X_IDB ieuMau C ( 10 ) Mã_Biểu mẫu 3 TenTruong C ( 100 ) Tên_Trường cần nhập liệu 4 LoaiTruong C ( 50 ) Loại dữ_liệu vùng cần nhập liệu 5 ToaDoX N ( 6 ) Tọa_độ X bắt_đầu vùng cần nhập liệu 6 ToaDoY N ( 6 ) Tọa_độ Y bắt_đầu vùng cần nhập liệu 7 ChieuRong N ( 6 ) Độ rộng vùng nhập liệu theo trục X 8 ChieuCao N ( 6 ) Độ rộng vùng nhập liệu theo trục Y 9 NgayDinhDang D ( 8 ) Ngày định_dạng biểu_mẫu Bảng 2.3 HINHANH_STT Khóa chính Khóa ngoại Tên trường Kiêu dữ_liệu Diễn_Giải 1 X_IDH inhAnh N ( 6 ) Mã_Hình ảnh scan 2 X_IDB ieuMau C ( 10 ) Mã_Biểu mẫu 3 DuongDanAnh C ( 100 ) Đường_dẫn ảnh trong thư_mục google drive 4 NgayUpload D ( 8 ) Ngày_Upload ảnh 5 TrangThaiHA N ( 1 ) Trạng_thái của hình_ảnh Bảng 2.4 THONGTINNHAPLIEU_STT Khóa chính Khóa ngoại Tên trường Kiêu dữ_liệu Diễn_Giải 1 X_X_IDH inhAnh N ( 6 ) Mã_Hình ảnh 2 X_X_IDT ruong N ( 6 ) Mã trường nhận_dạng 3 NoiDung C ( 250 ) Nội_dung vùng nhập liệu 4 NgayNhap D ( 8 ) Ngày nhập liệu 5 NguoiNhap C ( 20 ) Người nhập liệu Chương 3 THIẾT_KẾ_HỆ_THỐNG Thiết_kế kiểm_soát Xác_định nhóm người dùng Các nhóm người dùng của hệ_thống Nhóm 1 : Nhóm quản_trị - kiểm_soát toàn_bộ hệ_thống , tạo tài_khoản , cấp quyền đăng_nhập cho các nhân_viên trong hệ_thống . Nhóm 2 : Nhóm_Quản lý Biểu_mẫu : Scan biểu_mẫu , tạo biểu_mẫu mới , Upload ảnh và định_dạng biểu_mẫu . Nhóm 3 : Nhóm_Nhập liệu : Trích xuất thông_tin cần nhận_dạng , chỉnh_sửa nếu cần_thiết , lưu_thông tin vào cơ_sở_dữ_liệu . DFD Hệ_thống tiến_trình của nhóm Quản_trị Hình 3.1 DFD Hệ_thống tiến_trình của nhóm Quản_trị Phân_định quyền_hạn cho nhóm người dùng Bảng 3.1 Phân_định quyền_hạn về mặt dữ_liệu Bảng_Nhóm_Quản trị Nhóm_Quản lý Biểu_mẫu Nhóm_Quản lý nhập liệu Biểu_mẫu R_CERD Chi_tiết Biểu_mẫu R_CERD Ảnh R_CERD_ER Dữ_liệu nhập R_CERD Người dùng CERD Bảng 3.2 Phân_định quyền_hạn về mặt chức_năng Tiến_trình Nhóm_Quản trị Nhóm_Quản lý Biểu_mẫu Nhóm_Quản lý nhập liệu Tạo biểu_mẫu x Lọc , tìm_kiếm biểu_mẫu x Upload ảnh x Cập_nhật thông_tin ảnh x x Định_dạng biểu_mẫu x Nhập liệu x Kiểm_tra tài_khoản đăng_nhập x Hiển_thị màn_hình quản_trị x Thay_đổi mật_khẩu quản_trị x Tạo người dùng mới x Thay_đổi mật_khẩu người dùng x X_Xóa bản ghi người dùng x Thiết_kế cơ_sở_dữ_liệu Mô_hình dữ_liệu vật_lý Xác đinh bảng dữ_liệu phục_vụ bảo_mật Có 1 bảng dữ_liệu phục_vụ bảo_mật đó là bảng User_Mô hình dữ_liệu hệ_thống Hình 3.2 Mô_hình dữ_liệu vật_lý Đặc_tả bảng dữ_liệu Bảng 3.3 User 1.Số hiệu : 1 2.Tên bảng : User 3.Bí danh : User 4 . Mô_tả : Lưu_trữ thông_tin người dùng 5 . Mô_tả chi_tiết các cột Số_Tên cột Mô_tả Kiểu dữ_liệu Khuôn_dạng N 1 UserName Tên tài_khoản người dùng C ( 20 ) Chữ_cái + chữ_số 2 Password_Mật khẩu người dùng C ( 20 ) Chữ_cái + chữ_số + ký_hiệu 3 FullName Tên đầy_đủ người dùng C ( 100 ) Chữ_cái 4 PhoneNumber Số điện_thoại người dùng C ( 11 ) Chữ_số 5 Role_Vai trò người dùng N ( 1 ) Chữ_số 6 . Khóa ngoài Số_Tên_Cột khóa ngoài Quan_hệ với bảng Bảng 3.4 Form 1.Số hiệu : 2 2.Tên bảng : Form 3.Bí danh : Form 4 . Mô_tả : Lưu_trữ thông_tin biểu_mẫu 5 . Mô_tả chi_tiết các cột Số_Tên cột Mô_tả Kiểu dữ_liệu Khuôn_dạng N 1 IdForm Mã_số biểu_mẫu C ( 10 ) Chữ_cái + chữ_số 2 FormName Tên biểu_mẫu C ( 100 ) Chữ_cái + chữ_số + ký_hiệu 3 UserCreate Tên tài_khoản người tạo biểu_mẫu C ( 20 ) Chữ_cái + chữ_số 4 DateCreate Ngày tạo biểu_mẫu D ( 8 ) Chữ_số 5 Status_Trạng thái của biểu_mẫu N ( 1 ) Chữ_số 6 . Khóa ngoài : Số_Tên_Cột khóa ngoài Quan_hệ với bảng 1 FK_ UserCreateForm _ User_User Create_User 2 FK_ UserUpdateForm _ User_User Update_User_Bảng 3.5 Image 1.Số hiệu : 3 2.Tên bảng : Image 3.Bí danh : Image 4 . Mô_tả : Lưu_trữ thông_tin ảnh biểu_mẫu 5 . Mô_tả chi_tiết các cột Số_Tên cột Mô_tả Kiểu dữ_liệu Khuôn_dạng N 1 IdImg Mã_số ảnh N ( 6 ) chữ_số 2 ImgPath Đường_dẫn đến thư_mục ảnh C ( 100 ) Chữ_cái + chữ_số 3 Status_Trạng thái ảnh được nhập liệu hay chưa ? N ( 1 ) Chữ_số 4 UserName Tên tài_khoản người upload ảnh C ( 20 ) Chữ_cái + chữ_số 5 UpTime Ngày tạo Upload ảnh D ( 8 ) Chữ_số 6 IdForm Mã_số biểu_mẫu chứa ảnh C ( 10 ) Chữ_cái + chữ_số 6 . Khóa ngoài : Số_Tên_Cột khóa ngoài Quan_hệ với bảng 1 FK_ Image _ Form_Id Form_Form 2 FK_ UserUpdateForm _ User_User Name_User_Bảng 3.6 DetailForm 1 . Số_hiệu : 4 2.Tên bảng : DetailForm 3.Bí danh : DetailForm 4 . Mô_tả : Lưu_trữ thông_tin các trường cần nhận_dạng trong biểu_mẫu 5 . Mô_tả chi_tiết các cột Số_Tên cột Mô_tả Kiểu dữ_liệu Khuôn_dạng N 1 IdField Mã_số trường N ( 6 ) Chữ_số 2 FieldName Tên trường C ( 100 ) Chữ_cái + chữ_số 3 CoordinateX Tọa_độ x của vùng nhận_dạng N ( 6 ) Chữ_số 4 CoordinateY Tọa_độ y của vùng nhận_dạng N ( 6 ) Chữ_số 5 Width_Chiều dài của vùng nhận_dạng N ( 6 ) Chữ_số 6 Height_Chiều cao của vùng nhận_dạng N ( 6 ) Chữ_số 7 FieldType Loại trường C ( 10 ) Chữ_cái 8 IdForm Mã_số biểu_mẫu chứa ảnh C ( 10 ) Chữ_cái + chữ_số 6 . Khóa ngoài : Số_Tên_Cột khóa ngoài Quan_hệ với bảng 1 FK_ DetailForm _ Form_Id Form_Form 2 FK_ UserUpdateForm _ User_User Update_User_Bảng 3.7 InputData 1.Số hiệu : 5 2.Tên bảng : InputData 3.Bí danh : InputData 4 . Mô_tả : Lưu_trữ thông_tin các thông_tin đã được trích xuất từ ảnh 5 . Mô_tả chi_tiết các cột Số_Tên cột Mô_tả Kiểu dữ_liệu Khuôn_dạng N 1 IdField Mã_số trường N ( 6 ) Chữ_số 2 IdImg Mã_số ảnh N ( 6 ) Chữ_số 3 Value_Thông tin cần nhập liệu C ( 200 ) Chữ_số + Chữ_cái 4 UserEntry Tài_khoản người nhập liệu C ( 20 ) Chữ_số + Chữ_cái 5 DateEntry Ngày nhập liệu D ( 8 ) Chữ_số 6 . Khóa ngoài : Số_Tên_Cột khóa ngoài Quan_hệ với bảng 1 FK_ DataInput _ DetailForm IdField DetailForm 2 FK_ DataInput _ User_User Entry_User_Thiết kế giao_diện Thiết_kế modul chương_trình Kiến_trúc chương_trình mức cao Hình 3.3 Kiến_trúc chương_trình mức cao Modul_Quản lý hình_ảnh biểu_mẫu Hình 3.4 Modul quản_lý hình_ảnh biểu_mẫu Modul_Nhập liệu Hình 3.5 Modul nhập liệu Thiết_kế giao_diện tương_tác người_máy Form_Đăng_Nhập : Hình 3.6 Form_Đăng nhập Tên giao_diện : Màn_hình đăng_nhập Người sử_dụng : Nhân_viên Điều_kiện vào màn_hình : Màn_hình hiển_thị đầu_tiên khi khởi chạy hệ_thống Khi ấn Logout từ các màn_hình Quản_trị , Quản_lý Hình_ảnh Biểu_mẫu , và màn_hình Nhập liệu Nhiệm_vụ : Kiểm_soát truy_cập hệ_thống Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : User , thuộc_tính sử_dụng : UserName , Password_Mô tả chi_tiết : Người dùng nhập tên username và pass word vào textbox tương_ứng . Nếu thông_tin đăng_nhập không chính_xác thì sẽ có thông_báo lỗi hiển_thị lên . Nếu đăng_nhập thành_công , hệ_thống sẽ kiểm_tra bộ_phận của nhân_viên để chuyển đến form tương_ứng . Form_Quản lý hình_ảnh biểu_mẫu Màn_hình Quản_lý Biểu_Mẫu_Hình 3.7 Tab_Quản lý Biểu_mẫu Tên giao_diện : Tab_Quản lý biểu_mẫu Người sử_dụng : Nhân_viên quản_lý hình_ảnh biểu_mẫu Điều_kiện vào màn_hình : Khi đăng_nhập thành_công với người dùng là nhân_viên quản_lý hình_ảnh biểu_mẫu . Tab này sẽ hiển_thị đầu_tiên khi Form_Quản lý Hình_ảnh Biểu_mẫu hiển_thị . Từ_Tab_Upload_Google_Drive ấn Chọn BM Từ_Tab_Định dạng Biểu_Mẫu ấn Chọn BM Nhiệm_vụ : Thao_tác tìm_kiếm , thêm sửa xóa biểu_mẫu Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : Form_Mô tả chi_tiết : Cho_phép người dùng lọc và tìm_kiếm biểu_mẫu theo các thông_tin : Mã biểu_mẫu , tên biểu_mẫu , trạng_thái , ngày tạo , người tạo . Cho_phép người dùng chuyển đến màn_hình popup Tạo biểu_mẫu , cập_nhật tên biêu mẫu , và cho_phép xóa các biểu_mẫu chữa được upload ( là những biểu_mẫu không có hình_ảnh scan nào và chưa được định_dạng ) . Người dùng chọn một biểu_mẫu trước khi ấn Upload Ảnh , nếu người dùng chưa chọn một một biểu mà ấn Upload Ảnh sẽ hiển_thị thông_báo yêu_cầu người dùng chọn một biểu_mẫu . Người dùng chọn một biểu_mẫu trước khi ấn Định_dạng Form , nếu người dùng không chọn Biểu_mẫu sẽ hiển_thị thông_báo yêu_cầu người dùng chọn một biểu , nếu người dùng chọn một biểu_mẫu chưa upload ảnh thì hiển thông_báo và yêu_cầu người dùng upload ảnh trước khi định_dạng . Màn_hình Tạo_Biểu mẫu Hình 3.8 Màn_hình PopupTạo biểu_mẫu Tên giao_diện : Màn_hình Popup_Tạo_Biểu_Mẫu_Người sử_dụng : Nhân_viên quản_lý hình_ảnh biểu_mẫu Điều_kiện vào màn_hình : Từ_Tab_Quản lý Biểu_mẫu click Tạo_Form_Nhiệm vụ : Tạo một biểu_mẫu mới Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : Form_Mô tả chi_tiết : Người dùng điền đầy_đủ các thông_tin Mã_Biểu mẫu và Tên_Biểu mẫu và ấn Lưu để tạo một Biểu_mẫu mới , nếu_không muốn tạo tiếp thì ấn Thoát để thoát khỏi màn_hình hình popup Tạo biểu_mẫu . Màn_hình Upload Ảnh lên Google_Drive_Hình 3.9 Màn_hình Upload hình_ảnh lên google drive Tên giao_diện : Tab_Upload_Google_Drive_Người sử_dụng : Nhân_viên quản_lý hình_ảnh biểu_mẫu Điều_kiện vào màn_hình : Từ_Tab_Quản lý Biểu_mẫu , khi chọn một biểu_mẫu và ấn Upload Ảnh , hoặc khi chọn Biểu_mẫu chưa được upload ấn Định_dạng Form_Nhiệm vụ : Xem danh_sách các biểu_mẫu đã upload , xem danh_sách hình_ảnh của từng biểu_mẫu , Cho_phép Upload ảnh lên google theo từng biểu_mẫu Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : Form , Image_Mô tả chi_tiết : Upload ảnh cho một biểu_mẫu Chọn_File hoặc chọn cả thư_mục chứa danh_sách hình_ảnh scan thuộc biểu_mẫu cần upload . Sau khi chọn xong tất_cả các ảnh sẽ hiển_thị trong listbox sanh sách file ảnh , hệ_thống cũng hỗ_trợ cho_phép người dùng có_thể xóa những file ảnh này nếu_không muốn upload lên nữa . Sau khi chọn xong các file ảnh cần upload người dùng ấn Upload , nếu đây là một biểu_mẫu mới chưa có ảnh nào được upload lên thì hệ_thống sẽ tự_động tạo một folder trong thư mụ Google_Drive với tên folder là Mã_Biểu mẫu , và sau đó tất_cả các ảnh đã chọn sẽ được chuẩn_hóa từng cái về cùng một khuôn_dạng và chuyển đến folder này . Sau khi upload ảnh xong , người dùng có_thể quay lại Tab_Quản lý Biểu_mẫu để chọn biểu_mẫu muốn upload ảnh tiếp hoặc Định_dạng cho biểu_mẫu này nếu là Biểu_mẫu mới chưa được định_dạng . Màn_hình Định_dạng Biểu_mẫu Hình 3.10 Màn_hình định_dạng biểu_mẫu Tên giao_diện : Tab_Địn dạng Biểu_Mẫu_Người sử_dụng : Nhân_viên quản_lý hình_ảnh biểu_mẫu Điều_kiện vào màn_hình : Từ tab Quản_lý Biểu_mẫu , chọn Biểu_mẫu chưa định_dạng ấn Định_dạng BM Từ tab Upload Ảnh ấn_định dạng BM Nhiệm_vụ : Xác đinh các vùng cần nhận_dạng của biểu_mẫu Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : Form , DetailForm Mô_tả chi_tiết : quá_trình định_dạng một biểu_mẫu Xác_định từng vùng cần nhận_dạng trên hình_ảnh biểu_mẫu bao_gồm tọa_độ bắt_đầu ( X , Y ) , chiều rộng , chiểu cao vùng nhận_dạng , Tên trường nhận_dạng và lưu lại . Sau khi xác_định tất_cả các vùng cần nhận_dạng thì hoàn_tất định_dạng cập_nhật trạng_thái của biểu_mẫu thành đã định_dạng Form_Nhập liệu Hình 3.11 Chọn biểu_mẫu cần nhập liệu Hình 3.12 Trích xuất văn_bản từ vùng định_dạng Tên giao_diện : Form_Nhập liệu Người sử_dụng : Nhân_viên Nhập liệu Nhiệm_vụ : Cho_phép trích xuất văn_bản , chỉnh_sửa , và lưu kết_quả vào cơ_sở_dữ_liệu Mẫu thiết_kế : hình trên Bảng dữ_liệu liên_quan : DetailForm , Image , InputData Tiền điểu kiện : Đăng_nhập thành_công với Role nhân_viên Nhập liệu Hậu điều_kiện : Trở_về màn_hình đăng_nhập Biểu_đồ trình_tự hoạt_động : Hình 3.13 Biểu_đồ trình_tự hoạt_động Form nhập liệu Chương 4 XÂY_DỰNG_PHÂN_MỀM “ SỐ_HÓA_BIỂU_MẪU_ỨNG_DỤNG_HỖ_TRỢ_NHẬP_LIỆU” Công_nghệ sử_dụng Lý_thuyết tiền xử ảnh Lọc nhiễu Lọc nhiễu là công_đoạn tiền xử_lý ảnh số , nó giúp chúng_ta nâng cao chất_lượng đầu_vào của dữ_liệu cho các công_đoạn sau , xử_lý tốt cộng đoạn này sẽ giúp cho các công doạn sau tiến_hành được dễ_dàng hơn . Có nhiều loại nhiễu khác_nhau ( nhiễu cộng , nhiễu nhân , nhiễu xung , nhiễu Gaussian … ) và cũng có nhiều phương_pháp lọc khác_nhau để khử nhiễu . Tuy_nhiên , tùy từng loại nhiễu mà ta lên sử_dụng phương_pháp lọc nhiễu nào phù_hợp vì không phải một phương_pháp có thẻ lọc được tất_cả các loại nhiễu . Một_số phương_pháp lọc nhiễu : Phương_pháp lọc trung_bình : Ý_tưởng thuật_toán : Lọc trung_bình là kĩ_thuật lọc tuyến_tính , hoạt_động như một bộ lọc thông thấp . Ý_tưởng chính của thuật_toán lọc Trung vị như sau : ta sử_dụng một cửa_sổ lọc ma_trận 3x3 ( hoặc 5x5 , 7x7 tùy trường_hợp ) quét qua lần_lượt từng điểm_ảnh của ảnh đầu_vào input . Tại vị_trí mỗi điểm_ảnh lấy giá_trị của các điểm_ảnh tương_ứng trong vùng 3x3 của ảnh gốc " lấp " vào ma_trận lọc . Giá_trị điểm_ảnh của ảnh đầu_ra là giá_trị trung_bình của tất_cả các điểm_ảnh trong cửa_sổ lọc . Việc tính_toán này khá đơn_giản với hai bước gồm tính tổng các thành_phần trong cửa_sổ lọc và sau đó chia tổng này cho số các phần_tử của cửa_sổ lọc . Hình_ảnh 4.1 Mô_tả thuật_toán lọc Mean filter Thuật_toán : Quét cửa_sổ lọc lần_lượt lên các thành_phần của ảnh đầu_vào ; điền các giá_trị được quét vào cửa_sổ lọc . Xử_lý bằng cách thao_tác trên các thành_phần của cửa_sổ lọc . Tính giá_trị trung_bình các thành_phần trong cửa_sổ lọc . Gán giá_trị trung_bình này cho ảnh đầu_ra . Tác_dụng : Trong lọc trung_bình , thường người_ta ưu_tiên cho các hướng để bảo_vệ biên của ảnh khỏi bị mờ khi làm trơn ảnh . Các kiểu ma_trận lọc ( Kernel ) được sử_dụng tùy theo các trường_hợp khác_nhau . Ví_dụ : Ma_trận kenel M ( 3x3 ) ma_trận điểm_ảnh đầu_vào ( Isrc ) ma_trận điểm_ảnh đầu_ra ( Idst ) Idst ( 3,3 ) = ( 7 +2 +1 +6 +2 +8 +6 +7 +7 ) / 9 = 46 / 9 = 5 Chú_ý : Các hệ_số trong ma_trận lọc ( Kernel ) này có tổng bằng 1 , nên độ sáng ảnh giữ nguyên , và các hệ_số đều dương nên nó có khuynh_hướng làm nhoè ảnh . Phương_pháp lọc trung bị Lọc_Trung vị là một kĩ_thuật lọc phi tuyến ( non-linear ) , nó khá hiệu_quả đối_với hai loại nhiễu : nhiễu đốm ( speckle noise ) và nhiễu muối_tiêu ( salt-pepper noise ) . Kĩ_thuật này là một bước rất phổ_biến trong xử_lý ảnh . Ý_tưởng chính của thuật_toán lọc Trung vị như sau : ta sử_dụng một cửa_sổ lọc ( ma_trận 3x3 ) quét qua lần_lượt từng điểm_ảnh của ảnh đầu_vào input . Tại vị_trí mỗi điểm_ảnh lấy giá_trị của các điểm_ảnh tương_ứng trong vùng 3x3 ( hoặc 5x5 hoặc 7x7 ) của ảnh gốc " lấp " vào ma_trận lọc . Sau đó sắp_xếp các điểm_ảnh trong cửa_sổ này theo thứ_tự ( tăng dần hoặc giảm dần tùy_ý ) . Cuối_cùng , gán điểm_ảnh nằm chính giữa ( Trung vị ) của dãy giá_trị điểm_ảnh đã được sắp_xếp ở trên cho giá_trị điểm_ảnh đang xét của ảnh đầu_ra output . Hình_ảnh 4.2 Mô_tả thuật_toán lọc Median filter Thuật_toán Quét cửa_sổ lọc lên các thành_phần của ảnh gốc ; điền các giá_trị được quét vào cửa_sổ lọc . Lấy các thành_phần trong của sổ lọc để xử_lý . Sắp_xếp theo thứ_tự các thành_phần trong cửa_sổ lọc . Lưu lại thành_phần trung vị , gán cho ảnh output . Tác_dụng : Loại_bỏ các điểm_ảnh mà vẫn đảm_bảo độ_phân_giải . Hiệu_quả trong việc giảm đi điểm nhiễu trong ma_trận lọc ( Kernel ) lớn hay bằng một_nửa số điểm trong ma_trận lọc ( Kernel ) . Ví_dụ : Idst ( 1,1 ) = ( 2 , 2 , 2 , 2 , 2 , 2 , 4 , 7 , 5 ) = 2 . Idst ( 3,3 ) = ( 1 , 2 , 2 , 6 , 6 , 7 , 7 , 7 , 8 ) = 6 . Idst ( 1,1 ) , Idst ( 1,5 ) , Idst ( 5,1 ) , Idst ( 5,5 ) : hoàn_toàn có_thể làm như cách trên hoặc không cần kiểm_tra điểm biên . Nhị_phân hóa ảnh Khái_niệm : Là quá_trình biến_đổi một ảnh xám thành ảnh nhị_phân . Để biến_đổi ảnh xám thành ảnh nhị_phân . Ta so_sánh giá_trị cường_độ sáng của điểm_ảnh với một ngưỡng nhị_phân T . Ngưỡng T có_thể nhận 1 giá_trị toàn_cục hoặc là nhiều giá_trị trong phân ngưỡng động . Các phương_pháp nhị_phân hóa ảnh : Phân ngưỡng toàn_cục : Khái_niệm : Trong phương_pháp này , ta so_sánh giá_trị cường_độ sáng của điểm_ảnh với một ngưỡng nhị_phân T . Nếu giá_trị điểm_ảnh I ( x , y ) > T thì giá_trị điểm_ảnh sau khi nhị_phân INP ( x , y ) = 0 . Nếu giá_trị điểm_ảnh I ( x , y ) > T thì sau khi nhị_phân INP ( x , y ) = 255 . Thuật_toán otsu : Thuật_toán này cho phép_tính ngưỡng T một_cách tự_động ( adaptive ) dựa vào giá_trị điểm_ảnh của ảnh đầu_vào nhằm thay_thế cho việc sử_dụng ngưỡng cố_định ( fixed hay const ) . Phương_pháp này cho kết_quả là mỗi ảnh khác_nhau có một ngưỡng tương_ứng khác_nhau bằng các bước xử_lý như sau : Chọn một giá_trị khởi tạo cho T ( nên chọn giá_trị mang tính công_thức , ví_dụ T = ( min + max ) / 2 , T = giá_trị trung_bình , ... tránh dùng các giá_trị mang tính định_lượng thiết_lập cứng ) . Phân hoạch ảnh sử_dụng T . kết_quả của bước này sẽ tạo ra 2 nhóm điểm_ảnh : G1 chứa tất_cả các điểm_ảnh với giá_trị ( intensity ) > T và G2 chứa các điểm_ảnh với giá_trị ( intensity ) < = T . Tính trung_bình ( Average hay Mean ) m1 và m 2 của các điểm_ảnh thuộc G1 và G2 . Tính lại T dựa vào m 1 và m 2 : T = ( m1 + m2 ) / 2 Lặp lại bước 2 đến 4 cho tới khi nào giá_trị chênh_lệch giữa T củ và T mới là không đáng_kể ( nhỏ hơn một giá_trị cho trước delta T ) . deltaT thường được sử_dụng là sai_số từ các phép tính_toán trong quá_trình xử_lý . Trong trường_hợp này T được tính ở 4 sẽ có phép sai_số là 1 / 2 * ( giá_trị đơn_vị của điểm_ảnh ) . Phân ngưỡng thích_nghi Ý_tưởng : Chia tấm ảnh thành nhiều khu_vực , cửa_sổ khác_nhau ( Region ) . Dùng một thuật_toán để tìm một giá_trị T phù_hợp với từng khu_vực , cửa_sổ ( Region ) . Áp_dụng phương_pháp nhị_phân hóa cho từngkhu vực , cửa_sổ ( Region ) với T phù_hợp . Điều quan_trọng trong kĩ_thuật này là phải tìm một giá_trị T phù_hợp với từng khu_vực , cửa_sổ ( Region ) hoặc cả tấm ảnh . Có rất nhiều phương_pháp để tìm T , ở nội_dung tiếp_theo tôi sẽ giới_thiệu một_số thuật_toán giúp tìm_kiếm giá_trị T này . Mã nguồn mở Tesseract OCR Engine_Lý do lựa_chọn Tesseract OCR Engine_Nhận dạng ký_tự quang_học ( OCR ) là một chuyển_đổi hình_ảnh văn_bản scan hoặc in , viết_tay thành văn_bản có_thể chỉnh_sửa được . Công_nghệ này cho_phép máy_tính nhận ra văn_bản tự_động từ hình_ảnh văn_bản đầu_vào , tiết_kiệm thời_gian , công_sức nhập liệu cho con_người . Năm 1955 , hệ_thống thương_mại đầu_tiên được lắp_đặt trong đó sử_dụng OCR và sau đó phương_pháp OCR đã trở_nên rất hữu_ích trong việc tính_toán các tài_liệu vật_lý trong văn_phòng . Ngày_nay có nhiều loại phần_mềm công_cụ nhận_dạng chữ_viết tay như VnDOCR 4 cho tiếng viêt với tỷ_lệ nhận_dạng rất tốt , hay công_cụ ABBYY - một công_cụ nhận_dạng ký_tự quang_học với độ_chính_xác trong nhận_dạng tài_liệu tiếng việt lên đến 99% . Nhưng đây đều là những sản_phẩm thương_mại . Trong đồ_án này chúng_tôi nghiên_cứu và sử_dụng công_cụ tessract hỗ_trợ trong việc nhận_dạng ký_tự từ hình_ảnh scan với biểu_mẫu cụ_thể dưới đây . Đây là công_cụ được sử_dụng phổ_biến bởi_vì nó hỗ_trợ trên 40 ngôn_ngữ và đang tăng dần , trong đó có_tiếng Việt , có độ_chính_xác khá cao , bức ảnh đầu_vào có độ phân giả tốt thì tỷ_lệ nhận_dạng có_thể lên đến 95% . Và điều đặc_biệt Tesseract là một mã nguồn mở hoàn_toàn miễn_phí . Mục_tiêu của bài_toán dựa trên nền_tảng công_cụ tesseract , nâng cao_độ chính_xác trong nhận_dạng ký_tự từ hình_ảnh scan ứng_dụng nhập liệu nhanh_chóng , hiệu_quả các biểu_mẫu như hồ_sơ sinh_viên , ý_kiến sinh_viên . Tổng_quan về Tesseract OCR Engine_Tesseract là một phần_mềm mã nguồn mở và ban_đầu nó được nghiên_cứu và phát_triển tại hãng Hewlett_Packet ( HP ) trong khoảng từ năm 1984 đến 1994 . Vào năm 1995 , Tesseract nằm trong nho ́ m ba bộ nhận_dạng OCR đư ́ ng đâ ̀ u về độ_chính_xác khi tham_gia trong hội_nghị thường_niên của tổ_chức UNLV . Lúc mới khởi_động thì Tesseract là một dự_án nghiên_cứu tiến_sĩ tại phòng_thí_nghiệm HP ở Bristol và đã được tích_hợp vào trong các dòng máy_quét da ̣ ng phẳng của hãng dưới dạng các add - on phần_cứng hoặc phần_mềm . Nhưng thực_tế dự_án này đã thất_bại ngay từ_trong_trứng nước vì nó chỉ làm_việc hiệu_quả trên các tài_liệu in có chất_lượng tốt . Sau đó , dự_án này cùng_với sự cộng_tác của bộ_phận máy_quét HP ở bang Colorado đã đạt được một bước_tiến quan tro ̣ ng về độ chuẩn_xác khi nhận_dạng và vượt lên nhiều bộ nhận_dạng OCR thời đó nhưng dự_án đã không_thể trở_thành sản_phẩm hoàn_chỉnh vì độ cồng_kềnh và phức_tạp . Sau đó , dự_án được đưa về phòng thi ́ nghiê ̣ m của HP để nghiên_cứu về cách_thức nén và tối_ưu mã nguồn . Dự_án tập_trung ca ̉ i thiện hiệu_năng làm_việc của Tesseract dựa trên độ_chính_xác đã có . Dự_án này được hoàn_tất vào cuối năm 1994 và sau đó vào năm 1995 bộ Tesseract được gửi đi tham_dự hội_nghị UNLV thường_niên về độ_chính_xác của OCR , vượt_trội hơn hẳn so với các phần_mềm OCR lúc bấy_giờ . Tuy_nhiên , Tesseract đã không_thể trở_thành mô ̣ t sản_phẩm thương_mại hoàn_chỉnh được và vào năm 2005 , HP đã chuyển Tesseract sang mã nguồn mở và được hãng Google tài_trợ . Tesseract cho_đến nay vẫn được nhiều nhà_phát_triển cộng_tác và tiếp_tục hoàn_thiện . Phiên_bản mới nhất của bộ nhận_dạng Tesseract là phiên_bản 3.0.1 . Kiến_trúc hoạt_động của Tesseract_Hình 4.3 Kiến_trúc nhận_dạng ký_tự Tesseract_Bước 1 : Phân ngưỡng thích_ứng trong Tesseract_Đầu tiên , bộ nhận_diện Tesseract sẽ nhận đầu_vào là ảnh màu hoặc ảnh mức xám . Ảnh này sẽ được chuyển đến bộ_phận phân_tích ngưỡng thích_ứng ( adaptive thresholding ) để cho ra ảnh nhị_phân . Vì trước_kia HP cũng đã phát_triển bộ_phận phân_tích bố_cục trang nên Tesseract không cần phải có thành_phần đó và được thừa_hưởng từ HP . Vì_thế mà Tesseract nhận đầu_vào là một ảnh nhị_phân với các vùng đa_giác tùy chọn đã được xác_định . Ban_đầu , Tesseract được thiết_kế làm_việc trên ảnh nhị_phân sau đó chương_trình được cải_tiến để có_thể nhận_dạng cả ảnh màu và ảnh mức xám . Chính vì_thế mà cần bộ_phận phân_tích ngưỡng thích_ứng để chuyển_đổi ảnh màu / ảnh mức xám sang ảnh nhị_phân . Sau đó quá_trình nhận_dạng sẽ được thực_hiện tuần_tự theo từng bước . Bước 2 : Phân_tích các thành_phần liên_thông : Kết_quả của bước này xác_định được các blobs , Blob chính là một từ . Bước 3 : Tìm hàng và tìm từ Một phần quan_trọng của bất_kì hệ_thống nhận_dạng là phát_hiện và chỉnh độ nghiêng của hinh ảnh . Phân_tích layout và thực_hiện tiền xử_lý phục_vụ việc nhận_dạng ký_tự , nó phụ_thuộc vào ảnh thẳng_đứng , hoặc ít_nhất cũng phải_biết độ nghiêng của ảnh Công_việc tìm độ nghiêng trước_đây : Sử_dụng một_số phương_pháp biến_đổi như biến_đổi Hough để phát_hiện và điều_chỉnh độ nghiêng của hình_ảnh thành hình_ảnh thẳng sau đó mới đi vào phân_tích layout trang và tìm từ . Nhưng trong tesseract OCR : người_ta sử_dụng thuật_toán tìm dòng mà không cần loại_bỏ độ nghiêng của hình_ảnh văn_bản . Xác_định dòng : Sau bước phân_tích thành_phần liên_thông ở trên đã xác_định được các vùng bao quanh các từ gọi_là Blobs . Sau khi xác_định được các Blobs , tiến_hành lọc Blobs là loại_bỏ những kí_tự Drop – Cap và những kí_tự gạch chân , nhiễu … trong văn_bản còn những kí_tự có kích_thước chiều_cao từ 20-95 % được giữ lại , blob có số_lượng pixel nhỏ cũng bị bỏ đi . Sau đó sắp_xếp các blobs , sử_dụng tọa đô x của biên bên trái làm chuẩn , cho_phép theo_dõi độ nghiêng của trang . Cụ_thể như sau : Bước 1 : Cài đạt trung_bình y chạy về 0 Bước 2 : Duyệt mỗi blob trong thứ_tự sắp_xếp : Tìm dòng tồn_tại và mà blob có_thể ghi đè lên Nếu_như blob không ghi đè lên dòng đó Thêm một dòng mới và push các blob vào trong đó Ghi lại vị_trí đầu và cuối của blob - > chính là ví trị đầu_cuối của row Ngược_lại : Thêm tiếp các blob vào dòng Mở_rộng giới_hạn top và bottom của dòng theo top và bottom của các blob , cắt chiều_cao của hang theo một giới_hạn đã định . Update lại sự thay_đổi của biến trung_bình y bằng vị_trí dưới của blob . Thiết_lập dòng cơ_sở Khi dòng văn_bản được tìm thấy , các dòng cơ_sở được thiết_lập chính_xác hơn bằng cách sử_dụng một đường có tên là spline toàn phương ( là dòng mà được kết_hợp từ nhiều đoạn ) . Nó giúp Tesseract xử_lý các trang có đường cơ_sở là đường_cong . Các dòng cơ_sở được thiết_lập bằng cách phân_vùng các blobs thành các nhóm có_thể thay_thế thích_hợp liên_tục trong đường cơ_sở thẳng ban_đầu . Một spline toàn phương được thiết_lập cho phân_vùng dày_đặc nhất , ( giả_định là đường cơ_sở ) của một hình có phương ít_nhất . Spline có lợi_thế là tính_toán ổn_định , nhược_điểm là sự gián_đoạn có_thể xảy_ra khi nhiều phân_đoạn spline được yêu_cầu . Hình_ảnh 4.4 ví_dụ về đường cơ_sở Dựa vào các đường cơ_sở cùng phân_tích vùng liên_thông để tách ra các từng kí_tự Bước 4 : Nhận_dạng từ . Công_đoạn nhận_dạng từ sẽ được xử_lý qua 2 giai_đoạn . Giai_đoạn đầu sẽ là nhận_dạng các từ theo lượt . Các từ thỏa yêu_cầu trong giai_đoạn này sẽ được chuyển sang bộ phân_loại thích_ứng ( adaptive classifier ) để làm dữ_liệu huấn_luyện . Chính nhờ đó mà bộ phân_loại thích_ứng sẽ có khả_năng nhận_diện được chính_xác hơn ở phần sau của trang . Sau khi bộ phân_loại thích_ứng đã học được các thông_tin có_ích từ giai_đoạn đầu khi nhận_dạng phần trên của trang thì giai_đoạn thứ 2 của việc nhận_dạng sẽ được thực_hiện . Giai_đoạn này sẽ quét hết toàn_bộ trang , các từ không được nhận_diện chính_xác ở giai_đoạn đầu sẽ được nhận_diện lại lần nữa . Cuối_cùng bộ nhận_diện sẽ tổng_hợp lại các thông_tin ở trên và cho ra kết_quả nhận_diện hoàn_chỉnh . Các cách cải_tiến Tesseract_Tesseract sử_dụng nhiều thuật_toán xử_lý ảnh ở bên trong sử_dụng thư_viện Leptonica trước khi thực_hiện OCR . Nó thực_hiện khá tốt nhưng trong một_vài trường_hợp vẫn chưa đủ , kết_quả sẽ có_thể không được chính_xác . Ta có_thể thấy Tesseract đã xử_lý hình_ảnh bằng cách sử_dụng giá_trị configuration Tessedit _ write _ images bằng true khi sử_dụng Tesseract . Nếu kết_quả tesstinput . tif file có vấn_đề , hãy thử những phép xử_lí ảnh trước khi đưa ảnh vào tesseract . Chỉnh kích_thước : Tesseract nhận_dạng tốt nếu ảnh có độ_phân_giải ít_nhất 300dpi . Vì_vậy , nhận_dạng có_thể thuận_lợi hơn nếu chỉnh kích_thước ảnh Nhị_phân hóa ảnh : Nhị_phân hóa ảnh được thực_hiện bên trong Tesseract , nhưng_mà kết_quả có_thể được cải_thiện hơn trong trường_hợp nền ảnh là bóng_tối ko đều . Lọc nhiễu : Nhiễu là những điểm sáng hoặc màu ngẫu_nhiên của ảnh , nó có_thể làm cho chữ trong ảnh khó đọc hơn . Một_số loại nhiễu ko thể được loại_bỏ bở tesseract trong quá_trình nhị_phân hóa , chúng làm giảm độ_chính_xác của nhận_dạng . Chỉnh cấu_hình của tesseract : Trong trường_hợp chỉ nhận_dạng tập kí_tự sẵn có , như_là chỉ chữ_số , ta có_thể sử_dụng giá_trị configuration tessedit _ char _ whitelist . Google_Drive API Google_Drive API trên C# cho_phép người dùng lập_trình thực_hiện các thao cơ_bản với Google_Drive như : xem danh_sách file , upload , download , liệt_kê thư_mục , thay_đổi file , copy file , delete file … Đăng_kí sử_dụng Google_Drive trên C# Đầu_tiên phải đi đến Google_Console_Developer https : / / console.developers.google.com để đăng_kí ứng_dụng . Giống như hầu_hết Google APIs khác , để kết_nối đến Google_Drive thì ta cần phải xác_thực trước khi kết_nối . Ta cần tạo 1 project ở Google_Console_Developer rồi enable 2 API Google_Drive API và Google_Drive SDK . Hình 4.5 Màn_hình đăng_kí sử_dụng google Drive API Cài_đặt thư_viện Google_Drive API Project phải sử_dụng . net 4.0 trở_lên Cài_đặt thư_viện Nuget package Google_Apis_Drive v2 Hình_ảnh 4.6 Cài_đặt thư_viện Google_Drive API Các loại xác_thực Xác_thực là chìa_khóa truy_cập mọi thứ trong Google_Drive API nếu ta muốn được truy_cập vào dữ_liệu , thì cần phải được xác_thực . có 2 loại xác_thực Oauth2 mà sẽ cho_phép ta truy_cập đến dữ_liệu của người khác , và service account có_thể được cài_đặt để truy_cập dữ_liệu riêng của mình . OAuth2 Authentication_Hình ảnh 4.7 Xác_thực tài_khoản Nếu muốn truy_cập Google_Drive sở_hữu bởi một người khác thì ta cần phải được xác_thực . lệnh cho việc xác_thực đơn_giản hiển_thị một trang_web cho user hỏi họ cho_phép bạn truy cạp dữ_liệu . Nếu user cho_phép truy_cập , một file lưu_trữ ở trong thư_mục % AppData % chứa tất_cả thông_tin bao_gồm ClientId và Client_Secret mà ta cần để truy_cập dữ_liệu trong tương_lai . Nhưng làm thé nào để Google biết được loại permission nào mà mình muốn cho_phép user truy_cập . đó là Scope , với scope thì ta sẽ định_nghĩa được quyền mình cung_cấp cho ứng_dụng . Service_Account_Nếu tachi truy_cập vào dữ_liệu Google_Drive riêng của mình , thì ko có lí_do gì để phải xin_phép 1 người dùng khác cho_phép . Trong trường_hợp này , ta nên dùng services account . Một service account giống như một người dùng khác đã nhượng quyền truy cạp dữ_liệu cho bạn với một ngoại_lệ , đó là tự_động . sẽ không càn phải hành_động gì để truy_cập data . Ta có_thể nhượng quyền service account trực_tiếp truy_cập 1 folder đã có trên google drive và có_thể upload lên folder đó , nhưng một lần nữa , nó có_thể giúp ra có quyền truy_cập cả files . Chỉ cần thên service account email đến folder như_là bạn muốn những người dùng khác muốn cho_phép bạn quyền truy_cập . Một service account cũng có drive account riêng của nó . Vì_vậy , ta nên sử_dụng 1 service account dedeer upload dữ_liệu lên đó . Vấn_đề với việc upload dữ_liệu đến 1 service account trực_tiếp là bạn có_thể nhìn thấy ở trên website . Trong trường_hợp này , ta có_thể tạp 1 thư_mục ở trên service account và sau đó gán quyền truy_cập đầy_đủ tới thư_mục . và sau đó , ta sẽ có_thể nhìn thấy tất_cả file ở trên google drive . Điều này có_thể rất là tiện_lợi khi service account upload files , thì files cũng sẽ được cấp quyền truy_cập . Các thao_tác cơ_bản với tệp trên Google_Drive_Liệt kê tất_cả các file và thư_mục Chúng_ta muốn lấy ra tất_cả danh_sách directories trong Google_Drive hiện_tại , trong Google_Drive , mọi thứ đều là file , ngay cả thư_mục . điểm khác_nhau là mime type của thư_mục là ‘ application/vnd.google-apps.folder ’ Parent_Child : Files and thư_mục có thẻ có parents hoặc children . Mức cao nhất_là root . Vì_thế , nếu tập_hợp các parent có is Root set là true , la ta đang ở thư_mục gốc . Nếu ta muốn sắp_xếp mọi thứ theo cây cha_con thì tất_cả ta cần phải xem tập hơp cha trên file Upload file : File và thư_mục trong Google_Drive đều là file chỉ khác nhai về mime type . Phương_thức sau sẽ tạo một thư_mục mới . Gửi parent = root nếu bạn muốn nó ở thư_mục gốc . nếu_không , ta chỉ cần resource id của một thư_mục hợp_lệ . Ta có_thể lấy id bằng cách tìm_kiếm thư_mục . Tương_tự như thư_mục , upload một file cũng tương_tự . Ta chỉ cần gửi đi tên file thay_vì tên thư_mục . Nhưng lưu_ý rằng khi upload file đén Google_Drive , nếu thư_mục hoặc file trùng tên nhau vì vẫn được upload như bình_thường , file không được update mà sẽ lưu_trữ 2 file cùng tê . Google_Drive chỉ kiểm_tra dựa trên file id của file . Nếu muốn cập_nhật thì_phải sử_dụng dựa theo id này . Update file : Google_Drive có_thể lưu_trữ được các file cùng tên thì nó chỉ sử_dụng file ID để phân_biệt các file . Vì_vậy , nếu muốn cập_nhật một file , thay_đổi file thì bạn phải_biết được resource id của của file mà mình muốn update . Download file : Để download một hay nhiều file , ta cần biết resource id của chúng , các duy_nhất để lấy ra file id là từ lệnh Files.List ( ) . Sau đó sử_dụng service . HttpClient.GetByteArrayAsync ta có download được file mong_muốn . Delete file : Delete file cũng tương_tự như Update . Ta phải xác_định được resource id của file để thực_hiện quá nó . Hệ quản_trị cơ_sở_dữ_liệu MS_SQL 2012 R2 Khái_niệm : Microsoft SQL server là một hệ quản_trị cơ_sở_dữ_liệu quan_hệ ( Relational database management system - RDBMS ) do Microsoft phát_triển và cũng là một hệ quản_trị cơ_sở_dữ_liệu quan_hệ mạng máy_tính hoạt_động thoe mô_hình khách chủ cho_phép đồng_thời cùng một lúc có nhiều người dùng cùng truy_xuất dữ_liệu , quản_lý việc truy_nhập hợp_lệ với các quyền_hạn của từng người dùng trên mạng . Ngôn_ngữ truy_vấn quan_trọng sử_dụng trong MS_SQL là Transact-SQL . Nó là ngôn_ngữ SQL mở_rộng dựa trên SQL chuẩn của ISO và ANSI dược sử_dụng trong SQL server . Là ngông ngữ giao_tiếp giữa ứng_dụng với SQL server . T-SQL bao_gồm các nhóm lệnh sau : Data_Definition_Language ( DDL ) ngôn_ngữ định dịnh nghĩa dữ_liệu , CREATE , DROP , ALTER . Data_Manipulation_Language ( DML ) ngôn_ngữ xử_lý dữ_liệu , SELECT , INSERT , UPDATE , DELETE . DataControl Language_Statements ( DCL ) ngôn_ngữ điều_khiển dữ_liệu DENY , GRANT , REVOKE . Hệ quản_trị cơ_sở_dữ_liệu MS_SQL server 2012 Vào tháng 3/2012 tập_đoàn Microsoft đã tuyên_bố phiên_bản mới nhất Microsoft SQL server 2012 . MS_SQL 2012 đảm_bảo cho các tác_vụ quan_trọng luôn được bảo_mật , thời_gian hệ_thống hoạt_động nhiều hơn , các tính_năng bảo_mật dược tăng_cường kèm theo khả_năng đột_phá trong cung_cấp thông_tin chuyên_sâu nhờ khai_thác dữ_liệu tự_phục_vụ và ảo_hóa dữ_liệu tương_tác . Nền_tảng dữ_liệu Microsoft SQL Server 2012 được ghi_nhận là đem đến hiệu_năng hoạt_động nhanh đáng ngạc_nhiên . SQL Server 2012 giúp giải_quyết các thách_thức liên_quan đến sự gia_tăng lượng dữ_liệu bằng cách chuyển các dữ_liệu này thành các tầm nhìn mang tính quyết_định nhanh_chóng . Các đặc_điểm nổi_bật của SQL Server 2012 có_thể tóm_tắt lại : Cho_phép quản_trị một CSDL lớn ( lên đến vài tega byte ) , có tốc_độ xử_lý dữ_liệu nhanh_chóng đáp_ứng yêu_cầu về mặt thời_gian nhờ tính_năng SQL Server_Always On_Cho phép người dùng khai_thác dữ_liệu trong một thời_điểm đối_với một CSDL và toàn_bộ hệ quản_trị CSDL nhờ công hệ bộ_nhớ_trong x Velocity_Các hệ_thống phân_quyền bảo_mật tương_thích với hệ_thống bảo_mật của công_nghệ NT ( Netwwork_Technology ) , tích_hợp hệ_thống bảo_mật của Windows NT hoặc sử_dụng hệ_thống bảo_vệ độc_lập của SQL server Hỗ_trợ trong việc triển_khai CSDL phân_tán và phát_triển ứng_dụng trên internet . Chỉ một lần viết ứng_dụng , chạy được ở bất_cứ đâu với các công_cụ dữ_liệu cảu SQL server Cho_phép lập_trình_viên kết_nối với nhiều ngôn_ngữ_lập_trình khác_nhau dùng xây_dựng các ứng_dụng đặc_thù ( visual Basic , C , C+ + , C# , SAP , ASP.NET , XML , Windows_Form , … ) . Ngôn_ngữ C# Lý_do chọn ngôn_ngữ C# C# phù_hợp với các ứng_dụng ổn_định chạy trên laptop , PC cài hệ_điều_hành Windows . Câu_lệnh đơn_giản , ít từ_khóa Tinh năng debug rất thuận_tiện Là ngôn_ngữ_lập_trình hướng đối tương , dễ sử_dụng Là cơ_sở để phát_triển các ứng_dụng Windows form , Asp.NET , Web service Hỗ_trợ nhiều thư_viện hàm sẵn có giúp cho người lập_trình lấy hàm dễ_dàng và thuận_tiện . Nhược_điểm của C# là chỉ có_thể chạy trên hệ_điều_hành Windows và . NET frame work . Giới_thiệu ngôn_ngữ_lập_trình c # C# là một ngôn_ngữ_lập_trình ứng_dụng , ngôn_ngữ biên_dịch , ngôn_ngữ đa_năng được phát_triển bởi hãng Microsoft , là một phần khởi_đầu cho kế_hoạch . NET . Microsoft phát_triển C# dựa trên C , C+ + và Java . C# được miêu_tả là ngôn_ngữ có được sự cân_bằng giữa C+ + , Visual_Basic , Delphi và Java . Ngôn_ngữ_lập_trình C# được đánh_giá là dễ học và kết_hợp được nhiều ưu_điểm của các ngôn_ngữ_lập_trình hướng đối_tượng Java và C+ + . Do_đó ngôn_ngữ C# đựơc sử_dụng rộng_rãi nhất . C# có_thể được viết với bất_kỳ trình_soạn_thảo văn_bản nào như Notepad của Windows , và sau đó biên_dịch với trình biên_dịch dòng lệnh của C# , csc.exe luôn đi kèm với . Net framework . Do_đó mà ngày_nay , C# được rất nhiều các coder trên thế_giới ưu chuộng và tìm hiều . Đặc_điểm của ngôn_ngữ C# C# là ngôn_ngữ đơn_giản C# loại_bỏ một_vài sự phức_tạp và rối_rắm của những ngôn_ngữ như Java và c + + , bao_gồm việc loại_bỏ những macro , những template , đa kế_thừa , và lớp cơ_sở ảo ( virtual base class ) . Chúng là những nguyên_nhân gây ra sự nhầm_lẫn hay dẫn đến những vấn_đề cho các người phát_triển C+ + . Nếu chúng_ta là người học ngôn_ngữ này đầu_tiên thì chắc_chắn là ta sẽ không trải qua những thời_gian để học nó ! Nhưng khi đó ta sẽ không biết được hiệu_quả của ngôn_ngữ C# khi loại_bỏ những vấn_đề trên C# là ngôn_ngữ hướng đối_tượng Những đặc_điểm chính của ngôn_ngữ hướng đối_tượng ( Object-oriented language ) là sự đóng_gói ( encapsulation ) , sự kế_thừa ( inheritance ) , và đa hình ( polymorphism ) . C# hỗ_trợ tất_cả những đặc_tính trên . Phần hướng đối_tượng của C# sẽ được trình_bày chi_tiết trong một chương riêng ở phần sau . C# là ngôn_ngữ mạnh_mẽ và cũng mềm_dẻo Như đã đề_cập trước , với ngôn_ngữ C# chúng_ta chỉ bị giới_hạn ở chính bởi bản_thân hay_là trí_tưởng tượng của chúng_ta . Ngôn_ngữ này không đặt những ràng_buộc lên những việc có_thể làm . C# được sử_dụng cho nhiều các dự_án khác_nhau như_là tạo ra ứng_dụng xử_lý_văn_bản , ứng_dụng đồ_họa , bản_tính , hay thậm_chí những trình biên_dịch cho các ngôn_ngữ khác . C# là ngôn_ngữ có ít từ_khóa C# là ngôn_ngữ sử_dụng giới_hạn những từ_khóa . Phần_lớn các từ_khóa được sử_dụng để mô_tả thông_tin . Chúng_ta có_thể nghĩ rằng một ngôn_ngữ có nhiều từ_khóa thì sẽ mạnh hơn . Điều này không phải sự_thật , ít_nhất là trong trường_hợp ngôn_ngữ C# , chúng_ta có_thể tìm thấy rằng ngôn_ngữ này có_thể được sử_dụng để làm bất_cứ nhiệm_vụ nào . Bảng sau liệt_kê các từ_khóa của ngôn_ngữ C# . Giới_thiệu phần_mềm Thực_tế hiện_nay , nhập liệu thông_tin của các đối_tượng từ bản cứng là công_việc phổ_biến hàng ngày , ở đâu cũng cần đặc_biệt là những nơi phục_vụ số_lượng người_lớn như trường_học , bệnh_viện ngân_hàng . Và việc nhập liệu này thường mất rất nhiều thời_gian cũng_như công_sức của con_người . Chính vì_vậy , chúng_em xây_dựng hệ_thống số_hóa biểu_mẫu hỗ_trợ nhập liệu để trợ_giúp cho nhân_viên nhập liệu giảm bớt công_sức cũng_như thời_gian , khiến cho công_việc trở_nên thú_vị đỡ nhàm_chán . Phân hệ “ Quản_lý Biểu_Mẫu ” Phân hệ này giúp nhân_viên quản_lý hình_ảnh biểu_mẫu thực_hiện các chức_năng tìm_kiếm , Tạo biểu_mẫu mới , cập_nhật tên biểu_mẫu , xóa biểu_mẫu chưa được có dữ_liệu ( chưa có ảnh upload ) . Hình 4.8 Click tạo Biểu_mẫu từ giao_diện Quản_lý hình_ảnh biểu_mẫu Quy tình tạo một biểu_mẫu mới : Trước_tiên dựa vào phiếu giao biểu_mẫu , nhân_viên kiểm_tra xem biểu_mẫu đã tồn_tại trong hệ_thống chưa , nhân_viên có_thể thực thiện tìm_kiếm với các điều_kiện lọc . Nếu đã có nhân_viên tiến_hành Upload biểu_mẫu . nếu chưa có nhân_viên tiến_hành tạo biểu_mẫu mới . Hình 4.9 Click tạo Biểu_mẫu từ giao_diện Quản_lý hình_ảnh biểu_mẫu Quy_trình sửa tên biểu_mẫu : Người dùng click chọn một biểu_mẫu trong danh_sách biểu_mẫu hiển_thị . Sau đó chọn sửa biểu_mẫu , hệ_thống sẽ hiển_thị ra màn_hình cho_phép người dùng sửa Tên biểu_mẫu . Hình 4.10 Sửa tên biểu_mẫu Quy_trình xóa biểu_mẫu : Người dùng chọn tick vào các check box của các bản ghi biểu_mẫu muốn xóa , sau đó click Xóa biểu_mẫu , hệ_thống sẽ xóa những biểu_mẫu chưa được upload mà người dùng đã chọn , Với những biểu_mẫu khác thì sẽ không_thể xóa được . Hình 4.11 Xóa biểu_mẫu chưa upload ảnh Phân hệ “ Upload hình_ảnh lên google drive ” Nhân_viên chọn một biểu_mẫu trong danh_sách ở màn_hình Quản_lý Biểu_mẫu rồi click Upload để chuyển sang màn_hình “ Upload_Google drive ” Màn_hình này hỗ_trợ người dùng thao_tác với các hình_ảnh trong thư_mục google drive : cho_phép người dùng xem các Biểu_mẫu đã được upload ảnh và danh_sách các ảnh được upload theo từng biểu_mẫu , cho_phép người dùng upload ảnh lên google drive theo từng biểu_mẫu . Hình 4.12 Xem danh_sách các hình_ảnh đã upload theo từng biểu_mẫu Quy_trình Upload hình_ảnh cho một biểu_mẫu : Chọn file , hoặc thư_mục chứa các file muốn upload . Các nút Xóa all , và Xóa file hiển_thị cho_phép người dùng có_thể xóa file không muốn upload nữa theo ý_muốn của mình . Người dùng click upload , toàn_bộ hình_ảnh trong danh_sách người dùng chọn sẽ được thêm vào thư_mục biểu_mẫu tương_ứng tron google drive . Hình 4.13 Xem danh_sách các hình_ảnh đã upload theo từng biểu_mẫu Phân hệ “ Định_dạng biểu_mẫu ” Phân hệ này giúp người dùng định_dạng một biểu_mẫu mới và chỉnh_sửa định_dạng cho một biêu mẫu đã xác_định . Định_dạng biểu_mẫu là quá_trình xác_định các vùng văn_bản cần nhận_dạng với các thông_tin tên vùng nhận_dạng và tọa_độ kích_thước vùn nhận_dạng Quy_trình định_dạng một biểu_mẫu mới : Xác đinh các vùng cần nhận_dạng Click hoàn_tất định_dạng cho biểu_mẫu Hình 4.14 Xác_định các vùng cần nhận_dạng Hình 4.15 Hoàn_tất định_dạng một biểu_mẫu mới Phân hệ nhập liệu Công_việc cuối_cùng là của nhân_viên nhập liệu . Nhân_viên Nhập liệu sẽ đăng_nhập vào hệ_thống , chọn biểu_mẫu cần được nhập liệu thông_tin và tiến_hành nhập liệu . Công_việc của họ thay_vì gõ tất_cả các thông_tin thì giờ_đây chỉ cần Click OCR , các thông_tin tương_ứng của trường sẽ được nhận_dạng và tự_động điền vào các ô tương_ứng . Nhân_viên chỉ cần chỉnh_sửa nếu có sai_sót và click lưu vào cơ_sở_dữ_liệu . Phân hệ quản_lý nhập liệu còn hỗ_trợ chỉnh_sửa , update lại thông_tin đã nhận_dạng , và xóa các bản ghi trong hệ_thống . Quy_trình nhập liệu : Chọn biểu_mẫu muốn nhập liệu Ấn OCR để nhận_dạng thông_tin từng ảnh Chỉnh_sửa thông_tin nếu có sai xót Click_Lưu vào cơ_sở DL Đến khi hết file ảnh cần nhận_dạng Hình 4.16 Màn_hình nhập liệu KẾT_LUẬN Kết_quả đạt được Qua cả quá_trình tìm_hiểu và phân_tích hệ_thống , nghiên_cứu lí_thuyết về xử_lý ảnh , chúng_em đã xây_dựng được hệ_thống số_hóa biểu_mẫu hộ trợ nhập liệu . Kết_quả cụ_thể như sau : Xây_dựng nghiệp_vụ cho hệ_thống số_hóa biểu_mẫu hỗ_trợ nhập liệu Biết cách sử_dụng thư_viện mã nguồn mở Tesseract để nhận_dạng ký_tự Biết được các phương_pháp tiền xử_lý ảnh để nâng cao hiệu_quả và độ_chính_xác của tesseract . Tiếp_cận với công_nghệ mới , biết cách thao_tác , sử_dụng Google_Drive API Biết cách xây_dựng ứng_dụng Winform với ngôn_ngữ_lập_trình c # và lưu_trữ dữ_liệu trên MS_SQL Server . Hướng phát_triển Triển_khai hệ_thống hỗ_trợ nhập liệu trong thực_tế Phát_triển thuật_toán phần tiền xử_lý ảnh để nâng cao chất_lượng ảnh đầu_vào để tăng độ_chính_xác nhận_dạng , và có_thể xử_lý đa_dạng các biểu_mẫu ở dạng scan cũng_như ảnh chụp . TÀI_LIỆU_THAM_KHẢO [ 1 ] HELIŃ SKI , Marcin ; KMIECIAK , Mi ł osz ; PARKOŁ A , Tomasz . Report on the comparison of Tesseract and ABBYY FineReader OCR engines . Improving_Access to Text , 2012 . [ 2 ] SMITH , Ray . Tesseract ocr engine . Lecture . Google_Code . Google_Inc , 2007 . [ 3 ] SMITH , Ray . An overview of the Tesseract OCR engine . In : icdar . IEEE , 2007 . p . 629-633 . [ 4 ] OTSU , Nobuyuki . A threshold selection method from gray - level histograms . Automatica , 1975 , 11.285-296 : 23-27 . [ 5 ] Link công_nghệ http : / / www.ieev.org/2009/06/bo-loc-trung-vi-median-filter.html http : / / www.ieev.org/2009/06/bo-loc-trung-binh-mean-filter-hay.html http : / / www.ieev.org/2011/06/phan-hoach-anh-va-otsu.html http : / / vorba.ch/2014/tesseract-3.03-vs2013.html https : / / github.com/charlesw/tesseract-vs2012
