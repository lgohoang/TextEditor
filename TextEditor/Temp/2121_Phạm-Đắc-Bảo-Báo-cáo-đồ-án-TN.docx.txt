LỜI CẢM ƠN Lời đầu tiên, em xin chân thành cảm ơn sự hướng dẫn tận tình của thầy Phan Nguyên Hải, Bộ môn Công nghệ phần mềm, Khoa Công nghệ thông tin, Học Viện Kỹ Thuật Quân Sự. Trong suốt thời gian thực hiện luận văn, mặc dù rất bận rộn trong công việc nhưng thầy vẫn giành nhiều thời gian và tâm huyết trong việc hướng dẫn em. Thầy đã cung cấp cho em rất nhiều hiểu biết về lĩnh vực em đang nghiên cứu. Trong quá trình thực hiện luận văn thầy luôn định hướng, góp ý và sửa chữa những lỗi sai giúp em không bị lạc lối trong biển kiến thức mênh mông. Em xin gửi lời cảm ơn sâu sắc đến thầy Trần Hữu Phi, Bộ môn Công nghệ phần mềm. Cảm ơn thầy đã giúp đỡ em trong suốt quá trình làm luận văn. Em xin chân thành cảm ơn các quý thầy, cô trong bộ môn Công nghệ phần mềm cũng như các thầy cô trong trường đã giảng dạy, giúp đỡ em trong suốt 5 năm học qua. Nhờ các thầy, cô đã cung cấp cho chúng em những kiến thức nền tảng và kiến thức chuyên môn để em có thể hoàn thành luận văn và xa hơn là phục vụ cho công việc sau này. Cho đến hôm nay, luận văn tốt nghiệp của em đã được hoàn thành cũng chính là nhờ công sức, tâm huyết của tất cả các thầy cô. Một lần nữa, em xin chân thành cảm ơn ! 								Sinh viên thực hiện 								   Phạm Đắc Bảo MỤC LỤC 	PHẦN I. MỞ ĐẦU.	3 I. Đặt vấn đề.	3 II. Mục đích nghiên cứu.	3 III. Đối tượng nghiên cứu.	3 IV. Phạm vi nghiên cứu.	3 V. Phương pháp thực hiện.	3 	PHẦN II. CƠ SỞ LÝ THUYẾT.	4 I. Giới thiệu về hệ điều hành Android.	4 	1. Lịch sử phát triển.	4 	2. Nghiên cứu với máy ảo Dalvik	5 	3. Kiến trúc của Android.	6 	4. Android Emulator.	7 II. Các thành phần trong Android project.	8 	1. Activity và Intent.	8 	2. Service	10 	3. Broadcast Reveive	11 	4. Content Provider	11 	5. AndroidManifest.xml	11 	6. Giao diện người dùng trong Android	12 	7. Thanh phần giao diện Widget	12 	PHẦN III. PHÂN TÍCH THIẾT KẾ HỆ THỐNG.	13 I. Mô tả chung.	13 	1.  Mục tiêu của phần mềm.	13 	2. Mô hình tổng quát của phần mềm.	13 II. Yêu cầu phần mềm	13 	1. Yêu cầu về chức năng	13 	2. Yêu cầu phi chức năng.	14 III. Đặc tả yêu cầu	14 	1. Chức năng Tra từ Text.	14 	2. Chức năng Từ của tôi	15 	3. Chức năng Xem lịch sử tra cứu.	16 	4. Chức năng Dịch Online	17 	5. Chức năng Xóa lịch sử tra cứu	17 	6. Chức năng Nghe phát âm.	18 	7. Chức năng xem hình ảnh liên quan đến từ.	19 	8. Chức năng Tra Từ Giọng Nói.	20 	9. Chức năng Cài đặt từ điển.	21 IV. Thiết kế CSDL	22 	1. Thiết kế Logic CSDL	22 	2. Các file dữ liệu	25 	3. Thiết kế vật lý CSDL	26 V. Thiết kế Phần mềm.	29 	1. Thiết kế kiến trúc.	29 	2. Thiết kế các thành phần.	29 	3. Thiết kế giao diện người dùng.	35 	PHẦN VI. CHƯƠNG TRÌNH DEMO VÀ HƯỚNG DẪN SỬ DỤNG.	47 I. Chương trình demo.	47 II. Hướng dẫn sử dụng.	47 	1. Hướng dẫn tra từ bằng text.	47 	2. Hướng dẫn tra từ bằng giọng nói.	47 	3. Cài đặt từ điển.	47 	4. Xem ảnh minh họa.	48 	5. Xóa từ của tôi.	48 	6. Xem lịch sử tra cứu.	48 	7. Xóa lịch sử tra cứu.	48 	8. Tra từ online.	48 	9. Xem danh sách từ của tôi.	48 	PHẦN V. KẾT LUẬN	49 I. Đánh giá.	49 II. Hướng phát triển trong tương lai.	49 III. Tài liệu tham khảo.	49 PHẦN I. MỞ ĐẦU. I. Đặt vấn đề. Chúng ta đang sống trong một thế giới công nghệ cao và máy vi tính đã thay thế nhiều chức năng của con người như bộ não và đôi tay. Từ khi thế giới bước vào thời đại bùng nổ công nghệ thông tin, cùng xu hướng phát triển với nó là sự ra đời của điện thoại thông minh (Smartphone). Một chiếc Smartphone có thể giúp bạn duyệt web nhanh như desktop, chỉnh sửa tài liệu Office như trên máy tính cá nhân, xem phim, chụp ảnh chất lượng cao…. Nhiều hãng phát triển phần mềm đã chuyển hướng sang sản xuất phần mềm dành cho Smartphone. Nổi tiếng như các hệ điều hành tên tuổi như iOS, Android, Symbyan…..  Hòa cùng thế giới công nghệ, là một sinh viên công nghệ thông tin em nhận thấy việc phát triển ứng dụng cho mobile là một công việc có tiềm năng thành công cao. Bên cạnh đó, xuất phát từ nhu cầu học tiếng Anh của mình nên em đã có ý tưởng phát triển một ứng dụng từ điển trên Android với mục đích chính là trợ giúp công việc học tiếng Anh. II. Mục đích nghiên cứu. Xây dựng ứng dụng từ điển trên Android. III. Đối tượng nghiên cứu. Xây dựng từ điển Anh – Việt, Việt – Anh chạy trên hệ điều hành Android. IV. Phạm vi nghiên cứu.      -     Xây dựng từ điển Anh – Việt, Việt – Anh       -     Từ điển bao gồm phát âm, hình ảnh minh họa cho từ, các ví dụ sử dụng từ.      -	Tra cứu từ thông minh, tra cứu liên tiếp.      -	Có thể đánh dấu những từ quan trọng và đưa vào danh sách.      -	Xem danh sách những từ đã tra cứu.      -	Có thể tra cứu online, tra cứu cả câu hoặc đoạn văn. V. Phương pháp thực hiện.      -	Khảo sát các ứng dụng từ điển đã được sử dụng như TFlat, mDict,…      -	Phân tích thiết kế hệ thống, ứng dụng.      -	Tìm hiểu kỹ thuật sử dụng SQLite, cách tổ chức dữ liệu từ điển.      -	Cách xây dựng ứng dụng Android với Android SDK và Eclipse. PHẦN II. CƠ SỞ LÝ THUYẾT. I. Giới thiệu về hệ điều hành Android. 1. Lịch sử phát triển. Android là hệ điều hành cho các thiết bị cầm tay dựa trên lõi Linux do Android Inc. (California, Mỹ) thiết kế. Công ty này sau đó được Google mua lại vào năm 2005 và bắt đầu xây dựng Android Platform. Các thành viên chủ chốt tại ở Android Inc gồm có: Andy Rubin, Rich Miner, Nick Sears và Chris White.  H1. Lịch sử phát triển của Android. Cuối năm 2007, thuộc về Liên minh thiết bị cầm tay mã nguồn mở  (Open Handset Alliance) gồm các thành viên nổi bật trong ngành viễn thông và  thiết bị cầm tay như:   Broadcom Corporation, Google, HTC, Intel, LG, Marvell  Technology Group, Motorola, Nvidia, Qualcomm, Samsung Electronics, Asustek Computer Inc, Sony Ericsson, Toshiba Corp, and Vodafone Group,…  Tháng 11/2007 hãng T-Mobile công bố chiếc điện thoại thông minh đầu tiên T-Mobile G1 chạy trên nền tảng Android và ngay sau đó là sự ra đời của phiên bản Android SDK release Candidate 1.0. Tháng 10/2008 Google được cấp giấy phép mã nguồn mở cho Android Platform. Vào cuối năm 2008, Google cho phát hành một thiết bị  cầm tay được gọi là Android Dev Phone 1 có thể chạy được các ứng dụng Android mà không bị ràng buộc vào các nhà cung cấp mạng điện thoại di động. Mục tiêu của thiết bị này là cho phép các nhà phát triển thực hiện các cuộc thí nghiệm trên một thiết bị thực có thể chạy hệ điều hành Android mà không phải ký một bản hợp đồng nào. Vào khoảng cùng thời gian đó thì Google cũng cho phát hành một phiên vản vá lỗi 1.1 của hệ điều hành này. Ở cả hai phiên bản 1.0 và 1.1 Android chưa hỗ trợ soft-keyboard mà đòi hỏi các thiết bị phải sử dụng bàn phím vật lý. Android cố định vấn đề này bằng cách phát hành SDK 1.5 vào tháng Tư năm 2009, cùng với một số tính năng khác. Chẳng hạn như nâng cao khả năng ghi âm truyền thông, vật dụng, và các live folder. 2. Nghiên cứu với máy ảo Dalvik Dalvik là máy ảo giúp các ứng dụng Java chạy được trên các thiết bị di động Android. Nó chạy các ứng dụng đã được chuyển đổi thành một file thực thi Dalvik (dex). Định dạng phù hợp cho các hệ thống mà thường bị hạn chế về bộ nhớ và tốc độ xử lý. Dalvik đã được thiết kế và viết bởi Dan Bornstein. Từ góc nhìn của một nhà phát triển, Dalvik trông giống như máy ảo Java (Java Virtual Machine) nhưng thực tế thì hoàn toàn khác. Khi nhà phát triển viết một ứng dụng dành cho android, các đoạn mã được thực hiện trong môi trường Java. Sau đó, nó sẽ được biên dịch sang các bytecode của Java, tuy nhiên để thực thi được ứng dụng này trên Android thì nhà phát triển phải thực thi một công cụ có tên là dx. Đây là công cụ dùng để chuyển đổi bytecode sang một dạng gọi là dex bytecode. "Dex" là từ viết tắt của "Dalvik executable" đóng vai trò như cơ chế ảo thực thi các ứng dụng Android. 3. Kiến trúc của Android. H2. Cấu trúc của hệ thống Android. 3.1 Tầng ứng dụng (Applications). Android được tích hợp sẵn một số ứng dụng cần thiết cơ bản như: contacts, browser, camera, Phone…Tất cả các ứng dụng chạy trên hệ điều hành Android đều được viết bằng Java. 3.2. Application framework  Bằng cách cung cấp một nền tảng phát triển mở, Android cung cấp cho các nhà phát triển khả năng xây dựng các ứng dụng cực kỳ phong phú và sáng tạo. Nhà phát triển được tự do tận dụng các thiết bị phần cứng, thông tin địa điểm truy cập, các dịch vụ chạy nền, thiết lập hệ thống báo động, thêm các thông báo để các thanh trạng thái và nhiều hơn nữa. Các ứng dụng là một bộ các dịch vụ và các hệ thống, bao gồm:  Một tập hợp rất nhiều các View có khả năng kế thừa lẫn nhau dùng để thiết kế phần giao diện ứng dụng như: gridview, tableview, linearlayout ….. Một “Content Provider” cho phép các ứng dụng có thể truy xuất dữ liệu từ các ứng dụng khác (chẳng hạn như Contacts) hoặc là chia sẻ dữ liệu giữa các ứng dụng đó. Một “Resource Manager” cung cấp truy xuất tới các tài nguyên không phải là mã nguồn, chẳng hạn như: localized strings, graphics, and layout files. Một “Notifycation Manager” cho phép tất cả các ứng dụng hiển thị các custom alerts trong status bar. Activity Maanager được dùng để quản lý chu trình sống của ứng dụng và điều hướng các activity. 3.3. Library  Android bao gồm một tập hợp các thư viện C/C++ được sử dụng bởi nhiều thành phần khác nhau trong hệ thống Android. Điều này được thể hiện thông qua nền tảng ứng dụng Android. Một số thư viện cơ bản: Media Libraries, System C library, Surface Manager, LibWebCore, SGL (2D), 3D libraries, FreeType, SQLite. 3.4. Android Runtime  Android bao gồm một tập hợp các thư viện cơ bản mà cung cấp hầu hết các chức năng có sẵn trong các thư viện lõi của ngôn ngữ lập trình Java. Tất cả các ứng dụng Android đều chạy trong tiến trình riêng. Máy ảo Dalvik đã được viết để cho một thiết bị có thể chạy nhiều máy ảo hiệu quả. Các VM Dalvik thực thi các tập tin thực thi Dalvik (dex). Định dạng được tối ưu hóa cho bộ nhớ tối thiểu. VM là dựa trên register-based, và chạy các lớp đã được biên dịch bởi một trình biên dịch Java để chuyển đổi thành các định dạng dex. Các VM Dalvik dựa vào nhân Linux cho các chức năng cơ bản như luồng và quản lý bộ nhớ thấp. 3.5. Linux kernel  Android dựa trên Linux phiên bản 2.6 cho hệ thống dịch vụ cốt lõi như security, memory management, process management, network stack, and driver model. Kernel Linux hoạt động như một lớp trừu tượng hóa giữa phần cứng và phần còn lại của phần mềm stack. 4. Android Emulator. Android SDK và Plugin Eclipse được gọi là một Android Deverloper Tool (ADT). Các Android coder sẽ cần phải sử dụng công cụ IDE (Integrated Development Enveronment) này để phát triển, debugging và testing cho ứng dụng. Tuy nhiên, các coder cũng có thể không cần phải sử dụng IDE mà thay vào đó là sử dụng command line để biên dịch và tất nhiên là vẫn có Emulator như thường. Android Emulator được trang bị đầy đủ hầu hết các tính năng của một thiết bị thật. Tuy nhiên, một số đã bị giới hạn như là kết nối qua cổng USB, camera và video, nghe phone, nguồn điện giả lập và bluetooth.  Android Emulator thực hiện các công việc thông qua một bộ xử lý mã nguồn mở, công nghệ này được gọi là QEMU (http://bellard.org/qemu/) được phát triển bởi Fabrice Bellard. II. Các thành phần trong Android project. 1. Activity và Intent. Một activity thể hiện một giao diện đồ họa người dùng. Ví dụ một activity có thể biểu diễn một danh sách các menu item để người dùng có thể chọn và có thể hiển thị ảnh cùng với tiêu đề. Một ứng dụng gửi tin nhắn văn bản có thể có một hoạt động là hiển thị một danh sách các liên hệ gửi tin nhắn tới, hoạt động thứ hai là viết tin nhắn tới liên hệ được chọn, các hoạt động khác nữa là xem tin nhắn cũ hay thay đổi cài đặt. Mặc dù chúng làm việc cùng nhau để tạo thành một giao diện người dùng, mỗi activity độc lập với những cái khác. Mỗi activity là một lớp con của lớp cơ sở Activity. Một ứng dụng có thể gồm chỉ có một hay nhiều activity. Thông thường một trong số các activity được đánh dấu như là activity đầu tiên phải được trình diễn tới người dùng khi ứng dụng khởi động. Chuyển từ một activity này sang activity khác được hòan thành bằng cách cho activity hiện thời khởi động activity kế tiếp. Nội dung của activity được cung cấp dưới dạng cây phân cấp các đối tượng view kế thừa từ lớp View. Mỗi view điều khiển một khoảng hình chữ nhật cụ thể nằm trong giao diện. View cha chứa và tổ chức bố cục các view con. Các view là nơi tương tác giữa người dùng và ứng dụng. Android có một số view xây dựng sẵn như button, text fields, scroll bar, menu item…. Một cây phân cấp view được đặt gọi đến trong activity bằng phương thức Activity.setContenView(). Trong đó ContentView là đối tượng ở gốc của cây phân cấp. Class cơ sở Activity định nghĩa một loạt các sự kiện mà điều chỉnh vòng đời của một hoạt động. Bao gồm: - onCreate() : Gọi khi hoạt động được tạo ra lần đầu tiên. - onStart() : được gọi khi hoạt động đã được hiển thị cho người dùng. - onResume(): Được gọi khi activity bắt đầu tương tác lại với người dùng. - onPause(): Được gọi để dừng các hoạt động hiện tại và nối lại các hoạt động trước đó. - onStop(): Được gọi khi hoạt động không còn hiển thị. - onRestart(): Được gọi khi hệ thống đã dừng lại và khởi động lại một lần nữa. Sau đây là vòng đời của 1 activity: Intent là một cấu trúc dữ liệu mô tả cách thức, đối tượng thực hiện của một activity. Là cầu nối giữa các activity. Ứng dụng android thường bao gồm nhiều các activity, mỗi activity hoạt động độc lập  với nhau và thực hiện những công việc khác nhau. Intent chính là cầu nối giúp các activity có thể triệu gọi cũng như truyền dữ liệu cần thiết tới một activity khác. Điều này cũng giống như việc di chuyển qua lại giữa các Form trong lập trình Window Form. 2. Service Một service không có giao diện trực quan, nó chạy trên nền trong một khoảng thời gian không xác định. Ví dụ một service có thể chạy nhạc nền hay nó nạp dữ liệu trên namgj… và cung cấp kết quả cho activity cần đến nó. Mỗi service mở rộng từ lớp cơ sở Service. Một ví dụ cổ điển là mediaplayer chơi các bài hát từ một danh sách. Ứng dụng player có thể có một hay hai activity cho phép người dùng chọn bài hát và chạy. Tuy nhiên, musicplayback không tự nó xử lý được khi người dùng muốn rời khỏi player và làm điều gì đó khác. Để tiếp tục chơi nhạc, media player có thể khởi động một service chạy trên nền. Hệ thống sẽ giữ cho music playback service chạy, thậm chí khi activity khởi động nó rời khỏi màn hình. Giống như các activity và các thành phần khác, service chạy trong thread chính của tiến trình ứng dụng. Vì thế chúng không thể chặn những thành phần khác hay giao diện người dùng, chúng thường tạo ra các thread khác cho các nhiệm vụ hao tốn thời gian. 3. Broadcast Reveive Broadcast Reveivervier là một thành phần dùng để nhận và đáp lại các thông báo broadcast. Nhiều broadcast khởi đầu trong mã hệ thống ví dụ như múi giờ, pin yếu…. Các ứng dụng có thể tạo ra các broadcast. Một ứng dụng có thể có một số broadcast receiver để đáp lại bất kì thông báo nào mà nó cho là quan trọng. Tất cả các receiver mở rộng từ lớp cơ sở BroadcastReceiver. BroadcastReceiver không hiển thị môt giao diện người dùng nhưng chứng có thể bắt đầu một activity để đáp lại thông tin mà chúng nhận , hay có thẻ sử dụng NotificationManager để cảnh báo người dùng. Notifications có thể lấy sự chú ý của người dùng bằng cách như lóe sáng đèn sau, rung, âm thanh... Notifications được gán trên thanh trạng thái và người dùng có thể lấy được thông điệp qua đó. 4. Content Provider Một content provider tạo ra một tập cụ thể các dữ liệu của ứng dụng khả dụng cho các ứng dụng khác. Dữ liệu có thể được lưu trữ trong file hệ thống hoặc Cơ sở dữ liệu hoặc một cách nào đó. Content provider mở rộng từ lớp cơ sở ContentProvider để cài đặt một tập các chuẩn các phương thức cho phép các ứng dụng khác có thể lưu trữ dữ liệu mà nó điều khiển. Tuy nhiên, các ứng dụng không gọi trực tiếp các phương thức này, chúng sử dụng một đối tượng ContentResolver và gọi các phương thức của nó. Một ContentResolver có thể giao tiếp với bất kì content provider nào, chúng kết hợp với các provider để quản lý việc giao tiếp tiến trình. 5. AndroidManifest.xml  	Trước khi Android có thể khởi động một thành phần ứng dụng, nó phải biết rằng thành phần đó tồn tại. Vì vậy ứng dụng khai báo những thành phần của mình trong mọt manifest file được gắn vào Android packet, file .apk này cũng giữ mã của ứng dụng và các tài nguyên. 	Mainfest file là một file XML có cấu trúc và thường được đặt tên là AndroidManifest.xml cho mọi ứng dụng. Nó thực hiện một số bổ sung để khai báo các thành phần của ứng dụng muốn được cấp. 	Ví dụ như nó khai báo cácacActivity trong chương trình của chúng ta, khi khởi động chương trình thì Activity nào sẽ được thực hiện đầu tiên, các quyền truy cập Internet, sdcard hay các vấn đề về gửi nhận tin nhắn, cuộc gọi…. 6. Giao diện người dùng trong Android 	Trong một ứng dụng android, giao diện người dùng được xây dựng bằng cách sử dụng view và viewgroup. Các viewgroup cung cấp kiến trúc, bố trí các thành phần view còn được gọi là layout. 7. Thanh phần giao diện Widget 	Widget là một object View phục vụ như một giao diện để tương tác với người dùng. Android cung cấp một tập các widgets thực hiện đầy đủ giống như các button, checkbox.… do đó bạn có thể nhanh chóng xây dựng giao diện người dùng của bạn. Một số widgets được dung cấp bởi Android phức tạp hơn, giống như một date picker, clock và zoom controls. Nhưng nó không giới hạn các loại widget được dung cấp bởi các nền tảng Android. PHẦN III. PHÂN TÍCH THIẾT KẾ HỆ THỐNG. I. Mô tả chung. 1.  Mục tiêu của phần mềm. 			 - Phần mềm từ điển trên di động được xây dựng phục vụ cho việc học tập và công việc. - Phần mềm hỗ trợ tra cứu thông minh, hiển thị hình ảnh trực quan. - Thông qua phần mềm người dùng có thể tra cứu từ, đoạn văn, nghe phát âm một các nhanh chóng, chính xác. 2. Mô hình tổng quát của phần mềm. II. Yêu cầu phần mềm 1. Yêu cầu về chức năng Tra từ bằng Text. (Yc1). Tra từ bằng giọng nói. (Yc2). Thêm từ vào danh sách từ của tôi. (Yc3). Xóa danh sách từ của tôi. (Yc4). Tra từ online, dịch cả đoạn văn. (Yc5). Nghe phát âm. (Yc6). Xem lịch sử tra cứu. (Yc7). Xóa lịch sử tra cứu. (Yc8). Xem hình ảnh mô tả cho nghĩa của từ. (Yc9) Cài đặt từ điển.(Yc10) 2. Yêu cầu phi chức năng. Từ điển với ngôn ngữ phong phú, tra cứu nhanh, chính xác. -     Phần mềm phải đơn giản dễ sử dụng, giao diện thân thiện với người dùng. -     Phần mềm gọn nhẹ, chạy tốt trên các dòng máy cấu hình vừa và thấp. III. Đặc tả yêu cầu 1. Chức năng Tra từ Text. Tên Use Case: Tra Tu Text Điều kiện:  Tác nhân: Người dùng Mục đích: Tra cứu nghĩa của từ, nghe phát âm và xem hình ảnh minh họa. Mô tả: Người dùng có nhu nhầu tra cứu nghĩa của 1 từ bất kì hoặc muốn nghe phát âm của từ đó. Ngườig dùng chỉ cần nhập từ vào bấm tra cứu hoặc chọn từ gợi ý là có thể xem được nghĩa và nghe phát âm của từ đó. Người dùng có thể click vào bức ảnh để mở ra ảnh minh họa. Mối quan hệ: Yc1,Yc5,Yc6 Hành động của tác nhân 1. Người dùng khởi động ứng dụng. 2. Người dùng nhập vào từ cần tra 3. Người dùng bấm chọn nút Tra Từ, hoặc chọn từ gợi ý từ ứng dụng. 4. Người dùng bấm nút nghe phát âm hoặc xem hình ảnh liên quan. Hệ thống trả lời 1. Hiển thị giao diện Tra cứu. 2. Hệ thống nhắc những từ gần với từ người dùng đang nhập. 3. Tìm kiếm từ trong CSDL và hiển thị nghĩa, các ví dụ sử dụng từ. 4. Kiểm tra file âm thanh sau đó phát âm, kiểm tra file hình ảnh và hiển thị. Khả năng ngoài dự tính 1. Từ không tồn tại trong CSDL  Dịch online. 2. File âm thanh/hình ảnh không tồn tại  Báo lỗi không chứa file âm thanh, hình ảnh. 2. Chức năng Từ của tôi Tên Use Case: TuCuaToi Điều kiện:  Tác nhân: Người dùng Mục đích: Chọn những từ hay sử dụng cho vào danh sách từ của tôi để tiện tra cứu. Mô tả: Người dùng có nhu cầu sử dụng một hoặc một số từ nào đó nhiều lần mà mỗi lần tra cứu không cần nhập lại những từ đó. Người dùng có thể sử dụng chức năng Từ của tôi để thực hiện việc này một cách đơn giản. Mối quan hệ:  Hành động của tác nhân 1. Người dùng chọn chức năng Đánh dấu từ của tôi. 2. Người dùng chọn menu Từ Của Tôi 3. Người dùng kích lên các từ. Hệ thống trả lời 1. Hiển thị thông báo đã thêm từ vào danh sách từ của tôi. 2. Hệ thống hiển thị danh sách các từ đã được đánh dấu. 3. Hệ thống tự động tra cứu và hiển thị nghĩa. Khả năng ngoài dự tính 3. Chức năng Xem lịch sử tra cứu. Tên Use Case: XemLichSuTraCuu Điều kiện:  Tác nhân: Người dùng Mục đích: Xem danh sách những từ đã tra cứu. Mô tả: Người dùng muốn xem lại những từ đã tra cứu chỉ cần chọn chức năng Xem lịch sử tra cứu. Tất cả các từ đã tra cứu sẽ hiển thị và khi kích vào đó sẽ hiển thị nghĩa của từng từ. Mối quan hệ:  Hành động của tác nhân 1. Người dùng chọn chức năng Lịch sử. 2. Người dùng chọn vào một từ. Hệ thống trả lời 1. Hiển thị giao diện danh sách những từ đã tra cứu và hiển thị lên chức năng Xóa lịch sử. 2. Hệ thống hiển thị lên nghĩa của từ đó. Khả năng ngoài dự tính 4. Chức năng Dịch Online Tên Use Case: DichOnline Điều kiện: Tác nhân: Người dùng Mục đích: Dịch cả đoạn văn hoặc những từ không có trong cơ sở dữ liệu. Mô tả: Người dùng muốn dịch cả đoạn văn bản hoặc từ tra cứu không có trong CSDL thì hệ thống có thể chuyển sang chế độ tra từ Online hoặc người dùng tự chọn chế độ này. Mối quan hệ:  Hành động của tác nhân 1. Ngươi dùng chấp nhận thông báo dịch online hoặc click vào chức năng Dịch online. 2. Người dùng nhập vào từ hoặc đoạn văn cần dịch. Hệ thống trả lời 1. Hiển thị giao diện Dịch online 2. Hệ thống kết nối mạng và tra cứu từ online và trả về kết quả. Khả năng ngoài dự tính 1. Không có kết nối mạng  Báo lỗi kết nối mạng Internet. 	5. Chức năng Xóa lịch sử tra cứu Tên Use Case: XoaLichSuTraCuu Điều kiện: XemLichSuTraCuu đã thực hiện. Tác nhân: Người dùng Mục đích: Xóa tất cả lịch sử tra cứu. Mô tả: Người dùng muốn xóa bỏ dữ liệu lưu trữ lại lịch sử tra cứu từ. Sau khi xem và chọn xóa lịch sử tra cứu. Toàn bộ lịch sử sẽ bị xóa. Mối quan hệ:  Hành động của tác nhân 1. Chọn xóa lịch sử tra cứu từ. 2. Người dùng chấp nhận xóa. Hệ thống trả lời 1. Hiển thị giao diện Hỏi đáp xóa lịch sử. 2. Xóa dữ liệu, khi hoàn thành thông báo xóa thành công. Khả năng ngoài dự tính 6. Chức năng Nghe phát âm. Tên Use Case: NghePhatAm Điều kiện: Use case Tra Tu Text hoặc Tra Tu Giong Noi đã thực hiện. Tác nhân: Người dùng Mục đích: Nghe phát âm của từ đã tra. Mô tả: Người dùng muốn nghe cách phát âm của từ cần tra, chỉ cần gõ hoặc nói từ đó vào, tra nghĩa và bấm chọn nghe. Mối quan hệ:  Hành động của tác nhân 1. Nhập vào từ cần phát âm. 2. Người dùng bấm nghe. Hệ thống trả lời 1. Kiểm tra file âm thanh và phát âm. Khả năng ngoài dự tính 1. File âm thanh không tồn tại  Báo lỗi không chứa file âm thanh hoặc không phát âm được từ đã nhập vào. 7. Chức năng xem hình ảnh liên quan đến từ. Tên Use Case: XemHinhAnh Điều kiện:. Use case Tra Tu Text hoặc Tra Tu Giong Noi đã thực hiện. Tác nhân: Người dùng Mục đích: Xem hình ảnh liên quan đến từ. Mô tả: Để hiểu rõ hơn nghĩa của từ, người dùng có thể xem hình ảnh. Mối quan hệ:  Hành động của tác nhân 1. Nhập vào từ cần tra cứu. 2. Người dùng bấm xem. 3. Người dùng click button nghe phát âm. Hệ thống trả lời 1. Hiển thị nghĩa của từ và chức năng xem hình ảnh liên quan đến từ. 2. Hiển thị các ảnh có liên quan. 3. Phát âm từ được gắn với hình ảnh. Khả năng ngoài dự tính 1. File hình ảnh không tồn tại  Hiển thị hình mặc định thông báo không tìm thấy ảnh. 2. File âm thanh không tồn tại  Thông báo không tìm thấy file âm thanh. 8. Chức năng Tra Từ Giọng Nói. Tên Use Case: TraTuGiongNoi Điều kiện: Tác nhân: Người dùng. Mục đích: Tra từ thông minh qua giọng nói. Mô tả: Chức năng tra từ thông minh người dùng không phải nhập từ chỉ cần nói vào, ứng dụng sẽ tự nhận dạng từ và tra cứu. Sau đó đưa ra nghĩa. Bên cạnh đó người dùng có thể nghe phát âm của từ, xem hình ảnh liên quan đến từ tương tự như tra cứu bằng Text. Mối quan hệ: Yc5,Yc6 Hành động của tác nhân 1. Chọn chức năng Tra cứu từ qua giọng nói. 2. Người dùng phát âm từ cần tra cứu. Hệ thống trả lời 1. Hiển thị giao diện ghi âm, mời người dùng nói. 2. Nhận dạng từ, tra cứu nghĩa và hiển thị. Khả năng ngoài dự tính Không thể nhận dạng từ   Thông báo không thể phát hiện từ. Nhận dạng sai từ. Nhận dạng được từ nhưng không tra cứu được nghĩa  cho phép tra cứu online. 9. Chức năng Cài đặt từ điển. Tên Use Case: CaiDatTuDien Điều kiện: Tác nhân: Người dùng. Mục đích: Thiết lập từ điển sử dụng. (Anh - Việt hoặc Việt - Anh) Mô tả: Chức năng cài đặt từ điển cho phép người dùng thiết lập từ điển đang sử dụng. Người dùng có 2 sự lựa chọn chuyển đổi giữa từ điển Anh – Việt và từ điển Việt – Anh. Mối quan hệ:  Hành động của tác nhân 1. Chọn chức năng Cài đặt. 2. Người dùng thiết lập các giá trị cần thiết và quay lại giao diện màn hình chủ. Hệ thống trả lời 1. Hiển thị giao diện cài đặt. 2. Tự động lưu lại giá trị được thiết lập. Chuyển từ điển được cài đặt cho người dùng sử dụng. Khả năng ngoài dự tính IV. Thiết kế CSDL 1. Thiết kế Logic CSDL     1.1. Mô hình quan hệ của CSDL Ứng dụng từ điển được viết trên nền tảng Android nên phần dữ liệu của từ điển được thiết kế một cách đơn giản. Dữ liệu được chia thành hai bảng và các thuộc tính như sau:     1.2. Danh sách các bảng trong CSDL  STT Tên bảng Alias Mô tả 1 anh_viet Từ điển Anh – Việt Là bảng lưu trữ dữ liệu phục vụ cho tra cứu. Bảng chứa id là khóa chính, word là những từ tiếng Anh và mean là nghĩa của từ dịch qua tiềng Việt. 2 viet_anh 	Từ điển Việt Anh Là bảng lưu trữ dữ liệu phục vụ cho tra cứu. Bảng chứa id là khóa chính, word là những từ tiếng Việt và mean là nghĩa của từ dịch qua tiếng Anh. 1.3. Bảng anh_viet STT Tên trường Kiểu dữ liệu Độ dài Allow Null Unique Primary/Foreign Key Giá trị mặc định Mô tả 1 id INTEGER 7 N Y Y Là trường tự tăng, khóa chính của bản ghi. 2 word TEXT 50 N Y N Là trường lưu trữ các từ tiếng Anh. 3 mean TEXT N N N Là trường lưu trữ nghĩa tiếng Việt của các từ tiếng Anh. Giá trị về độ dài không giới hạn. Indexes STT Tên index Loại Các trường liên quan 1 idx_idx Unique ID 2 wordx_idx Unique word 1.4. Bảng viet_anh STT Tên trường Kiểu dữ liệu Độ dài Allow Null Unique Primary/Foreign Key Giá trị mặc định Mô tả 1 id INTEGER 7 N Y Y Là trường tự tăng, khóa chính của bản ghi. 2 word TEXT 50 N Y N Là trường lưu trữ các từ tiếng Việt. 3 mean TEXT N N N Là trường lưu trữ nghĩa tiếng Anh của các từ tiếng Việt. Giá trị về độ dài không giới hạn. 1.4.1. Indexes STT Tên index Loại Các trường liên quan 1 id_idx Unique ID 2 word_idx Unique word 2. Các file dữ liệu STT Tên thư mục/Tên file Mô tả Nơi lưu trữ 1 images Thư mục chứa các file ảnh minh họa cho từ. Các file ảnh được đặt tên trùng với từ có trong từ điển. /sdcard/MyDictionary/ 2 audio Thư mục chứa các file âm thanh để phát âm từ tiếng Việt. Các file âm thanh được đặt tên trùng với từ có trong từ điển. /sdcard/MyDictionary/ 3 databases Thư mục chứa file mydict.sqlite là file dữ liệu của từ điển. /sdcard/MyDictionary/ Ghi chú: Trường mean được lưu trữ dạng mã HTML và cấu trúc như sau: <span class="title">Từ cần tra</span><br /> <span class="type">Loại từ</span> <ul><li>Nghĩa<ul><li> <span class="example"> <a href="entry://té" class="aexample">Link đến các từ khác</a> <class="aexample">Ví dụ cho từ</a>:</span> </li></ul></li></ul> 3. Thiết kế vật lý CSDL Ứng dụng sử dụng hệ quản trị cơ sở dữ liệu LQLite. Sau đây là một vài mô tả, đánh giá về hệ quản trị cơ sở dữ liệu này. a. SQLite là gì? SQLite là một bộ thư viện dùng trong lập trình để hiện thực một SQL Database Engine có khả năng tự tổ chức quản lý dữ liệu, không cần server, không cần cấu hình mà vẫn hỗ trợ đầy đủ các tính năng quản lý giao tác. SQL Database Engine mã nguồn mở theo mô hình dữ liệu quan hệ đang được sử dụng nhiều nhất trên thế giới do tính cơ động cao, dễ sử dụng, gọn nhẹ, hiệu quả và tin cậy.  b. Một số đặc điểm của hệ quản trị CSDL SQLite Đảm bảo đầy đủ 4 đặc tính ACID của các giao tác: tuy cực kỳ nhỏ gọn nhưng các giao tác làm việc với SQLite được đảm bảo đầy đủ 4 tính chất cơ bản của giao tác là tính nguyên tổ (Atomic), tính nhất quán (Consistent), tính cô lập (Isolated), và tính bền vững (Durable) thậm chí sau khi hệ thống bị crash hoặc gặp các sự cố về nguồn điện. Không cần cấu hình: với SQLite chúng ta sẽ không cần phải cài đặt hay quản trị nó SQLite có gần như toàn bộ các đặc tính phổ biến của SQL theo chuẩn SQL92. Tuy nhiên còn một số tính năng như RIGHT OUTER JOIN, FULL OUTER JOIN, FOR EACH STATEMENT TRIGGER.... chưa được hỗ trợ. Toàn bộ Database được lưu trữ trong 1 tập tin trên đĩa duy nhất. Hỗ trợ CSDL lên tới hằng TetraByte, trong đó các kiểu dữ liệu chuỗi và blobs lên tới hằng GigaByte. Bộ thư viện quản lý rất nhỏ, gọn: dưới 500 KB cho bản đầy đủ tính năng, và có thể ít hơn nếu loại bớt một số đặc tính.  Hầu hết các thao tác trên dữ liệu thông thường đều chạy nhanh hơn các Database Engine theo kiểu Client/Server phổ biến khác. Đơn giản và dễ sử dụng bộ API tương ứng. Mã nguồn mở được viết bằng ANSI-C, được comment rất tốt và có thể tái sử dụng với bất cứ mục đích gì. SQLite có thể được tải về và nhúng vào các dự án khác nhau dưới hình thức một Single ANSI-C source-code file. Tự tổ chức lưu trữ (self-contained) mà không phải phụ thuộc vào các thư viện bên ngoài. Đây là một đặc điểm khá quan trọng khiến SQLite trở thành CSDL phù hợp để nhúng vào các thiết bị di động hoặc tích hợp vào các ứng dụng muốn chạy mà không cần phải điều chỉnh cấu hình hệ thống. Trong bộ thư viện SQLite có sẵn 1 client đơn giản giao tiếp theo chế độ dòng lệnh (Command-Line Interface – CLI) tên làsqlite3 (trên môi trường Windows là tiện ích sqlite3.exe) để có thể được dùng để quản trị CSDL SQLite. c. Ứng dụng của SQLite. Do đặc điểm được thiết kế của SQLite ngay từ đầu, nên CSDL nhúng này phù hợp với một số tình huống sử dụng như sau: SQLite có thể sử dụng như định dạng tập tin thích hợp cho các ứng dụng: trước đây các tập tin cấu hình có thể được lưu dưới dạng file .ini, rồi sau đó là .xml.... tuy nhiên chúng ta sẽ cần phải viết hoặc phụ thuộc vào việc sử dụng các parser phù hợp. Sử dụng SQLite không những giúp chúng ta khắc phục được yếu điểm này mà chương trình của chúng ta lại còn có thể chạy trên nhiều nền tảng khác nhau. SQLite có thể sử dụng làm CSDL cho các thiết bị điện tử. Quả thật SQLite đang là sự lựa chọn phổ biến về Database Engine cho các thiết bị điện tử như PDA, điện thoại di động, MP3 Player, các hộp set-top box và nhiều loại thiết bị điện tử khác. SQLite nhỏ, sử dụng bộ nhớ, không gian lưu trữ và băng thông đĩa hiệu quả, tin cậy mà không cần phải quản trị bởi các quản trị viên chuyên nghiệp. Nếu bạn đang viết ứng dụng trên các thiết bị chạy iOS như iPhone, iPad,... hay các thiết bị chạy Android hoặc Windows Mobile,... thì SQLite chính là CSDL phù hợp cho các thiết bị di động này. SQLite có thể sử dụng như CSDL cho các website. Do SQLite không cần phải cấu hình và dữ liệu được lưu trữ thành các tập tin trên đĩa thật sự nên nó đang trở thành lựa chọn phổ biến cho các website vừa và nhỏ. SQLite có thể thay thế cho các CSDL quan hệ tầm doanh nghiệp trong một số tình huống như kiểm thử, demo minh họa.... do SQLite chạy khá nhanh và không cần cài đặt. d. Hạn chế của SQLite. Ngoài các ưu điểm được ca tụng nhiều trên website của SQLite, nếu đem so với các CSDL mạnh khác như Oracle Dabase, SQL Server.... thì SQLite sẽ bọc lộ một số yếu điểm sau: Tính đồng thời: SQLite sử dụng cơ chế khóa coarse-gained locking có thể hỗ trợ nhiều người đọc dữ liệu, nhưng chỉ có 1 người có thể ghi dữ liệu một lúc mà thôi. Nối kết mạng: mặc dù SQLite có thể được chia sẻ thông qua các network file systems, tuy nhiên độ trễ giữa các hệ thống tập tin này sẽ ảnh hưởng nghiêm trọng tới hiệu suất thực hiện của SQLite. Tệ hại hơn nữa là, các lỗ hỏng trong việc triển khai các hệ thống tập tin trong môi trường mạng có thể gây ra nhiều lỗi do các tập tin có thể bị mở và điểu chỉnh từ xa. Phù hợp với các ứng dụng có qui mô dữ liệu nhỏ: trong thời đại bùng nổ thông tin như hiện nay, SQLite không phải là lựa chọn lý tưởng để đáp ứng các nhu cầu xử lý trên 1 khối lượng dữ liệu lớn, phát sinh liên tục. V. Thiết kế Phần mềm. 1. Thiết kế kiến trúc. 1.1. Mô hình kiến trúc 2. Thiết kế các thành phần. 2.1. Tra cứu từ qua Text. Input: Từ được nhập từ người dùng. Output: Nghĩa của từ nhập vào. Xử lý:  Begin { 	If ( input !=null ) { 	Output= Translate (input); If (output !=null){ 	showResult (output); 	addHistory (input);	 } else { 	Msg (“Không tìm thấy từ trong CSDL. Bạn muốn tra cứu online ?”); 	translateOnline(); } }else { Msg(“Thông báo từ nhập vào trống”); } } End; 2.2. Tra cứu Từ qua giọng nói. Input: Từ được phát âm. (voice) Output: Nghĩa của từ nhận được. Xử lý:  Begin { 	If ( voice !=null ) { Input= voice ; 	Output= Translate (input); If (output !=null){ 	showResult (output); 	addHistory (input);	 } else { 	Msg (“Không tìm thấy từ trong CSDL. Bạn muốn tra cứu online ?”); 	translateOnline(); } }else { Msg(“Thông báo không nhận dạng được từ.”); } } End; 2.3. Chức năng Từ của tôi Input: Từ đã được tra cứu. Output: Danh sách từ được đánh dấu từ của tôi. Xử lý:  // Xử lý thêm và xóa từ khỏi danh sách từ cả tôi. Begin{ 	If(isMyWord==false) { 	If( btnAddMyWordClicked) { 	addMyWord(input);	 } }else{ 	btnRemoveMyWord=true; } getMyWord(); showMyWord(); if(btnDeleteMyWordClicked) { 	If(Yes) { 	deleteMyWord(); msg(“Xóa thành công”); } } } End; 2.4. Chức năng Lịch sử tra cứu. Input:  Output: Danh sách những từ đã tra cứu trong phiên làm việc hiện tại. Xử lý:  Begin{ 	If( history !=null){ 	showHistory(); }else{ 	Msg(“Lịch sử tra cứu trống !”); } If(btnDeleteHistoryClicked) {	 	If (Yes) { 	deleteHistory(); 	Msg(“Xóa lịch sử tra cứu thành công !”); } } } End; 2.5. Chức năng dịch Online Input: Từ hoặc đoạn văn bản được nhập vào. Outut: Nghĩa của từ hoặc đoạn văn bản. Xử lý: Begin{ 	If (intenetConnected) { 		If(input != null) {	 		Output= translateOnline(input); 		showResult(output); }else{ 	Msg(“Dữ liệu nhập vào trống”); }	 }else{ 	Msg(“Lỗi kết nối mạng, vui lòng kiểm tra lại”); }} End; 2.6. Chức năng Nghe phát âm. Input : Từ được nhập vào qua bàn phím hoặc nhận dạng qua âm thanh. Output: Phát âm của từ. Xử lý: Begin{ 	If(audioFileName !=null ) { 	playSound(); }else{ 	Msg(“Không tìm thấy file audio !”); } } End; 2.7. Chức năng Xem ảnh minh họa Input : Từ được nhập vào qua bàn phím hoặc nhận dạng qua âm thanh. Output: Hình ảnh minh họa của từ. Xử lý: Begin{ 	If(imageFileName !=null ) { 	showImage(); }else{ 	Msg(“Không tìm thấy file ảnh !”); } } End; 2.8. Chức năng Cài đặt từ điển. Input : Giá trị thiết lập từ điển. Output: Từ điển được chọn. Xử lý: Begin{ 	If(settingChanged) { 	saveSetting(); 	applySetting(); } } End; 3. Thiết kế giao diện người dùng. a. Giao diện chương trình. Mô tả xử lý của giao diện: b. Giao diện tra từ. Mô tả hoạt động: c. Giao diện Từ của tôi Mô tả hoạt động của activity: d. Giao diện Lịch sử tra cứu. Mô tả hoạt động của activity: d. Giao diện Thiết lập Mô tả hoạt động của activity: e. Giao diện xem hình ảnh. Mô tả hoạt động của activity: f. Giao diện Dịch online Mô tả hoạt động của activity: 	g. Giao diện Tra từ giọng nói. Mô tả hoạt động của activity: 	g. Giao diện hỏi đáp Xóa từ của tôi. 	Mô tả hoạt động của activity: h. Giao diện hỏi đáp Xóa lịch sử tra cứu. 	i. Giao diện hỏi đáp Thoát. 	Mô tả hoạt động của activity: 	j. Giao diện Thông tin. PHẦN VI. CHƯƠNG TRÌNH DEMO VÀ HƯỚNG DẪN SỬ DỤNG. I. Chương trình demo. Các chức năng chính đã xây dựng trong chương trình: Chức năng tra từ bằng Text. Chức năng tra từ qua giọng nói. Chức năng đánh dấu từ của tôi. Chức năng xem lịch sử tra cứu. Chức năng nghe phát âm. Chức năng xem hình ảnh minh họa. Chức năng xóa lịch sử tra cứu. Chức nằng xóa danh sách từ của tôi. Chức năng xem danh sách từ của tôi. Chức năng cài đặt từ điển. Chức năng tra cứu từ online. II. Hướng dẫn sử dụng. 1. Hướng dẫn tra từ bằng text. Tại giao diện chính của ứng dụng. Nhập vào từ cần tra. Kết thúc bằng cách chọn từ gợi ý hoặc chọn Go/Done trên bàn phím ảo. Bạn có thể kéo và click chọn tra cứu những từ được đánh dấu trên nghĩa của từ trước. 2. Hướng dẫn tra từ bằng giọng nói. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng chiếc micro. Ứng dụng sẽ hiển thị cho bạn 1 màn hình, yêu cầu bạn phát âm. Sau khi bạn phát âm, tự động ứng dụng sẽ phát hiện từ và tra nghĩa cho bạn. 3. Cài đặt từ điển. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng menu. Chọn menu Thiết Lập Chọn Thiết lập từ điển. Chọn Từ điển được thiết lập. Bấm nút Back để lưu cài đặt và quay lại giao diện tra cứu. 4. Xem ảnh minh họa. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng bức ảnh. Kéo qua trái, phải để xem ảnh Bấm vào biểu tượng chiếc loa để nghe phát âm. 5. Xóa từ của tôi. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng Menu. Chọn Từ của tôi. Nhấp vào biểu tượng thùng rác. Chọn Đồng ý. 6. Xem lịch sử tra cứu. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng Menu. Chọn Lịch sử. 7. Xóa lịch sử tra cứu. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng Menu. Chọn Lịch sử. Nhấp vào biểu tượng thùng rác. Chọn Đồng ý. 8. Tra từ online. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng Internet. Nhập vào từ hoặc đoạn văn bản. Bấm Dịch. 9. Xem danh sách từ của tôi. Tại giao diện chính của ứng dụng. Nhấp vào biểu tượng Menu. Chọn Từ của tôi. PHẦN V. KẾT LUẬN I. Đánh giá. Ứng dụng Từ điển di động trên Android đáp ứng được các yêu cầu về chức năng. II. Hướng phát triển trong tương lai. Phát triển thành từ điển đa ngôn ngữ. Cho phép người dùng tự định nghĩa một hoặc nhiều từ điển. Phát triển tra từ bằng hình ảnh. Đưa thêm các chương trình học, game học tiếng vào nhằm đa dạng hóa từ điển. III. Tài liệu tham khảo. Zigurd Mednieks, Laird Dornin, G. Blake Meike, Masumi Nakamura, 2012, Programming Android, 2nd Edition, O'Reilly Media, 566 pp. Onur Cinar , 2012, Android App with Eclipse, 2nd Edition, Apress, 372pp. Trần Duy Thanh, 2013, Cách sử dụng SQLite trong Android, http://duythanhcse.wordpress.com/ ,truy cập ngày 10/2/2014. Tô Hữu Nguyên, 2013, Tìm hiểu về hệ điều hành Android, Luận văn tốt nghiệp ngành Công nghệ thông tin, Trường Đại học Thái Nguyên, Thái Nguyên. Jeff Friesen, 2013, Learn Java for Android Development, 2nd Edition, Apress, 780pp. 