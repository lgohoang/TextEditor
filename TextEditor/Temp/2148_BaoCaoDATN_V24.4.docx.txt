LỜI NÓI ĐẦU Nhận dạng là bài toán xuất hiện cách đây khá lâu và vẫn luôn thu hút được nhiều sự quan tâm, nghiên cứu. Đặc biệt là trong vài thập niên gần đây, do sự thúc đẩy của quá trình tin học hoá trong mọi lĩnh vực, bài toán nhận dạng không còn dừng lại ở mức độ nghiên cứu nữa mà nó trở thành một lĩnh vực để áp dụng vào thực tế. Các bài toán nhận dạng đang được ứng dụng trong thực tế hiện nay tập trung vào nhận dạng mẫu, nhận dạng tiếng nói và nhận dạng chữ. Trong số này, nhận dạng chữ là bài toán được quan tâm rất nhiều và cũng đã đạt được nhiều thành tựu rực rỡ. Các ứng dụng có ý nghĩa thực tế lớn có thể kể đến như: nhận dạng chữ in dùng trong quá trình sao lưu sách báo trong thư viện, nhận dạng chữ viết tay dùng trong việc phân loại thư ở bưu điện, thanh toán tiền trong nhà băng và lập thư viện sách cho người mù (ứng dụng này có nghĩa: scan sách bình thường, sau đó cho máy tính nhận dạng và trả về dạng tài liệu mà người mù có thể đọc được). 	Nhu cầu thực tế cho thấy, nhập liệu thông tin của các đối tượng từ một tập các biểu mẫu có định dạng giống nhau rất mất nhiều thời gian cũng như công sức của người nhập liêu, làm cho năng suất công việc thấp. Việc ứng dụng nhận dạng ký tự trong biểu mẫu số hóa giúp cho công việc nhập liệu trở nên dễ dàng và thực hiện một cách nhanh chóng, tiết kiểm thời gian cũng như công sức của con người. Cùng với xu hướng công nghệ trong tương lai “Internet of things” , dữ liệu dễ dàng được chia sẻ trực tuyến thông qua mạng internet một cách thuận tiện.  Xuất phát từ yêu cầu thực tế, chúng em đã chọn đề tài xây dựng hệ thống số hóa biểu mẫu trực tuyến, hệ thống hỗ trợ nhập liệu một cách nhanh chóng và chính xác với dữ liệu biểu mẫu scan được lấy trên google drive, và dữ liệu sau khi trích xuất (thông tin nhập liệu) sẽ được lưu trên CSDL local và được đồng bộ lên goolge cloud.  Em xin chân thành cảm ơn thầy giáo T.S.Nguyễn Văn Giang , cô giáo Nguyễn Hoài Anh, và các thầy cô giáo trong bộ môn Hệ thống thông tin, đã nhiệt tình giúp đỡ em hoàn thành đề tài này. Do kinh nghiệm và kiến thức còn hạn chế, trong quá trình xây dựng ứng dụng vẫn còn nhiều thiếu sót. Em kính mong nhận được sự giúp đỡ nhiều hơn nữa của thầy cô giáo và các bạn để đề tài và kiến thức bản thân được hoàn thiện hơn. Em xin chân thành cảm ơn ! Người thực hiện   									Nguyễn Thị Hằng 									Hoàng Thị Anh Chương 1 KHẢO SÁT HỆ THỐNG Mô tả hệ thống Nhiệm vụ cơ bản Tin học hoá trong công tác quản lý, nhập liệu nhằm giảm bớt sức lao động, tiết kiệm được thời gian, có độ chính xác cao, gọn nhẹ, tiện lợi. Hệ thống số hóa biểu mẫu trực tuyến là hệ thống trích xuất các thông tin từ hình ảnh biểu mẫu được lưu trên google drive, sau đó các thông tin trích xuất được đưa vào cở dữ liệu SQL server. Cơ cấu tổ chức Hệ thống gồm 2 bộ phận : Bộ phận quản lý biểu mẫu: bộ phận này có chứ năng cơ bản sau: Scan biểu mẫu được giao, tạo biểu mẫu , chuẩn hóa và đưa ảnh lên google drive, định dạng biểu mẫu. Bộ phận nhập liệu: Bộ phận này có chức năng chọn biểu mẫu và danh sách các biểu mẫu cần nhập liệu, trích xuất thông tin cần nhập liệu từ biểu mẫu, kiểm tra và chỉnh sửa nếu sai, sau đố lưu thông tin nhận dạng vào CSDL. Quy trình xử lý và quy tắc quản lý Quy trình xử lý Nghiệp vụ quản lý hình ảnh biểu mẫu Khi có nhu cầu nhập liệu, Ban quản lý giao cho bộ phận nhập liệu các biểu mẫu cần nhập liệu, và thông tin các trường cần trích xuất trong biểu mẫu. Bộ phận quản lý hình ảnh biểu mẫu dựa vào phiếu giao biểu mẫu kiểm tra số lượng hồ sơ trên một loại mẫu biểu tiếp nhận, thông tin các trường, thời hạn nhập liệu. Mỗi một phiếu giao biểu mẫu tương ứng với một loại biểu mẫu. Nếu các hồ sơ của một biểu mẫu nhận được là bản cứng  thì mang đi scan để thu được các tệp hồ sơ ở dạng hình ảnh scan. Phân loại và tổ chức các tệp hồ sơ dạng scan theo từng loại biểu mẫu. Dựa vào các phiếu giao biểu mẫu người quản lý bộ phận quản lý hình ảnh biểu mẫu phân chia cho các nhân viên thực hiện upload các tệp hình ảnh theo từng biểu mẫu lên google drive. Nhân viên tiếp nhận phiếu giao biểu mẫu, tiến hành kiểm tra biểu mẫu này đã tồn tại trong hệ thống chưa, nếu chưa thì sẽ tạo biểu mẫu mới trước khi upload, nếu biểu mẫu đã có ta chọn biểu mẫu và tiến hành upload. Tiếp theo là upload hình ảnh biểu mẫu lên google drive. Trước tiên chọn biểu mẫu cần upload ảnh lên, nếu biểu mẫu này chưa có ảnh nào được upload lên google drive, thì tạo một folder mới chứa tất cả các ảnh thuộc loại biểu mẫu này trên google drive, với tên folder được đặt theo quy tắc mã biểu mẫu. Sau đó chọn hình ảnh biểu  mẫu upload lên google drive, hệ thống hỗ trợ hai cách bạn có thể chọn cả folder hoặc chọn các file ảnh muốn upload. Tất cả các ảnh này sau khi được chọn sẽ tự động được chuẩn hóa thành các hình ảnh biểu mẫu chuẩn có cùng kích thước trước khi đưa vào nhận dạng. Sau đó chúng sẽ được đẩy vào folder của loại biểu mẫu đã chọn trên google drive. Mọi thông tin upload ảnh sẽ được lưu trong cơ sở dữ liệu. Sau khi upload các hình ảnh lên google drive, nhân viên định dạng cho biểu mẫu mới nếu có, nếu biểu mẫu yêu cầu nhập liệu là biểu mẫu cũ nhân viên kiểm tra lại và so sánh xem có sự thay đổi về các trường cần nhận dạng không. Nếu có thì nhân viên chỉnh sửa định dạng biểu mẫu cho đúng với phiếu giao biểu mẫu yêu cầu, nếu không có gì thay đồi thì không cần chỉnh sửa . Dựa trên thông tin trong phiếu giao biểu mẫu,và một hình ảnh biểu mẫu đại diện cho loại biểu mẫu đó,  nhân viên tiến hành định dạng, nghĩa là xác định các trường yêu cầu nhập liệu và tọa độ các vùng cần nhập liệu. Mỗi biểu mẫu có bao nhiêu trường cần nhập liệu thì sẽ có bấy nhiêu vùng nhận dạng. Mỗi vùng nhận dạng sẽ có các thông tin về tọa độ điểm bắt đầu nhận dạng, chiều rộng và chiều dài vùng nhận dạng, tên trường trích xuất vị trí của trường đó tương ứng trên biểu mẫu. Sau khi định nghĩa xong tất cả các trường cần nhập liệu, nhân viên hoàn tất việc định dạng biểu mẫu và tạo ra bảng dữ liệu dùng trong nghiệp vụ nhập liệu để lưu các thông tin trích xuất của mỗi biểu mẫu. 	Nghiệp vụ nhập liệu : Sau khi bộ phận quản lý biểu mẫu hoàn thành việc định dạng biểu mẫu, sẽ gửi yêu cầu xuống bộ phân nhập liệu, nhân viên bộ phận sẽ lấy ảnh trên Google drive đưa vào nhận dạng. Các ảnh đưa vào nhận dạng đều là những ảnh chưa được nhập liệu. Trước tiên, nhân viên nhập liệu sẽ chọn loại biểu mẫu muốn nhập liệu. Các hình ảnh được lấy ra là các file ảnh chưa được nhận dạng của biểu mẫu đã chọn.  Sau khi chọn biểu mẫu nhận dạng, tiến hành nhập liệu cho từng hình ảnh. Dựa trên các thông tin định dạng biểu mẫu cho loại biểu mẫu này, hệ thống sẽ hiển thị hình ảnh biểu mẫu nhập liệu và các trường tương ứng chứa thông tin trích xuất ra khi nhận dạng. Sau khi ấn nhận dạng, hệ thống sẽ tự động trích xuất các thông tin từ ảnh và hiển thị lên các trường tương ứng để người dùng có thể chỉnh sửa lại. Những thông tin được trích xuất trong hình ảnh sẽ được highlight  để người nhập liệu dễ dàng kiểm tra và chỉnh xửa lại nếu thông tin sai. Sau khi chắc chắn thông tin đã chính xác, người dùng sẽ lưu thông tin nhận dạng được vào trong bảng dữ liệu tương ứng với loại biểu mẫu này đã được tạo ra khi định dạng biểu mẫu, ảnh sẽ được cập nhật lại trạng thái thành đã được nhập liệu. Nhập liệu cho đến khi hết ảnh chưa được nhận dạng thuộc biểu mẫu đó. Quy tắc quản lý Hệ thống áp dụng các quy tắc sau:  Những nhân viên thuộc bộ phận quản lý ảnh đưa ảnh lên goole drive phải đưa ảnh thông qua giao diện của ứng dụng, nhằm kiểm soát được dữ liệu đầu vào được đưa lên ở đâu với người dùng là ai. Mỗi một folder trên google drive chứa tất cả các hình ảnh thuộc cùng một biểu mẫu, tên folder được đặt theo quy tắc mã biểu mẫu  Các hình ảnh thuộc cùng một loại biểu mẫu phải có cùng định dạng. Biểu mẫu Mẫu phiếu giao biểu mẫu: PHIẾU GIAO BIỂU MẪU Số phiếu:……………… Ngày giao:  xx/xx/xxxx Mã biểu mẫu:………………………………………………. Tên Biểu mẫu:…………………………………………….... Người giao:………………………………………………… Số lượng:…………………………………………………… Trường trích xuất: - Trường 1 ……………. - Trường 2…………….. ……………………....... Ngày hoàn thành:………………………………………….. Người giao  	                 Người nhận                  Chữ ký quản lý bộ phận ………….                   ..…………….                   …………………… Hình 1.1 Biểu mẫu Phiếu giao biểu mẫu Mô hình hóa hệ thống Mô hình tiến trình nghiệp vụ Ký hiệu sử dụng Hình 1.2 Ký hiệu sử dụng vẽ mô hình tiến trình nghiệp vụ Vẽ mô hình Hình 1.3 Mô hình tiến trình nghiệp vụ Biểu đồ hoạt động Ký hiệu sử dụng Hình 1.4 Ký hiệu sử dụng trong biểu đồ hoạt động Vẽ biểu đồ hoạt động Đưa ảnh lên google drive Hình 1.5 Biểu đồ hoạt động upload hình ảnh Định dạng biểu mẫu Hình 1.6 Biểu đồ hoạt động định dạng biểu mẫu Nhập liệu Hình 1.7 Biểu đồ hoạt động nhập liệu Chương 2 PHÂN TÍCH HỆ THỐNG Phân tích chức năng nghiệp vụ Sơ đồ phân rã chức năng Mô tả các bước thực hiện Xác đinh các chức năng chi tiết : Dựa vào hành động được mô tả trong quy trình nghiệp vụ để xác định và đưa ra các chức năng chi tiết.  Loại bỏ các chức năng trùng lặp từ danh dách chức năng vừa xác định Gom nhóm các chức năng đơn giản Loại bỏ các chức năng không có ý nghĩa dối với hệ thống Chuẩn hóa tên chức năng Gom nhóm các chức năng đã chuẩn hóa theo cơ cấu tổ chức hoặc theo từng nghiệp vụ Vẽ sơ đồ phân rã chức năng. Vẽ mô hình Hình 2.1 Sơ đồ phân rã chức năng Sơ đồ luồng dữ liệu Ký hiệu sử dụng Hình 2.2 Ký hiệu sử dụng vẽ Sơ đồ luồng dữ liệu DFD mức khung cảnh Hình 2.3 DFD mức khung cảnh DFD mức đỉnh Hình 2.4 DFD mức đỉnh DFD mức dưới đỉnh Quản lý hình ảnh biểu mẫu Hình 2.5 DFD Quản lý hình ảnh biểu mẫu Đặc tả tiến trình nghiệp vụ Scan các mẫu biểu  Đầu vào: phiếu giao biểu mẫu, hồ sơ biểu mẫu bản cứng Đầu ra: Tệp hồ sơ biểu mẫu scan Nội dung xử lý: Lặp: Lấy một phiếu giao biểu mẫu + tập hồ sơ của biểu mẫu tương ứng sau đó kiểm tra số lượng hồ sơ, sau khi kiểm tra xong ký xác nhận Đến khi: xử lý hết các biểu mẫu thì mang tất  cả các tập hồ sơ đi scan và sắp xếp , phân loại theo từng loại biểu mẫu Tạo biểu mẫu mới Đầu vào: phiếu giao biểu mẫu Đầu ra : Biểu mẫu mới Nội dung xử lý: Lặp: Với mỗi một phiếu giao biểu mẫu, ta kiểm tra xem biểu mẫu đã được tạo chưa (hay nó đã tồn tại trong hệ thống chứa), Nếu chưa ta tiến hành tạo một biểu mẫu mới với các thông tin mã biểu mẫu, và tên biểu mẫu dựa trên phiếu giao biểu mẫu. Đến khi : Xử lý hết tất cả các phiếu giao biểu mẫu. Upload hình ảnh biểu mẫu Đầu vào :Tệp hình ảnh scan, Biểu mẫu Đầu ra: Hình ảnh – BM, Biểu mẫu Nội dung xử lý: Lặp:Đầu tiên phải chọn biểu mẫu muốn upload ảnh lên, sau khi chọn biểu mẫu, chọn các file hình ảnh scan cần upload rồi upload vào thư mục chứa biểu mẫu trong google drive  Đến khi: hết các file ảnh thuộc biểu mẫu đó cần upload, cập nhật trạng thái Biểu mẫu thành biểu mẫu đã được upload ảnh nếu biểu mẫu lần đầu tiên upload ảnh. Đến khi: hết các biểu mẫu cần upload ảnh. Định dạng biểu mẫu Đầu vào: Biểu mẫu, phiếu giao biểu mẫu, Hình ảnh-BM Đầu ra: CT-biểu mẫu, Biểu mẫu Nội dung xử lý: Lặp: Chọn biểu mẫu định dạng, dựa vào thông tin cần trích xuất từ phiếu giao biểu mẫu để xác định tạo độ từng vùng thông tin cần nhận dạng trong biểu mẫu. Đến khi: hết các trường cần trích xuất, sau đó cập nhật trạng thái biểu mẫu. Đến khi: xử lý hết các biểu mẫu cần định dạng Nhập liêu Đầu vào: Hình ảnh- BM, Biểu mẫu, CT-Biểu mẫu Đầu ra: Thông tin nhập liệu, Hình ảnh-BM Nội dung xử lý: Lặp: Chọn biểu mẫu cần nhập liệu, Sau đó nhập liệu cho từng hình ảnh chưa được nhận dạng , trích xuất các vùng thông tin cần nhận dạng của biểu mẫu đã xác định, đưa vào ô nhập liệu, chỉnh sửa nếu thông tin chưa chính xác, sau đó lưu trữ lại thông tin nhập liệu và cập nhâp trạng thái Hình ảnh –BM. Đến khi: Hết hình ảnh cần nhận dạng Đến khi: hết Biểu mẫu cần nhập liệu Phân tích dữ liệu nghiệp vụ Mô hình dữ liệu ban đầu Các bước để xác định mô hình dữ liệu ban đầu: Dựa vào quy trình xử lý và số lượng biểu mẫu để xác đinh được số lượng thực thể. Dựa vào nội dung thông tin của các biểu mẫu để ta xác đinh được các thuộc tính của từng thực thể. Ký hiệu sử dụng Hình 2.6 Ký hiệu sử dụng trong mô hình ER mở rộng Vẽ mô hình Hình 2.7 Mô hình ER mở rộng Chuẩn hóa dữ liệu Các bước chuẩn hóa CSDL Từ mô hình ER mở rộng chuyển thành mô hình ER kinh điển Xác định và xử lý các thuộc tính đa trị của thực thể Xác định và xử lý các thuộc tính không sở đẳng Xác định khóa cho các thực thể chính Từ mô hình ER kinh điển chuyển thành mô hình ER hạn chế Khử các liên kết 1-1 Xác định khóa ngoại cho thực thể nếu có Xác đinh khóa chính cho các thực thể còn lại Từ mô hình ER hạn chế chuyển thành mô hình ER quan hệ Mã hóa kiểu thực thể thành bảng quan hệ : mỗi kiểu thực thể thành một bảng quan hệ Mã hóa kiểu thuộc tính thành trường dữ liệu :  Kiểu thuộc tính khóa chuyển sang bảng tương ứng Kiểu thuộc tính mô tả: nếu là thuộc tính kết xuất thì bỏ đi, nếu thuộc tính xuất hiện ở một thực thể thì chuyển thành bảng tương ứng, nếu xuât hiện ở nhiều bảng chính. Ký hiệu sử dụng Hình 2.8 Ký hiệu sử dụng trong mô hình ER quan hệ Mô hình dữ liệu quan hệ sau khi chuẩn hóa Hình 2.9 Mô hình ER hạn chế Đặc tả bảng dữ liệu quan hệ Bảng 2.1 BIEUMAU STT Khóa chính Khóa ngoại Tên trường Kiêu dữ liệu Diễn Giải 1 X 	IDBieuMau C(10) Mã Biểu mẫu 2 	TenBieuMau C(100) Tên Biểu mẫu 3 	NgayTao D(8) Ngày Tạo Biểu mẫu 4 	NguoiTao C(20) Người tọa Biểu mẫu 5 TrangThaiBM N(1) Trạng thái biểu mẫu Bảng 2.2 CT-BIEUMAU STT Khóa chính Khóa ngoại Tên trường Kiêu dữ liệu Diễn Giải 1 X 	IDTruong N(6) Mã trường cần nhập liệu 2 X 	IDBieuMau C(10) Mã Biểu mẫu 3 	TenTruong C(100) Tên Trường cần nhập liệu 4 	LoaiTruong C(50) Loại dữ liệu vùng cần nhập liệu 5 	ToaDoX N(6) Tọa độ X bắt đầu vùng cần nhập liệu 6 ToaDoY N(6) Tọa độ Y bắt đầu vùng cần nhập liệu 7 ChieuRong N(6) Độ rộng vùng nhập liệu theo trục X 8 ChieuCao N(6) Độ rộng vùng nhập liệu theo trục Y 9 NgayDinhDang D(8) Ngày định dạng biểu mẫu Bảng 2.3 HINHANH STT Khóa chính Khóa ngoại Tên trường Kiêu dữ liệu Diễn Giải 1 X 	IDHinhAnh N(6) Mã Hình ảnh scan 2 X 	IDBieuMau C(10) Mã Biểu mẫu 3 	DuongDanAnh C(100) Đường dẫn ảnh trong thư mục google drive 4 	NgayUpload D(8) Ngày Upload ảnh 5 TrangThaiHA N(1) Trạng thái của hình ảnh Bảng 2.4 THONGTINNHAPLIEU STT Khóa chính Khóa ngoại Tên trường Kiêu dữ liệu Diễn Giải 1 X X 	IDHinhAnh N(6) Mã Hình ảnh  2 X X 	IDTruong N(6) Mã trường nhận dạng 3 	NoiDung C(250) Nội dung vùng nhập liệu 4 	NgayNhap D(8) Ngày nhập liệu 5 NguoiNhap C(20) Người nhập liệu Chương 3 THIẾT KẾ HỆ THỐNG Thiết kế kiểm soát Xác định nhóm người dùng Các nhóm người dùng của hệ thống Nhóm 1: Nhóm quản trị - kiểm soát toàn bộ hệ thống, tạo tài khoản, cấp quyền đăng nhập cho các nhân viên trong hệ thống. Nhóm 2 : Nhóm Quản lý Biểu mẫu: Scan biểu mẫu, tạo biểu mẫu mới, Upload ảnh và định dạng biểu mẫu. Nhóm 3: Nhóm Nhập liệu: Trích xuất thông tin cần nhận dạng, chỉnh sửa nếu cần thiết, lưu thông tin vào cơ sở dữ liệu. DFD Hệ thống tiến trình của nhóm Quản trị Hình 3.1 DFD Hệ thống tiến trình của nhóm Quản trị Phân định quyền hạn cho nhóm người dùng Bảng 3.1 Phân định quyền hạn về mặt dữ liệu Bảng Nhóm Quản trị Nhóm Quản lý Biểu mẫu Nhóm Quản lý nhập liệu Biểu mẫu R CERD Chi tiết Biểu mẫu R CERD Ảnh R CERD ER Dữ liệu nhập R CERD Người dùng CERD Bảng 3.2 Phân định quyền hạn về mặt chức năng Tiến trình Nhóm Quản trị Nhóm Quản lý Biểu mẫu Nhóm Quản lý nhập liệu Tạo biểu mẫu x Lọc, tìm kiếm biểu mẫu x Upload ảnh x Cập nhật thông tin ảnh x x Định dạng biểu mẫu x Nhập liệu x Kiểm tra tài khoản đăng nhập x Hiển thị màn hình quản trị x Thay đổi mật khẩu quản trị x Tạo người dùng mới x Thay đổi mật khẩu người dùng x X Xóa bản ghi người dùng x Thiết kế cơ sở dữ liệu Mô hình dữ liệu vật lý Xác đinh bảng dữ liệu phục vụ bảo mật Có 1 bảng dữ liệu phục vụ bảo mật đó là bảng User Mô hình dữ liệu hệ thống Hình 3.2 Mô hình dữ liệu vật lý Đặc tả bảng dữ liệu Bảng 3.3 User 1.Số hiệu: 1 2.Tên bảng:  User 3.Bí danh:  User 4. Mô tả: Lưu trữ thông tin người dùng 5. Mô tả chi tiết các cột Số Tên cột Mô tả Kiểu dữ liệu Khuôn dạng N 1 UserName Tên tài khoản người dùng C(20) Chữ cái + chữ số 2 Password Mật khẩu người dùng C(20) Chữ cái+chữ số+ký hiệu 3 FullName Tên đầy đủ người dùng C(100) Chữ cái 4 PhoneNumber Số điện thoại người dùng  C(11) Chữ số 5 Role Vai trò người dùng N(1) Chữ số 6. Khóa ngoài Số Tên Cột khóa ngoài Quan hệ với bảng Bảng 3.4 Form 1.Số hiệu: 2 2.Tên bảng:  Form 3.Bí danh:  Form 4. Mô tả: Lưu trữ thông tin biểu mẫu 5. Mô tả chi tiết các cột Số Tên cột Mô tả Kiểu dữ liệu Khuôn dạng N 1 IdForm Mã số biểu mẫu C(10) Chữ cái + chữ số 2 FormName Tên biểu mẫu C(100) Chữ cái+chữ số+ký hiệu 3 UserCreate Tên tài khoản người tạo biểu mẫu C(20) Chữ cái + chữ số 4 DateCreate Ngày tạo biểu mẫu D(8) Chữ số 5 Status Trạng thái của biểu mẫu N(1) Chữ số 6. Khóa ngoài: Số Tên Cột khóa ngoài Quan hệ với bảng 1 FK_UserCreateForm_User UserCreate User 2 FK_UserUpdateForm_User UserUpdate User Bảng 3.5 Image 1.Số hiệu: 3 2.Tên bảng:  Image 3.Bí danh:  Image 4. Mô tả: Lưu trữ thông tin ảnh biểu mẫu 5. Mô tả chi tiết các cột Số Tên cột Mô tả Kiểu dữ liệu Khuôn dạng N 1 IdImg Mã số ảnh N(6) chữ số 2 ImgPath Đường dẫn đến thư mục ảnh C(100) Chữ cái + chữ số 3 Status Trạng thái ảnh được nhập liệu hay chưa? N(1) Chữ số 4 UserName Tên tài khoản người upload ảnh C(20) Chữ cái + chữ số 5 UpTime Ngày tạo Upload ảnh D(8) Chữ số 6 IdForm Mã số biểu mẫu chứa ảnh C(10) Chữ cái+chữ số 6. Khóa ngoài: Số Tên Cột khóa ngoài Quan hệ với bảng 1 FK_Image_Form IdForm Form 2 FK_UserUpdateForm_User UserName User Bảng 3.6 DetailForm 1. Số hiệu: 4 2.Tên bảng:   DetailForm 3.Bí danh:DetailForm 4. Mô tả: Lưu trữ thông tin các trường cần nhận dạng trong biểu mẫu 5. Mô tả chi tiết các cột Số Tên cột Mô tả Kiểu dữ liệu Khuôn dạng N 1 IdField Mã số trường N(6) Chữ số 2 FieldName Tên trường C(100) Chữ cái+chữ số 3 CoordinateX Tọa độ x của vùng nhận dạng N(6) Chữ số 4 CoordinateY Tọa độ y của vùng nhận dạng N(6) Chữ số 5 Width  Chiều dài của vùng nhận dạng N(6) Chữ số 6 Height Chiều cao của vùng nhận dạng N(6) Chữ số 7 FieldType Loại trường C(10) Chữ cái 8 IdForm Mã số biểu mẫu chứa ảnh C(10) Chữ cái+chữ số 6. Khóa ngoài: Số Tên Cột khóa ngoài Quan hệ với bảng 1 FK_DetailForm_Form IdForm Form 2 FK_UserUpdateForm_User UserUpdate User Bảng 3.7 InputData 1.Số hiệu: 5 2.Tên bảng:    InputData 3.Bí danh: InputData 4. Mô tả: Lưu trữ thông tin các thông tin đã được trích xuất từ ảnh 5. Mô tả chi tiết các cột Số Tên cột Mô tả Kiểu dữ liệu Khuôn dạng N 1 IdField Mã số trường N(6) Chữ số 2 IdImg Mã số ảnh N(6) Chữ số 3 Value Thông tin cần nhập liệu C(200) Chữ số+Chữ cái 4 UserEntry Tài khoản người nhập liệu C(20) Chữ số+Chữ cái 5 DateEntry  Ngày nhập liệu D(8) Chữ số 6. Khóa ngoài: Số Tên Cột khóa ngoài Quan hệ với bảng 1 FK_DataInput_DetailForm IdField DetailForm 2 FK_  DataInput _User UserEntry User Thiết kế giao diện Thiết kế modul chương trình Kiến trúc chương trình mức cao Hình 3.3 Kiến trúc chương trình mức cao Modul Quản lý hình ảnh biểu mẫu Hình 3.4 Modul quản lý hình ảnh biểu mẫu Modul Nhập liệu Hình 3.5 Modul nhập liệu Thiết kế giao diện tương tác người máy Form Đăng Nhập: Hình 3.6 Form Đăng nhập Tên giao diện : Màn hình đăng nhập Người sử dụng : Nhân viên  Điều kiện vào màn hình:  Màn hình hiển thị đầu tiên khi khởi chạy hệ thống Khi ấn Logout từ các màn hình Quản trị, Quản lý Hình ảnh Biểu mẫu, và màn hình Nhập liệu Nhiệm vụ : Kiểm soát truy cập hệ thống Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: User, thuộc tính sử dụng: UserName, Password Mô tả chi tiết: Người dùng nhập tên username và pass word vào textbox tương ứng. Nếu thông tin đăng nhập không chính xác thì sẽ có thông báo lỗi hiển thị lên. Nếu đăng nhập thành công, hệ thống sẽ kiểm tra bộ phận của nhân viên để chuyển đến form tương ứng. Form Quản lý hình ảnh biểu mẫu Màn hình Quản lý Biểu Mẫu Hình 3.7 Tab Quản lý Biểu mẫu Tên giao diện : Tab Quản lý biểu mẫu Người sử dụng : Nhân viên quản lý hình ảnh biểu mẫu Điều kiện vào màn hình:  Khi đăng nhập thành công với người dùng là nhân viên quản lý hình ảnh biểu mẫu. Tab này sẽ hiển thị đầu tiên khi Form Quản lý Hình ảnh Biểu mẫu hiển thị. Từ Tab Upload Google Drive ấn Chọn BM Từ Tab Định dạng Biểu Mẫu ấn Chọn BM Nhiệm vụ : Thao tác tìm kiếm, thêm sửa xóa biểu mẫu Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: Form Mô tả chi tiết:  Cho phép người dùng lọc và tìm kiếm biểu mẫu theo các thông tin: Mã biểu mẫu, tên biểu mẫu, trạng thái, ngày tạo, người tạo. Cho phép người dùng chuyển đến màn hình popup Tạo biểu mẫu, cập nhật tên biêu mẫu, và cho phép xóa các biểu mẫu chữa được upload (là những biểu mẫu không có hình ảnh scan nào và chưa được định dạng).  Người dùng chọn một biểu mẫu trước khi ấn Upload Ảnh, nếu người dùng chưa chọn một một biểu mà ấn Upload Ảnh sẽ hiển thị thông báo yêu cầu người dùng chọn một biểu mẫu. Người dùng chọn một biểu mẫu trước khi ấn Định dạng Form, nếu người dùng không chọn Biểu mẫu sẽ hiển thị thông báo yêu cầu người dùng chọn một biểu, nếu người dùng chọn một biểu mẫu chưa upload ảnh thì hiển thông báo và yêu cầu người dùng upload ảnh trước khi định dạng. Màn hình Tạo Biểu mẫu Hình 3.8 Màn hình PopupTạo biểu mẫu Tên giao diện : Màn hình Popup Tạo Biểu Mẫu Người sử dụng : Nhân viên quản lý hình ảnh biểu mẫu Điều kiện vào màn hình:  Từ Tab Quản lý Biểu mẫu click Tạo Form Nhiệm vụ : Tạo một biểu mẫu mới Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: Form Mô tả chi tiết: Người dùng điền đầy đủ các thông tin Mã Biểu mẫu và Tên Biểu mẫu và ấn Lưu để tạo một Biểu mẫu mới , nếu không muốn tạo tiếp thì ấn Thoát để thoát khỏi màn hình hình popup Tạo biểu mẫu. Màn hình Upload Ảnh lên Google Drive Hình 3.9 Màn hình Upload hình ảnh lên google drive Tên giao diện : Tab Upload Google Drive Người sử dụng : Nhân viên quản lý hình ảnh biểu mẫu Điều kiện vào màn hình:  Từ Tab Quản lý Biểu mẫu, khi chọn một biểu mẫu và ấn Upload Ảnh, hoặc khi chọn Biểu mẫu chưa được upload ấn Định dạng Form Nhiệm vụ : Xem danh sách các biểu mẫu đã upload, xem danh sách hình ảnh của từng biểu mẫu, Cho phép Upload ảnh lên google theo từng biểu mẫu Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: Form, Image Mô tả chi tiết: Upload ảnh cho một biểu mẫu Chọn File hoặc chọn cả thư mục chứa danh sách hình ảnh scan thuộc biểu mẫu cần upload . Sau khi chọn xong tất cả các ảnh sẽ hiển thị trong listbox sanh sách file ảnh, hệ thống cũng hỗ trợ cho phép người dùng có thể xóa những file ảnh này nếu không muốn upload lên nữa. Sau khi chọn xong các file ảnh cần upload người dùng ấn Upload, nếu đây là một biểu mẫu mới chưa có ảnh nào được upload lên thì hệ thống sẽ tự động tạo một folder trong thư mụ Google Drive với tên folder là Mã Biểu mẫu, và sau đó tất cả các ảnh đã chọn sẽ được chuẩn hóa từng cái về cùng một khuôn dạng và chuyển đến folder này. Sau khi upload ảnh xong, người dùng có thể quay lại Tab Quản lý Biểu mẫu để chọn biểu mẫu muốn upload ảnh tiếp hoặc Định dạng cho biểu mẫu này nếu là Biểu mẫu mới chưa được định dạng. Màn hình Định dạng Biểu mẫu Hình 3.10 Màn hình định dạng biểu mẫu Tên giao diện : Tab Địn dạng Biểu Mẫu Người sử dụng : Nhân viên quản lý hình ảnh biểu mẫu Điều kiện vào màn hình:  Từ tab Quản lý Biểu mẫu, chọn Biểu mẫu chưa định dạng ấn Định dạng BM Từ tab Upload Ảnh ấn định dạng BM Nhiệm vụ : Xác đinh các vùng cần nhận dạng của biểu mẫu Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: Form, DetailForm Mô tả chi tiết: quá trình định dạng một biểu mẫu Xác định từng vùng cần nhận dạng trên hình ảnh biểu mẫu bao gồm tọa độ bắt đầu (X,Y), chiều rộng, chiểu cao vùng nhận dạng, Tên trường nhận dạng và lưu lại. Sau khi xác định tất cả các vùng cần nhận dạng thì hoàn tất định dạng cập nhật trạng thái của biểu mẫu thành đã định dạng Form Nhập liệu Hình 3.11 Chọn biểu mẫu cần nhập liệu Hình 3.12 Trích xuất văn bản từ vùng định dạng Tên giao diện : Form Nhập liệu Người sử dụng : Nhân viên Nhập liệu Nhiệm vụ : Cho phép trích xuất văn bản, chỉnh sửa, và lưu kết quả vào cơ sở dữ liệu Mẫu thiết kế: hình trên Bảng dữ liệu liên quan: DetailForm, Image, InputData Tiền điểu kiện: Đăng nhập thành công với Role nhân viên Nhập liệu Hậu điều kiện: Trở về màn hình đăng nhập Biểu đồ trình tự hoạt động: Hình 3.13 Biểu đồ trình tự hoạt động Form nhập liệu Chương 4  XÂY DỰNG PHÂN MỀM “SỐ HÓA BIỂU MẪU ỨNG DỤNG HỖ TRỢ NHẬP LIỆU” Công nghệ sử dụng Lý thuyết tiền xử ảnh Lọc nhiễu Lọc nhiễu là công đoạn tiền xử lý ảnh số, nó giúp chúng ta nâng cao chất lượng đầu vào của dữ liệu cho các công đoạn sau, xử lý tốt cộng đoạn này sẽ giúp cho các công doạn sau tiến hành được dễ dàng hơn. Có nhiều loại nhiễu khác nhau (nhiễu cộng, nhiễu nhân, nhiễu xung, nhiễu Gaussian…) và cũng có nhiều phương pháp lọc khác nhau để khử nhiễu. Tuy nhiên, tùy từng loại nhiễu mà ta lên sử dụng phương pháp lọc nhiễu nào phù hợp vì không phải một phương pháp có thẻ lọc được tất cả các loại nhiễu. Một số phương pháp lọc nhiễu: Phương pháp lọc trung bình: Ý tưởng thuật toán: Lọc trung bình là kĩ thuật lọc tuyến tính, hoạt động như một bộ lọc thông thấp. Ý tưởng chính của thuật toán lọc Trung vị như sau: ta sử dụng một cửa sổ lọc ma trận 3x3 (hoặc 5x5, 7x7 tùy trường hợp) quét qua lần lượt từng điểm ảnh của ảnh đầu vào input. Tại vị trí mỗi điểm ảnh lấy giá trị của các điểm ảnh tương ứng trong vùng 3x3 của ảnh gốc "lấp" vào ma trận lọc. Giá trị điểm ảnh của ảnh đầu ra là giá trị trung bình của tất cả các điểm ảnh trong cửa sổ lọc. Việc tính toán này khá đơn giản với hai bước gồm tính tổng các thành phần trong cửa sổ lọc và sau đó chia tổng này cho số các phần tử của cửa sổ lọc. Hình ảnh 4.1 Mô tả thuật toán lọc Mean filter Thuật toán:  Quét cửa sổ lọc lần lượt lên các thành phần của ảnh đầu vào; điền các giá trị được quét vào cửa sổ lọc. Xử lý bằng cách thao tác trên các thành phần của cửa sổ lọc. Tính giá trị trung bình các thành phần trong cửa sổ lọc. Gán giá trị trung bình này cho ảnh đầu ra. Tác dụng : Trong lọc trung bình, thường người ta ưu tiên cho các hướng để bảo vệ biên của ảnh khỏi bị mờ khi làm trơn ảnh. Các kiểu ma trận lọc (Kernel) được sử dụng tùy theo các trường hợp khác nhau.  Ví dụ: Ma trận kenel M(3x3) ma trận điểm ảnh đầu vào (Isrc) ma trận điểm ảnh đầu ra (Idst) 	Idst(3,3) = (7+2+1+6+2+8+6+7+7) / 9 = 46 / 9 = 5 Chú ý: Các hệ số trong ma trận lọc (Kernel) này có tổng bằng 1, nên độ sáng ảnh giữ nguyên, và các hệ số đều dương nên nó có khuynh hướng làm nhoè ảnh. Phương pháp lọc trung bị Lọc Trung vị là một kĩ thuật lọc phi tuyến (non-linear), nó khá hiệu quả đối với hai loại nhiễu: nhiễu đốm (speckle noise) và nhiễu muối tiêu (salt-pepper noise). Kĩ thuật này là một bước rất phổ biến trong xử lý ảnh. Ý tưởng chính của thuật toán lọc Trung vị như sau: ta sử dụng một cửa sổ lọc (ma trận 3x3) quét qua lần lượt từng điểm ảnh của ảnh đầu vào input. Tại vị trí mỗi điểm ảnh lấy giá trị của các điểm ảnh tương ứng trong vùng 3x3 (hoặc 5x5 hoặc 7x7) của ảnh gốc "lấp" vào ma trận lọc. Sau đó sắp xếp các điểm ảnh trong cửa sổ này theo thứ tự (tăng dần hoặc giảm dần tùy ý). Cuối cùng, gán điểm ảnh nằm chính giữa (Trung vị) của dãy giá trị điểm ảnh đã được sắp xếp ở trên cho giá trị điểm ảnh đang xét của ảnh đầu ra output. Hình ảnh 4.2 Mô tả thuật toán lọc Median filter Thuật toán Quét cửa sổ lọc lên các thành phần của ảnh gốc; điền các giá trị được quét vào cửa sổ lọc. Lấy các thành phần trong của sổ lọc để xử lý. Sắp xếp theo thứ tự các thành phần trong cửa sổ lọc. Lưu lại thành phần trung vị, gán cho ảnh output. Tác dụng: Loại bỏ các điểm ảnh mà vẫn đảm bảo độ phân giải. Hiệu quả trong việc giảm đi điểm nhiễu trong ma trận lọc (Kernel) lớn hay bằng một nửa số điểm trong ma trận lọc (Kernel). Ví dụ: Idst(1,1)= (2, 2, 2, 2, 2, 2, 4, 7, 5) = 2. Idst(3,3) = (1, 2, 2, 6, 6, 7, 7, 7, 8) = 6. Idst(1,1), Idst(1,5), Idst(5,1), Idst(5,5) : hoàn toàn có thể làm như cách trên hoặc không cần kiểm tra điểm biên. Nhị phân hóa ảnh Khái niệm: Là quá trình biến đổi một ảnh xám thành ảnh nhị phân. Để biến đổi ảnh xám thành ảnh nhị  phân. Ta so sánh giá trị cường độ sáng của điểm ảnh với một ngưỡng nhị phân T. Ngưỡng T có thể nhận 1 giá trị toàn cục hoặc là nhiều giá trị trong phân ngưỡng động. Các phương pháp nhị phân hóa ảnh: Phân ngưỡng toàn cục :  Khái niệm: Trong phương pháp này, ta so sánh giá trị cường độ sáng của điểm ảnh với một ngưỡng nhị phân T. Nếu giá trị điểm ảnh I(x,y) > T thì giá trị điểm ảnh sau khi nhị phân INP(x, y) = 0. Nếu giá trị điểm ảnh I(x,y) > T thì sau khi nhị phân  INP(x, y) = 255. Thuật toán otsu: Thuật toán này cho phép tính ngưỡng T một cách tự động (adaptive) dựa vào giá trị điểm ảnh của ảnh đầu vào nhằm thay thế cho việc sử dụng ngưỡng cố định (fixed hay const). Phương pháp này cho kết quả là mỗi ảnh khác nhau có một ngưỡng tương ứng khác nhau bằng các bước xử lý như sau: Chọn một giá trị khởi tạo cho T (nên chọn giá trị mang tính công thức, ví dụ T = (min + max) / 2, T = giá trị trung bình, ... tránh dùng các giá trị mang tính định lượng thiết lập cứng). Phân hoạch ảnh sử dụng T. kết quả của bước này sẽ tạo ra 2 nhóm điểm ảnh: G1 chứa tất cả các điểm ảnh với giá trị (intensity) > T và G2 chứa các điểm ảnh với giá trị (intensity) <= T. Tính trung bình (Average hay Mean) m1 và m2 của các điểm ảnh thuộc G1 và G2. Tính lại T dựa vào m1 và m2: T = (m1 + m2) / 2 Lặp lại bước 2 đến 4 cho tới khi nào giá trị chênh lệch giữa T củ và T mới là không đáng kể (nhỏ hơn một giá trị cho trước deltaT). deltaT thường được sử dụng là sai số từ các phép tính toán trong quá trình xử lý. Trong trường hợp này T được tính ở 4 sẽ có phép sai số là 1 / 2 * (giá trị đơn vị của điểm ảnh).    Phân ngưỡng thích nghi Ý tưởng: Chia tấm ảnh thành nhiều khu vực, cửa sổ khác nhau (Region). Dùng một thuật toán để tìm một giá trị T phù hợp với từng khu vực, cửa sổ (Region). Áp dụng phương pháp nhị phân hóa cho từngkhu vực, cửa sổ (Region) với T phù hợp. Điều quan trọng trong kĩ thuật này là phải tìm một giá trị T phù hợp với từng khu vực, cửa sổ (Region) hoặc cả tấm ảnh. Có rất nhiều phương pháp để tìm T, ở nội dung tiếp theo tôi sẽ giới thiệu một số thuật toán giúp tìm kiếm giá trị T này. Mã nguồn mở Tesseract OCR Engine Lý do lựa chọn Tesseract OCR Engine Nhận dạng ký tự quang học (OCR) là một chuyển đổi hình ảnh văn bản scan hoặc in, viết tay thành văn bản có thể chỉnh sửa được. Công nghệ này cho phép máy tính nhận ra văn bản tự động từ hình ảnh văn bản đầu vào, tiết kiệm thời gian, công sức nhập liệu cho con người. Năm 1955, hệ thống thương mại đầu tiên được lắp đặt trong đó sử dụng OCR và sau đó phương pháp OCR đã trở nên rất hữu ích trong việc tính toán các tài liệu vật lý trong văn phòng. Ngày nay có nhiều loại phần mềm công cụ nhận dạng chữ viết tay như VnDOCR 4 cho tiếng viêt với tỷ lệ nhận dạng rất tốt,hay công cụ ABBYY- một công cụ nhận dạng ký tự quang học với độ chính xác trong nhận dạng tài liệu tiếng việt lên đến 99%. Nhưng đây đều là những sản phẩm thương mại. Trong đồ án này chúng tôi nghiên cứu và sử dụng công cụ tessract hỗ trợ trong việc nhận dạng ký tự từ hình ảnh scan với biểu mẫu cụ thể dưới đây.  Đây là công cụ được sử dụng phổ biến bởi vì nó hỗ trợ trên 40 ngôn ngữ và đang tăng dần, trong đó có tiếng Việt, có độ chính xác khá cao,bức ảnh đầu vào có độ phân giả tốt thì tỷ lệ nhận dạng có thể lên đến 95%. Và điều đặc biệt Tesseract là một mã nguồn mở hoàn toàn miễn phí. Mục tiêu của bài toán dựa trên nền tảng công cụ tesseract, nâng cao độ chính xác trong nhận dạng ký tự từ hình ảnh scan ứng dụng nhập liệu nhanh chóng, hiệu quả các biểu mẫu như hồ sơ sinh viên, ý kiến sinh viên. Tổng quan về Tesseract OCR Engine Tesseract là một phần mềm mã nguồn mở và ban đầu nó được nghiên cứu và phát triển tại hãng Hewlett Packet (HP) trong khoảng từ năm 1984 đến 1994. Vào năm 1995, Tesseract nằm trong nhóm ba bộ nhận dạng OCR đứng đầu về độ chính xác khi tham gia trong hội nghị thường niên của tổ chức UNLV. Lúc mới khởi động thì Tesseract là một dự án nghiên cứu tiến sĩ tại phòng thí nghiệm HP ở Bristol và đã được tích hợp vào trong các dòng máy quét dạng phẳng của hãng dưới dạng các add-on phần cứng hoặc phần mềm. Nhưng thực tế dự án này đã thất bại ngay từ trong trứng nước vì nó chỉ làm việc hiệu quả trên các tài liệu in có chất lượng tốt. Sau đó, dự án này cùng với sự cộng tác của bộ phận máy quét HP ở bang Colorado đã đạt được một bước tiến quan trọng về độ chuẩn xác khi nhận dạng và vượt lên nhiều bộ nhận dạng OCR thời đó nhưng dự án đã không thể trở thành sản phẩm hoàn chỉnh vì độ cồng kềnh và phức tạp. Sau đó, dự án được đưa về phòng thí nghiệm của HP để nghiên cứu về cách thức nén và tối ưu mã nguồn. Dự án tập trung cải thiện hiệu năng làm việc của Tesseract dựa trên độ chính xác đã có. Dự án này được hoàn tất vào cuối năm 1994 và sau đó vào năm 1995 bộ Tesseract được gửi đi tham dự hội nghị UNLV thường niên về độ chính xác của OCR, vượt trội hơn hẳn so với các phần mềm OCR lúc bấy giờ. Tuy nhiên, Tesseract đã không thể trở thành một sản phẩm thương mại hoàn chỉnh được và vào năm 2005, HP đã chuyển Tesseract sang mã nguồn mở và được hãng Google tài trợ. Tesseract cho đến nay vẫn được nhiều nhà phát triển cộng tác và tiếp tục hoàn thiện. Phiên bản mới nhất của bộ nhận dạng Tesseract là phiên bản 3.0.1. Kiến trúc hoạt động của Tesseract Hình 4.3 Kiến trúc nhận dạng ký tự Tesseract Bước 1: Phân ngưỡng thích ứng trong Tesseract Đầu tiên, bộ nhận diện Tesseract sẽ nhận đầu vào là ảnh màu hoặc ảnh mức xám. Ảnh này sẽ được chuyển đến bộ phận phân tích ngưỡng thích ứng (adaptive thresholding) để cho ra ảnh nhị phân. Vì trước kia HP cũng đã phát triển bộ phận phân tích bố cục trang nên Tesseract không cần phải có thành phần đó và được thừa hưởng từ HP. Vì thế mà Tesseract nhận đầu vào là một ảnh nhị phân với các vùng đa giác tùy chọn đã được xác định. Ban đầu, Tesseract được thiết kế làm việc trên ảnh nhị phân sau đó chương trình được cải tiến để có thể nhận dạng cả ảnh màu và ảnh mức xám. Chính vì thế mà cần bộ phận phân tích ngưỡng thích ứng để chuyển đổi ảnh màu / ảnh mức xám sang ảnh nhị phân.  Sau đó quá trình nhận dạng sẽ được thực hiện tuần tự theo từng bước. Bước 2: Phân tích các thành phần liên thông: Kết quả của bước này xác định được các blobs, Blob chính là một từ.  Bước 3: Tìm hàng và tìm từ Một phần quan trọng của bất kì hệ thống nhận dạng là phát hiện và chỉnh độ nghiêng của hinh ảnh. Phân tích layout và thực hiện tiền xử lý phục vụ việc nhận dạng ký tự, nó phụ thuộc vào ảnh thẳng đứng, hoặc ít nhất cũng phải biết độ nghiêng của ảnh Công việc tìm độ nghiêng trước đây: Sử dụng một số phương pháp biến đổi như biến đổi Hough để phát hiện và điều chỉnh độ nghiêng của hình ảnh thành hình ảnh thẳng sau đó mới đi vào phân tích layout trang và tìm từ. Nhưng trong tesseract OCR: người ta sử dụng thuật toán tìm dòng mà không cần loại bỏ độ nghiêng của hình ảnh văn bản. Xác định dòng: Sau bước phân tích thành phần liên thông ở trên đã xác định được các vùng bao quanh các từ gọi là Blobs.  Sau khi xác định được các Blobs, tiến hành lọc Blobs là loại bỏ những kí tự Drop – Cap và những kí tự gạch chân, nhiễu… trong văn bản còn những kí tự có kích thước chiều cao từ 20-95% được giữ lại, blob có số lượng pixel nhỏ cũng bị bỏ đi. Sau đó sắp xếp các blobs, sử dụng tọa đô x của biên bên trái làm chuẩn, cho phép theo dõi độ nghiêng của trang. Cụ thể như sau: Bước 1: Cài đạt trung bình y chạy về 0 Bước 2: Duyệt mỗi blob trong thứ tự sắp xếp: Tìm dòng tồn tại và mà blob có thể ghi đè lên Nếu như blob không ghi đè lên dòng đó   Thêm một dòng mới và push các blob vào trong đó Ghi lại vị trí đầu và cuối của blob -> chính là ví trị đầu cuối của row Ngược lại:  Thêm tiếp các blob vào dòng Mở rộng giới hạn top và bottom của dòng theo top và bottom của các blob, cắt chiều cao của hang theo một giới hạn đã định. Update lại sự thay đổi của biến trung bình y bằng vị trí dưới của blob. Thiết lập dòng cơ sở Khi dòng văn bản được tìm thấy, các dòng cơ sở được thiết lập chính xác hơn bằng cách sử dụng một đường có tên là spline toàn phương (là dòng mà được kết hợp từ nhiều đoạn). Nó giúp Tesseract xử lý các trang có đường cơ sở là đường cong. Các dòng cơ sở được thiết lập bằng cách phân vùng các blobs thành các nhóm có thể thay thế thích hợp liên tục trong đường cơ sở thẳng ban đầu. Một spline toàn phương được thiết lập cho phân vùng dày đặc nhất, (giả định là đường cơ sở) của một hình có phương ít nhất. Spline có lợi thế là tính toán ổn định, nhược điểm là sự gián đoạn có thể xảy ra khi nhiều phân đoạn spline được yêu cầu. Hình ảnh 4.4 ví dụ về đường cơ sở Dựa vào các đường cơ sở cùng phân tích vùng liên thông để tách ra các từng kí tự Bước 4: Nhận dạng từ. Công đoạn nhận dạng từ sẽ được xử lý qua 2 giai đoạn. Giai đoạn đầu sẽ là nhận dạng các từ theo lượt. Các từ thỏa yêu cầu trong giai đoạn này sẽ được chuyển sang bộ phân loại thích ứng (adaptive classifier) để làm dữ liệu huấn luyện. Chính nhờ đó mà bộ phân loại thích ứng sẽ có khả năng nhận diện được chính xác hơn ở phần sau của trang. Sau khi bộ phân loại thích ứng đã học được các thông tin có ích từ giai đoạn đầu khi nhận dạng phần trên của trang thì giai đoạn thứ 2 của việc nhận dạng sẽ được thực hiện. Giai đoạn này sẽ quét hết toàn bộ trang, các từ không được nhận diện chính xác ở giai đoạn đầu sẽ được nhận diện lại lần nữa. Cuối cùng bộ nhận diện sẽ tổng hợp lại các thông tin ở trên và cho ra kết quả nhận diện hoàn chỉnh. Các cách cải tiến Tesseract 	Tesseract sử dụng nhiều thuật toán xử lý ảnh ở bên trong sử dụng thư viện Leptonica trước khi thực hiện OCR. Nó thực hiện khá tốt nhưng trong một vài trường hợp vẫn chưa đủ, kết quả sẽ có thể không được chính xác. 	Ta có thể thấy Tesseract đã xử lý hình ảnh bằng cách sử dụng giá trị configuration Tessedit_write_images bằng true khi sử dụng Tesseract. Nếu kết quả tesstinput.tif file có vấn đề, hãy thử những phép xử lí ảnh trước khi đưa ảnh vào tesseract. Chỉnh kích thước: Tesseract nhận dạng tốt nếu ảnh có độ phân giải ít nhất 300dpi. Vì vậy, nhận dạng có thể thuận lợi hơn nếu chỉnh kích thước ảnh Nhị phân hóa ảnh: Nhị phân hóa ảnh được thực hiện bên trong Tesseract, nhưng mà kết quả có thể được cải thiện hơn trong trường hợp nền ảnh là bóng tối ko đều. Lọc nhiễu: Nhiễu là những điểm sáng hoặc màu ngẫu nhiên của ảnh, nó có thể làm cho chữ trong ảnh khó đọc hơn. Một số loại nhiễu ko thể được loại bỏ bở tesseract trong quá trình nhị phân hóa, chúng làm giảm độ chính xác của nhận dạng. Chỉnh cấu hình của tesseract: Trong trường hợp chỉ nhận dạng tập kí tự sẵn có, như là chỉ chữ số, ta có thể sử dụng giá trị configuration tessedit_char_whitelist. Google Drive API Google Drive API trên C# cho phép người dùng lập trình thực hiện các thao cơ bản với Google Drive như: xem danh sách file, upload, download, liệt kê thư mục, thay đổi file, copy file, delete file … Đăng kí sử dụng Google Drive trên C# Đầu tiên phải đi đến Google Console Developer https://console.developers.google.com  để đăng kí ứng dụng. Giống như hầu hết Google APIs khác, để kết nối đến Google Drive thì ta cần phải xác thực trước khi kết nối. Ta cần tạo 1 project ở Google Console Developer rồi enable 2 API Google Drive API và Google Drive SDK. Hình 4.5  Màn hình đăng kí sử dụng google Drive API Cài đặt thư viện Google Drive API  	Project phải sử dụng .net 4.0 trở lên 	Cài đặt thư viện Nuget package Google Apis Drive v2 Hình ảnh 4.6 Cài đặt thư viện Google Drive API Các loại xác thực Xác thực là chìa khóa truy cập mọi thứ trong Google Drive API nếu ta muốn được truy cập vào dữ liệu, thì cần phải được xác thực. có 2 loại xác thực Oauth2 mà sẽ cho phép ta truy cập đến dữ liệu của người khác, và service account có thể được cài đặt để truy cập dữ liệu riêng của mình. OAuth2 Authentication Hình ảnh 4.7 Xác thực tài khoản Nếu muốn truy cập Google Drive sở hữu bởi một người khác thì ta cần phải được xác thực. lệnh cho việc xác thực đơn giản hiển thị một trang web cho user hỏi họ cho phép bạn truy cạp dữ liệu. Nếu user cho phép truy cập, một file lưu trữ ở trong thư mục %AppData% chứa tất cả thông tin bao gồm ClientId và Client Secret mà ta cần để truy cập dữ liệu trong tương lai. Nhưng làm thé nào để Google biết được loại permission nào mà mình muốn cho phép user truy cập. đó là Scope, với scope thì ta sẽ định nghĩa được quyền mình cung cấp cho ứng dụng. 	Service Account Nếu tachi truy cập vào dữ liệu Google Drive riêng của mình, thì ko có lí do gì để phải xin phép 1 người dùng khác cho phép. Trong trường hợp này, ta nên dùng services account. Một service account giống như một người dùng khác đã nhượng quyền truy cạp dữ liệu cho bạn với một ngoại lệ, đó là tự động. sẽ không càn phải hành động gì để truy cập data. Ta có thể nhượng quyền service account trực tiếp truy cập 1 folder đã có trên google drive và có thể upload lên folder đó, nhưng một lần nữa, nó có thể giúp ra có quyền truy cập cả files. Chỉ cần thên service account email đến folder như là bạn muốn những người dùng khác muốn cho phép bạn quyền truy cập. 	Một service account cũng có drive account riêng của nó. Vì vậy, ta nên sử dụng 1 service account dedeer upload dữ liệu lên đó. Vấn đề với việc upload dữ liệu đến 1 service account trực tiếp là bạn có thể nhìn thấy ở trên website. Trong trường hợp này, ta có thể tạp 1 thư mục ở trên service account và sau đó gán quyền truy cập đầy đủ tới thư mục. và sau đó, ta sẽ có thể nhìn thấy tất cả file ở trên google drive. Điều này có thể rất là tiện lợi khi service account upload files, thì files cũng sẽ được cấp quyền truy cập. Các thao tác cơ bản với tệp trên Google Drive 	Liệt kê tất cả các file và thư mục Chúng ta muốn lấy ra tất cả danh sách directories trong Google Drive hiện tại, trong Google Drive, mọi thứ đều là file, ngay cả thư mục. điểm khác nhau là mime type của thư mục là ‘application/vnd.google-apps.folder’ 			Parent Child: Files and thư mục có thẻ có parents hoặc children. Mức cao nhất là root. Vì thế, nếu tập hợp các parent có isRoot set là true, la ta đang ở thư mục gốc. Nếu ta muốn sắp xếp mọi thứ theo cây cha con thì tất cả ta cần phải xem tập hơp cha trên file 	Upload file: 			File và thư mục trong Google Drive đều là file chỉ khác nhai về mime type. Phương thức sau sẽ tạo một thư mục mới. Gửi parent = root nếu bạn muốn nó ở thư mục gốc. nếu không, ta chỉ cần resource id của một thư mục hợp lệ. Ta có thể lấy id bằng cách tìm kiếm thư mục. 			Tương tự như thư mục, upload một file cũng tương tự. Ta chỉ cần gửi đi tên file thay vì tên thư mục. Nhưng lưu ý rằng khi upload file đén Google Drive, nếu thư mục hoặc file trùng tên nhau vì vẫn được upload như bình thường, file không được update mà sẽ lưu trữ 2 file cùng tê. Google Drive chỉ kiểm tra dựa trên file id của file. Nếu muốn cập nhật thì phải sử dụng dựa theo id này. 	Update file: Google Drive có thể lưu trữ được các file cùng tên thì nó chỉ sử dụng fileID để phân biệt các file. Vì vậy, nếu muốn cập nhật một file, thay đổi file thì bạn phải biết được resource id của của file mà mình muốn update. 	Download file: Để download một hay nhiều file, ta cần biết resource id của chúng, các duy nhất để lấy ra file id là từ lệnh Files.List(). Sau đó sử dụng service.HttpClient.GetByteArrayAsync ta có download được file mong muốn. 	Delete file: 	Delete file cũng tương tự như Update. Ta phải xác định được resource id của file để thực hiện quá nó. Hệ quản trị cơ sở dữ liệu MS SQL 2012 R2 Khái niệm: Microsoft SQL server là một hệ quản trị cơ sở dữ liệu quan hệ (Relational database management system-RDBMS) do Microsoft phát triển và cũng là một hệ quản trị cơ sở dữ liệu quan hệ mạng máy tính hoạt động thoe mô hình khách chủ cho phép đồng thời cùng một lúc có nhiều người dùng cùng truy xuất dữ liệu, quản lý việc truy nhập hợp lệ với các quyền hạn của từng người dùng trên mạng. Ngôn ngữ truy vấn quan trọng sử dụng trong MS SQL là Transact-SQL. Nó là ngôn ngữ SQL mở rộng dựa trên SQL chuẩn của ISO và ANSI dược sử dụng trong SQL server. Là ngông ngữ giao tiếp giữa ứng dụng với SQL server. T-SQL bao gồm các nhóm lệnh sau: Data Definition Language (DDL) ngôn ngữ định dịnh nghĩa dữ liệu, CREATE, DROP, ALTER. Data Manipulation Language (DML) ngôn ngữ xử lý dữ liệu, SELECT, INSERT, UPDATE, DELETE. DataControl Language Statements (DCL) ngôn ngữ điều khiển dữ liệu DENY, GRANT, REVOKE. Hệ quản trị cơ sở dữ liệu MS SQL server 2012 Vào tháng 3/2012 tập đoàn Microsoft đã tuyên bố phiên bản mới nhất Microsoft SQL server 2012. MS SQL 2012 đảm bảo cho các tác vụ quan trọng luôn được bảo mật, thời gian hệ thống hoạt động nhiều hơn, các tính năng bảo mật dược tăng cường kèm theo khả năng đột phá trong cung cấp thông tin chuyên sâu nhờ khai thác dữ liệu tự phục vụ và ảo hóa dữ liệu tương tác. Nền tảng dữ liệu Microsoft SQL Server 2012 được ghi nhận là đem đến hiệu năng hoạt động nhanh đáng ngạc nhiên. SQL Server 2012 giúp giải quyết các thách thức liên quan đến sự gia tăng lượng dữ liệu bằng cách chuyển các dữ liệu này thành các tầm nhìn mang tính quyết định nhanh chóng. Các đặc điểm nổi bật của SQL Server 2012 có thể tóm tắt lại: Cho phép quản trị một CSDL lớn (lên đến vài tega byte), có tốc độ xử lý dữ liệu nhanh chóng đáp ứng yêu cầu về mặt thời gian nhờ tính năng SQL Server AlwaysOn Cho phép người dùng khai thác dữ liệu trong một thời điểm đối với một CSDL và toàn bộ hệ quản trị CSDL nhờ công hệ bộ nhớ trong xVelocity Các hệ thống phân quyền bảo mật tương thích với hệ thống bảo mật của công nghệ NT (Netwwork Technology), tích hợp hệ thống bảo mật của Windows NT hoặc sử dụng hệ thống bảo vệ độc lập của SQL server Hỗ trợ trong việc triển khai CSDL phân tán và phát triển ứng dụng trên internet. Chỉ một lần viết ứng dụng, chạy được ở bất cứ đâu với các công cụ dữ liệu cảu SQL server Cho phép lập trình viên kết nối với nhiều ngôn ngữ lập trình khác nhau dùng xây dựng các ứng dụng đặc thù (visual Basic, C, C++, C#, SAP, ASP.NET, XML, Windows Form,…). Ngôn ngữ C#  Lý do chọn ngôn ngữ C# C# phù hợp với các ứng dụng ổn định chạy trên laptop, PC cài hệ điều hành Windows. Câu lệnh đơn giản, ít từ khóa Tinh năng debug rất thuận tiện Là ngôn ngữ lập trình hướng đối tương, dễ sử dụng Là cơ sở để phát triển các ứng dụng Windows form, Asp.NET, Web service Hỗ trợ nhiều thư viện hàm sẵn có giúp cho người lập trình lấy hàm dễ dàng và thuận tiện. Nhược điểm của C# là chỉ có thể chạy trên hệ điều hành Windows và .NET frame work. Giới thiệu ngôn ngữ lập trình c# C# là một ngôn ngữ lập trình ứng dụng, ngôn ngữ biên dịch, ngôn ngữ đa năng được phát triển bởi hãng Microsoft, là một phần khởi đầu cho kế hoạch .NET. Microsoft phát triển C# dựa trên C, C++ và Java. C# được miêu tả là ngôn ngữ có được sự cân bằng giữa C++, Visual Basic, Delphi và Java. Ngôn ngữ lập trình C# được đánh giá là dễ học và kết hợp được nhiều ưu điểm của các ngôn ngữ lập trình hướng đối tượng Java và C++. Do đó ngôn ngữ C# đựơc sử dụng rộng rãi nhất. C# có thể được viết với bất kỳ trình soạn thảo văn bản nào như Notepad của Windows, và sau đó biên dịch với trình biên dịch dòng lệnh của C#, csc.exe luôn đi kèm với .Net framework. Do đó mà ngày nay,  C# được rất nhiều các coder trên thế giới ưu chuộng và tìm hiều. Đặc điểm của ngôn ngữ C# C# là ngôn ngữ đơn giản 	C# loại bỏ một vài sự phức tạp và rối rắm của những ngôn ngữ như Java và c++, bao gồm việc loại bỏ những macro, những template, đa kế thừa, và lớp cơ sở ảo (virtual base class). Chúng là những nguyên nhân gây ra sự nhầm lẫn hay dẫn đến những vấn đề cho các người phát triển C++. Nếu chúng ta là người học ngôn ngữ này đầu tiên thì chắc chắn là ta sẽ không trải qua những thời gian để học nó! Nhưng khi đó ta sẽ không biết được hiệu quả của ngôn ngữ C# khi loại bỏ những vấn đề trên C# là ngôn ngữ hướng đối tượng Những đặc điểm chính của ngôn ngữ hướng đối tượng (Object-oriented language) là sự đóng gói (encapsulation), sự kế thừa (inheritance), và đa hình (polymorphism). C# hỗ trợ tất cả những đặc tính trên. Phần hướng đối tượng của C# sẽ được trình bày chi tiết trong một chương riêng ở phần sau. C# là ngôn ngữ mạnh mẽ và cũng mềm dẻo Như đã đề cập trước, với ngôn ngữ C# chúng ta chỉ bị giới hạn ở chính bởi bản thân hay là trí tưởng tượng của chúng ta. Ngôn ngữ này không đặt những ràng buộc lên những việc có thể làm. C# được sử dụng cho nhiều các dự án khác nhau như là tạo ra ứng dụng xử lý văn bản, ứng dụng đồ họa, bản tính, hay thậm chí những trình biên dịch cho các ngôn ngữ khác. C# là ngôn ngữ có ít từ khóa C# là ngôn ngữ sử dụng giới hạn những từ khóa. Phần lớn các từ khóa được sử dụng để mô tả thông tin. Chúng ta có thể nghĩ rằng một ngôn ngữ có nhiều từ khóa thì sẽ mạnh hơn. Điều này không phải sự thật, ít nhất là trong trường hợp ngôn ngữ C#, chúng ta có thể tìm thấy rằng ngôn ngữ này có thể được sử dụng để làm bất cứ nhiệm vụ nào. Bảng sau liệt kê các từ khóa của ngôn ngữ C#. Giới thiệu phần mềm Thực tế hiện nay, nhập liệu thông tin của các đối tượng từ bản cứng là công việc phổ biến hàng ngày, ở đâu cũng cần đặc biệt là những nơi phục vụ số lượng người lớn như trường học, bệnh viện ngân hàng. Và việc nhập liệu này thường mất rất nhiều thời gian cũng như công sức của con người. Chính vì vậy, chúng em xây dựng hệ thống số hóa biểu mẫu hỗ trợ nhập liệu để trợ giúp cho nhân viên nhập liệu giảm bớt công sức cũng như thời gian, khiến cho công việc trở nên thú vị đỡ nhàm chán. Phân hệ “Quản lý Biểu Mẫu” Phân hệ này giúp nhân viên quản lý hình ảnh biểu mẫu thực hiện các chức năng tìm kiếm, Tạo biểu mẫu mới, cập nhật tên biểu mẫu, xóa biểu mẫu chưa được có dữ liệu (chưa có ảnh upload). Hình 4.8 Click tạo Biểu mẫu từ giao diện Quản lý hình ảnh biểu mẫu Quy tình tạo một biểu mẫu mới:  Trước tiên dựa vào phiếu giao biểu mẫu, nhân viên kiểm tra xem biểu mẫu đã tồn tại trong hệ thống chưa, nhân viên có thể thực thiện tìm kiếm với các điều kiện lọc.  Nếu đã có nhân viên tiến hành Upload biểu mẫu. nếu chưa có nhân viên tiến hành tạo biểu mẫu mới.  Hình 4.9 Click tạo Biểu mẫu từ giao diện Quản lý hình ảnh biểu mẫu Quy trình sửa tên biểu mẫu:  Người dùng click chọn một biểu mẫu trong danh sách biểu mẫu hiển thị.  Sau đó chọn sửa biểu mẫu, hệ thống sẽ hiển thị ra màn hình cho phép người dùng sửa Tên biểu mẫu. Hình 4.10  Sửa tên biểu mẫu Quy trình xóa biểu mẫu: Người dùng chọn tick vào các check box của các bản ghi biểu mẫu muốn xóa, sau đó click Xóa biểu mẫu, hệ thống sẽ xóa những biểu mẫu chưa được upload mà người dùng đã chọn, Với những biểu mẫu khác thì sẽ không thể xóa được. Hình 4.11 Xóa biểu mẫu chưa upload ảnh Phân hệ “Upload hình ảnh lên google drive” Nhân viên chọn một biểu mẫu trong danh sách ở màn hình Quản lý Biểu mẫu rồi click Upload để chuyển sang màn hình “Upload Google drive” Màn hình này hỗ trợ người dùng thao tác với các hình ảnh trong thư mục google drive: cho phép người dùng xem các Biểu mẫu đã được upload ảnh và danh sách các ảnh được upload theo từng biểu mẫu, cho phép người dùng upload ảnh lên google drive theo từng biểu mẫu. Hình 4.12 Xem danh sách các hình ảnh đã upload theo từng biểu mẫu Quy trình Upload hình ảnh cho một biểu mẫu: Chọn file, hoặc thư mục chứa các file muốn upload. Các nút Xóa all, và Xóa file hiển thị cho phép người dùng có thể xóa file không muốn upload nữa theo ý muốn của mình. Người dùng click upload, toàn bộ hình ảnh trong danh sách người dùng chọn sẽ được thêm vào thư mục biểu mẫu tương ứng tron google drive. Hình 4.13 Xem danh sách các hình ảnh đã upload theo từng biểu mẫu Phân hệ “Định dạng biểu mẫu” Phân hệ này giúp người dùng định dạng một biểu mẫu mới và chỉnh sửa định dạng cho một biêu mẫu đã xác định . Định dạng biểu mẫu là quá trình xác định các vùng văn bản cần nhận dạng với các thông tin tên vùng nhận dạng và tọa độ kích thước vùn nhận dạng Quy trình định dạng một biểu mẫu mới: Xác đinh các vùng cần nhận dạng Click hoàn tất định dạng cho biểu mẫu Hình 4.14 Xác định các vùng cần nhận dạng Hình 4.15 Hoàn tất định dạng một biểu mẫu mới Phân hệ nhập liệu  Công việc cuối cùng là của nhân viên nhập liệu. Nhân viên Nhập liệu sẽ đăng nhập vào hệ thống, chọn biểu mẫu cần được nhập liệu thông tin và tiến hành nhập liệu. Công việc của họ thay vì gõ tất cả các thông tin thì giờ đây chỉ cần Click OCR, các thông tin tương ứng của trường sẽ được nhận dạng và tự động điền vào các ô tương ứng. Nhân viên chỉ cần chỉnh sửa nếu có sai sót và click lưu vào cơ sở dữ liệu. Phân hệ quản lý nhập liệu còn hỗ trợ chỉnh sửa , update lại thông tin đã nhận dạng, và xóa các bản ghi trong hệ thống. Quy trình nhập liệu: Chọn biểu mẫu muốn nhập liệu Ấn OCR để nhận dạng thông tin từng ảnh Chỉnh sửa thông tin nếu có sai xót Click Lưu vào cơ sở DL Đến khi hết file ảnh cần nhận dạng Hình 4.16 Màn hình nhập liệu KẾT LUẬN Kết quả đạt được Qua cả quá trình tìm hiểu và phân tích hệ thống, nghiên cứu lí thuyết về xử lý ảnh, chúng em đã xây dựng được hệ thống số hóa biểu mẫu hộ trợ nhập liệu. Kết quả cụ thể như sau: Xây dựng nghiệp vụ cho hệ thống số hóa biểu mẫu hỗ trợ nhập liệu Biết cách sử dụng thư viện mã nguồn mở Tesseract để nhận dạng ký tự Biết được các phương pháp tiền xử lý ảnh để nâng cao hiệu quả và độ chính xác của tesseract. Tiếp cận với công nghệ mới, biết cách thao tác, sử dụng Google Drive API Biết cách xây dựng ứng dụng Winform với ngôn ngữ lập trình c# và lưu trữ dữ liệu trên MS SQL Server. Hướng phát triển Triển khai hệ thống hỗ trợ nhập liệu trong thực tế Phát triển thuật toán phần tiền xử lý ảnh để nâng cao chất lượng ảnh đầu vào để tăng độ chính xác nhận dạng, và có thể xử lý đa dạng các biểu mẫu ở dạng scan cũng như ảnh chụp. TÀI LIỆU THAM KHẢO [1] HELIŃSKI, Marcin; KMIECIAK, Miłosz; PARKOŁA, Tomasz. Report on the comparison of Tesseract and ABBYY FineReader OCR engines. Improving Access to Text, 2012. [2] SMITH, Ray. Tesseract ocr engine. Lecture. Google Code. Google Inc, 2007.  [3] SMITH, Ray. An overview of the Tesseract OCR engine. In: icdar. IEEE, 2007. p. 629-633. [4] OTSU, Nobuyuki. A threshold selection method from gray-level histograms. Automatica, 1975, 11.285-296: 23-27. [5] Link công nghệ http://www.ieev.org/2009/06/bo-loc-trung-vi-median-filter.html  http://www.ieev.org/2009/06/bo-loc-trung-binh-mean-filter-hay.html  http://www.ieev.org/2011/06/phan-hoach-anh-va-otsu.html  http://vorba.ch/2014/tesseract-3.03-vs2013.html  https://github.com/charlesw/tesseract-vs2012  