@model TextEditor.Models.CrudFileTable
@using Microsoft.AspNet.Identity
@using TextEditor.Controllers
@{
    ViewBag.Title = "Index";

    List<SelectListItem> type = new List<SelectListItem>();
    type.Add(new SelectListItem { Text = "Cover", Value = "Cover" });
    type.Add(new SelectListItem { Text = "Side Cover", Value = "SCover" });
    type.Add(new SelectListItem { Text = "Normal", Value = "Normal" });

    PagePropertiesFormatController ppfc = new PagePropertiesFormatController();


}

<h1>File của @User.Identity.GetUserName()</h1>

<div class="row" style="margin-top:20px;">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">File</h3>
            </div>
            <div class="panel-body">
               @using (Html.BeginForm("index", "file", FormMethod.Post, new { enctype = "multipart/form-data" }))
               {
                @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-4">
                            <div class="input-group">
                                <input type="file" name="fileUpload" onchange="validate_fileupload(this.value);" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.FileTableUpload.PageId, new SelectList(ViewBag.PageFormatList, "Value", "Text"), new { @id = "PageId", @class = "selectpicker form-control" })
                            @Html.ValidationMessageFor(model => model.FileTableUpload.PageId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            <button id="btn_upload_file" class="btn btn-default" type="submit">Upload</button>
                        </div>
                    </div>
                }
                
            </div>
        </div>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Time
        </th>
        <th>
            Type
        </th>
        <th>

        </th>
    </tr>

@foreach (var item in Model.FiletableView) {
    <tr>
        <td>
            <a href="Upload/@item.Name">@Html.DisplayFor(modelItem => item.Name)</a>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Time)
        </td>
        <td>
            @ppfc.GetPageFormatName(item.PageId)
        </td>
        <td>
            <a href="@Url.Action("Format","Check", new {id = item.Id })">Check</a> |
            <a href="@Url.Action("Gramar","Check", new {id = item.Id })">Gramar</a> |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
}

</table>

@section Scripts
{
    <script>
        function validate_fileupload(fileName) {
            var allowed_extensions = new Array("docx");
            var file_extension = fileName.split('.').pop(); // split function will split the filename by dot(.), and pop function will pop the last element from the array which will give you the extension as well. If there will be no extension then it will return the filename.

            for (var i = 0; i <= allowed_extensions.length; i++) {
                if (allowed_extensions[i] == file_extension) {
                    return true; // valid file extension
                }
            }
            window.alert("Only Support File DOCX");
            return false;
        }
    </script>
    
}